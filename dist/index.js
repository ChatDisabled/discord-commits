(()=>{var __webpack_modules__={87351:function(e,t,i){"use strict";var s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var i in e)if(Object.hasOwnProperty.call(e,i))t[i]=e[i];t["default"]=e;return t};Object.defineProperty(t,"__esModule",{value:true});const r=s(i(22037));function issueCommand(e,t,i){const s=new Command(e,t,i);process.stdout.write(s.toString()+r.EOL)}t.issueCommand=issueCommand;function issue(e,t=""){issueCommand(e,{},t)}t.issue=issue;const o="::";class Command{constructor(e,t,i){if(!e){e="missing.command"}this.command=e;this.properties=t;this.message=i}toString(){let e=o+this.command;if(this.properties&&Object.keys(this.properties).length>0){e+=" ";let t=true;for(const i in this.properties){if(this.properties.hasOwnProperty(i)){const s=this.properties[i];if(s){if(t){t=false}else{e+=","}e+=`${i}=${escapeProperty(s)}`}}}}e+=`${o}${escapeData(this.message)}`;return e}}function escapeData(e){return(e||"").replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}function escapeProperty(e){return(e||"").replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}},42186:function(e,t,i){"use strict";var s=this&&this.__awaiter||function(e,t,i,s){function adopt(e){return e instanceof i?e:new i((function(t){t(e)}))}return new(i||(i=Promise))((function(i,r){function fulfilled(e){try{step(s.next(e))}catch(e){r(e)}}function rejected(e){try{step(s["throw"](e))}catch(e){r(e)}}function step(e){e.done?i(e.value):adopt(e.value).then(fulfilled,rejected)}step((s=s.apply(e,t||[])).next())}))};var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var i in e)if(Object.hasOwnProperty.call(e,i))t[i]=e[i];t["default"]=e;return t};Object.defineProperty(t,"__esModule",{value:true});const o=i(87351);const l=r(i(22037));const c=r(i(71017));var u;(function(e){e[e["Success"]=0]="Success";e[e["Failure"]=1]="Failure"})(u=t.ExitCode||(t.ExitCode={}));function exportVariable(e,t){process.env[e]=t;o.issueCommand("set-env",{name:e},t)}t.exportVariable=exportVariable;function setSecret(e){o.issueCommand("add-mask",{},e)}t.setSecret=setSecret;function addPath(e){o.issueCommand("add-path",{},e);process.env["PATH"]=`${e}${c.delimiter}${process.env["PATH"]}`}t.addPath=addPath;function getInput(e,t){const i=process.env[`INPUT_${e.replace(/ /g,"_").toUpperCase()}`]||"";if(t&&t.required&&!i){throw new Error(`Input required and not supplied: ${e}`)}return i.trim()}t.getInput=getInput;function setOutput(e,t){o.issueCommand("set-output",{name:e},t)}t.setOutput=setOutput;function setFailed(e){process.exitCode=u.Failure;error(e)}t.setFailed=setFailed;function isDebug(){return process.env["RUNNER_DEBUG"]==="1"}t.isDebug=isDebug;function debug(e){o.issueCommand("debug",{},e)}t.debug=debug;function error(e){o.issue("error",e)}t.error=error;function warning(e){o.issue("warning",e)}t.warning=warning;function info(e){process.stdout.write(e+l.EOL)}t.info=info;function startGroup(e){o.issue("group",e)}t.startGroup=startGroup;function endGroup(){o.issue("endgroup")}t.endGroup=endGroup;function group(e,t){return s(this,void 0,void 0,(function*(){startGroup(e);let i;try{i=yield t()}finally{endGroup()}return i}))}t.group=group;function saveState(e,t){o.issueCommand("save-state",{name:e},t)}t.saveState=saveState;function getState(e){return process.env[`STATE_${e}`]||""}t.getState=getState},74087:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const s=i(57147);const r=i(22037);class Context{constructor(){this.payload={};if(process.env.GITHUB_EVENT_PATH){if(s.existsSync(process.env.GITHUB_EVENT_PATH)){this.payload=JSON.parse(s.readFileSync(process.env.GITHUB_EVENT_PATH,{encoding:"utf8"}))}else{const e=process.env.GITHUB_EVENT_PATH;process.stdout.write(`GITHUB_EVENT_PATH ${e} does not exist${r.EOL}`)}}this.eventName=process.env.GITHUB_EVENT_NAME;this.sha=process.env.GITHUB_SHA;this.ref=process.env.GITHUB_REF;this.workflow=process.env.GITHUB_WORKFLOW;this.action=process.env.GITHUB_ACTION;this.actor=process.env.GITHUB_ACTOR}get issue(){const e=this.payload;return Object.assign(Object.assign({},this.repo),{number:(e.issue||e.pull_request||e).number})}get repo(){if(process.env.GITHUB_REPOSITORY){const[e,t]=process.env.GITHUB_REPOSITORY.split("/");return{owner:e,repo:t}}if(this.payload.repository){return{owner:this.payload.repository.owner.login,repo:this.payload.repository.name}}throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'")}}t.Context=Context},95438:function(e,t,i){"use strict";var s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var i in e)if(Object.hasOwnProperty.call(e,i))t[i]=e[i];t["default"]=e;return t};Object.defineProperty(t,"__esModule",{value:true});const r=i(88467);const o=i(29351);const l=s(i(74087));const c=s(i(39925));o.Octokit.prototype=new o.Octokit;t.context=new l.Context;class GitHub extends o.Octokit{constructor(e,t){super(GitHub.getOctokitOptions(GitHub.disambiguate(e,t)));this.graphql=GitHub.getGraphQL(GitHub.disambiguate(e,t))}static disambiguate(e,t){return[typeof e==="string"?e:"",typeof e==="object"?e:t||{}]}static getOctokitOptions(e){const t=e[0];const i=Object.assign({},e[1]);const s=GitHub.getAuthString(t,i);if(s){i.auth=s}const r=GitHub.getProxyAgent(i);if(r){i.request=i.request?Object.assign({},i.request):{};i.request.agent=r}return i}static getGraphQL(e){const t={};const i=e[0];const s=e[1];const o=this.getAuthString(i,s);if(o){t.headers={authorization:o}}const l=GitHub.getProxyAgent(s);if(l){t.request={agent:l}}return r.graphql.defaults(t)}static getAuthString(e,t){if(!e&&!t.auth){throw new Error("Parameter token or opts.auth is required")}else if(e&&t.auth){throw new Error("Parameters token and opts.auth may not both be specified")}return typeof t.auth==="string"?t.auth:`token ${e}`}static getProxyAgent(e){var t;if(!((t=e.request)===null||t===void 0?void 0:t.agent)){const e="https://api.github.com";if(c.getProxyUrl(e)){const t=new c.HttpClient;return t.getAgent(e)}}return undefined}}t.GitHub=GitHub},39925:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const s=i(57310);const r=i(13685);const o=i(95687);const l=i(16443);let c;var u;(function(e){e[e["OK"]=200]="OK";e[e["MultipleChoices"]=300]="MultipleChoices";e[e["MovedPermanently"]=301]="MovedPermanently";e[e["ResourceMoved"]=302]="ResourceMoved";e[e["SeeOther"]=303]="SeeOther";e[e["NotModified"]=304]="NotModified";e[e["UseProxy"]=305]="UseProxy";e[e["SwitchProxy"]=306]="SwitchProxy";e[e["TemporaryRedirect"]=307]="TemporaryRedirect";e[e["PermanentRedirect"]=308]="PermanentRedirect";e[e["BadRequest"]=400]="BadRequest";e[e["Unauthorized"]=401]="Unauthorized";e[e["PaymentRequired"]=402]="PaymentRequired";e[e["Forbidden"]=403]="Forbidden";e[e["NotFound"]=404]="NotFound";e[e["MethodNotAllowed"]=405]="MethodNotAllowed";e[e["NotAcceptable"]=406]="NotAcceptable";e[e["ProxyAuthenticationRequired"]=407]="ProxyAuthenticationRequired";e[e["RequestTimeout"]=408]="RequestTimeout";e[e["Conflict"]=409]="Conflict";e[e["Gone"]=410]="Gone";e[e["TooManyRequests"]=429]="TooManyRequests";e[e["InternalServerError"]=500]="InternalServerError";e[e["NotImplemented"]=501]="NotImplemented";e[e["BadGateway"]=502]="BadGateway";e[e["ServiceUnavailable"]=503]="ServiceUnavailable";e[e["GatewayTimeout"]=504]="GatewayTimeout"})(u=t.HttpCodes||(t.HttpCodes={}));var m;(function(e){e["Accept"]="accept";e["ContentType"]="content-type"})(m=t.Headers||(t.Headers={}));var g;(function(e){e["ApplicationJson"]="application/json"})(g=t.MediaTypes||(t.MediaTypes={}));function getProxyUrl(e){let t=l.getProxyUrl(s.parse(e));return t?t.href:""}t.getProxyUrl=getProxyUrl;const v=[u.MovedPermanently,u.ResourceMoved,u.SeeOther,u.TemporaryRedirect,u.PermanentRedirect];const _=[u.BadGateway,u.ServiceUnavailable,u.GatewayTimeout];const T=["OPTIONS","GET","DELETE","HEAD"];const x=10;const S=5;class HttpClientResponse{constructor(e){this.message=e}readBody(){return new Promise((async(e,t)=>{let i=Buffer.alloc(0);this.message.on("data",(e=>{i=Buffer.concat([i,e])}));this.message.on("end",(()=>{e(i.toString())}))}))}}t.HttpClientResponse=HttpClientResponse;function isHttps(e){let t=s.parse(e);return t.protocol==="https:"}t.isHttps=isHttps;class HttpClient{constructor(e,t,i){this._ignoreSslError=false;this._allowRedirects=true;this._allowRedirectDowngrade=false;this._maxRedirects=50;this._allowRetries=false;this._maxRetries=1;this._keepAlive=false;this._disposed=false;this.userAgent=e;this.handlers=t||[];this.requestOptions=i;if(i){if(i.ignoreSslError!=null){this._ignoreSslError=i.ignoreSslError}this._socketTimeout=i.socketTimeout;if(i.allowRedirects!=null){this._allowRedirects=i.allowRedirects}if(i.allowRedirectDowngrade!=null){this._allowRedirectDowngrade=i.allowRedirectDowngrade}if(i.maxRedirects!=null){this._maxRedirects=Math.max(i.maxRedirects,0)}if(i.keepAlive!=null){this._keepAlive=i.keepAlive}if(i.allowRetries!=null){this._allowRetries=i.allowRetries}if(i.maxRetries!=null){this._maxRetries=i.maxRetries}}}options(e,t){return this.request("OPTIONS",e,null,t||{})}get(e,t){return this.request("GET",e,null,t||{})}del(e,t){return this.request("DELETE",e,null,t||{})}post(e,t,i){return this.request("POST",e,t,i||{})}patch(e,t,i){return this.request("PATCH",e,t,i||{})}put(e,t,i){return this.request("PUT",e,t,i||{})}head(e,t){return this.request("HEAD",e,null,t||{})}sendStream(e,t,i,s){return this.request(e,t,i,s)}async getJson(e,t={}){t[m.Accept]=this._getExistingOrDefaultHeader(t,m.Accept,g.ApplicationJson);let i=await this.get(e,t);return this._processResponse(i,this.requestOptions)}async postJson(e,t,i={}){let s=JSON.stringify(t,null,2);i[m.Accept]=this._getExistingOrDefaultHeader(i,m.Accept,g.ApplicationJson);i[m.ContentType]=this._getExistingOrDefaultHeader(i,m.ContentType,g.ApplicationJson);let r=await this.post(e,s,i);return this._processResponse(r,this.requestOptions)}async putJson(e,t,i={}){let s=JSON.stringify(t,null,2);i[m.Accept]=this._getExistingOrDefaultHeader(i,m.Accept,g.ApplicationJson);i[m.ContentType]=this._getExistingOrDefaultHeader(i,m.ContentType,g.ApplicationJson);let r=await this.put(e,s,i);return this._processResponse(r,this.requestOptions)}async patchJson(e,t,i={}){let s=JSON.stringify(t,null,2);i[m.Accept]=this._getExistingOrDefaultHeader(i,m.Accept,g.ApplicationJson);i[m.ContentType]=this._getExistingOrDefaultHeader(i,m.ContentType,g.ApplicationJson);let r=await this.patch(e,s,i);return this._processResponse(r,this.requestOptions)}async request(e,t,i,r){if(this._disposed){throw new Error("Client has already been disposed.")}let o=s.parse(t);let l=this._prepareRequest(e,o,r);let c=this._allowRetries&&T.indexOf(e)!=-1?this._maxRetries+1:1;let m=0;let g;while(m<c){g=await this.requestRaw(l,i);if(g&&g.message&&g.message.statusCode===u.Unauthorized){let e;for(let t=0;t<this.handlers.length;t++){if(this.handlers[t].canHandleAuthentication(g)){e=this.handlers[t];break}}if(e){return e.handleAuthentication(this,l,i)}else{return g}}let t=this._maxRedirects;while(v.indexOf(g.message.statusCode)!=-1&&this._allowRedirects&&t>0){const c=g.message.headers["location"];if(!c){break}let u=s.parse(c);if(o.protocol=="https:"&&o.protocol!=u.protocol&&!this._allowRedirectDowngrade){throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.")}await g.readBody();if(u.hostname!==o.hostname){for(let e in r){if(e.toLowerCase()==="authorization"){delete r[e]}}}l=this._prepareRequest(e,u,r);g=await this.requestRaw(l,i);t--}if(_.indexOf(g.message.statusCode)==-1){return g}m+=1;if(m<c){await g.readBody();await this._performExponentialBackoff(m)}}return g}dispose(){if(this._agent){this._agent.destroy()}this._disposed=true}requestRaw(e,t){return new Promise(((i,s)=>{let callbackForResult=function(e,t){if(e){s(e)}i(t)};this.requestRawWithCallback(e,t,callbackForResult)}))}requestRawWithCallback(e,t,i){let s;if(typeof t==="string"){e.options.headers["Content-Length"]=Buffer.byteLength(t,"utf8")}let r=false;let handleResult=(e,t)=>{if(!r){r=true;i(e,t)}};let o=e.httpModule.request(e.options,(e=>{let t=new HttpClientResponse(e);handleResult(null,t)}));o.on("socket",(e=>{s=e}));o.setTimeout(this._socketTimeout||3*6e4,(()=>{if(s){s.end()}handleResult(new Error("Request timeout: "+e.options.path),null)}));o.on("error",(function(e){handleResult(e,null)}));if(t&&typeof t==="string"){o.write(t,"utf8")}if(t&&typeof t!=="string"){t.on("close",(function(){o.end()}));t.pipe(o)}else{o.end()}}getAgent(e){let t=s.parse(e);return this._getAgent(t)}_prepareRequest(e,t,i){const s={};s.parsedUrl=t;const l=s.parsedUrl.protocol==="https:";s.httpModule=l?o:r;const c=l?443:80;s.options={};s.options.host=s.parsedUrl.hostname;s.options.port=s.parsedUrl.port?parseInt(s.parsedUrl.port):c;s.options.path=(s.parsedUrl.pathname||"")+(s.parsedUrl.search||"");s.options.method=e;s.options.headers=this._mergeHeaders(i);if(this.userAgent!=null){s.options.headers["user-agent"]=this.userAgent}s.options.agent=this._getAgent(s.parsedUrl);if(this.handlers){this.handlers.forEach((e=>{e.prepareRequest(s.options)}))}return s}_mergeHeaders(e){const lowercaseKeys=e=>Object.keys(e).reduce(((t,i)=>(t[i.toLowerCase()]=e[i],t)),{});if(this.requestOptions&&this.requestOptions.headers){return Object.assign({},lowercaseKeys(this.requestOptions.headers),lowercaseKeys(e))}return lowercaseKeys(e||{})}_getExistingOrDefaultHeader(e,t,i){const lowercaseKeys=e=>Object.keys(e).reduce(((t,i)=>(t[i.toLowerCase()]=e[i],t)),{});let s;if(this.requestOptions&&this.requestOptions.headers){s=lowercaseKeys(this.requestOptions.headers)[t]}return e[t]||s||i}_getAgent(e){let t;let s=l.getProxyUrl(e);let u=s&&s.hostname;if(this._keepAlive&&u){t=this._proxyAgent}if(this._keepAlive&&!u){t=this._agent}if(!!t){return t}const m=e.protocol==="https:";let g=100;if(!!this.requestOptions){g=this.requestOptions.maxSockets||r.globalAgent.maxSockets}if(u){if(!c){c=i(74294)}const e={maxSockets:g,keepAlive:this._keepAlive,proxy:{proxyAuth:s.auth,host:s.hostname,port:s.port}};let r;const o=s.protocol==="https:";if(m){r=o?c.httpsOverHttps:c.httpsOverHttp}else{r=o?c.httpOverHttps:c.httpOverHttp}t=r(e);this._proxyAgent=t}if(this._keepAlive&&!t){const e={keepAlive:this._keepAlive,maxSockets:g};t=m?new o.Agent(e):new r.Agent(e);this._agent=t}if(!t){t=m?o.globalAgent:r.globalAgent}if(m&&this._ignoreSslError){t.options=Object.assign(t.options||{},{rejectUnauthorized:false})}return t}_performExponentialBackoff(e){e=Math.min(x,e);const t=S*Math.pow(2,e);return new Promise((e=>setTimeout((()=>e()),t)))}static dateTimeDeserializer(e,t){if(typeof t==="string"){let e=new Date(t);if(!isNaN(e.valueOf())){return e}}return t}async _processResponse(e,t){return new Promise((async(i,s)=>{const r=e.message.statusCode;const o={statusCode:r,result:null,headers:{}};if(r==u.NotFound){i(o)}let l;let c;try{c=await e.readBody();if(c&&c.length>0){if(t&&t.deserializeDates){l=JSON.parse(c,HttpClient.dateTimeDeserializer)}else{l=JSON.parse(c)}o.result=l}o.headers=e.message.headers}catch(e){}if(r>299){let e;if(l&&l.message){e=l.message}else if(c&&c.length>0){e=c}else{e="Failed request: ("+r+")"}let t=new Error(e);t["statusCode"]=r;if(o.result){t["result"]=o.result}s(t)}else{i(o)}}))}}t.HttpClient=HttpClient},16443:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const s=i(57310);function getProxyUrl(e){let t=e.protocol==="https:";let i;if(checkBypass(e)){return i}let r;if(t){r=process.env["https_proxy"]||process.env["HTTPS_PROXY"]}else{r=process.env["http_proxy"]||process.env["HTTP_PROXY"]}if(r){i=s.parse(r)}return i}t.getProxyUrl=getProxyUrl;function checkBypass(e){if(!e.hostname){return false}let t=process.env["no_proxy"]||process.env["NO_PROXY"]||"";if(!t){return false}let i;if(e.port){i=Number(e.port)}else if(e.protocol==="http:"){i=80}else if(e.protocol==="https:"){i=443}let s=[e.hostname.toUpperCase()];if(typeof i==="number"){s.push(`${s[0]}:${i}`)}for(let e of t.split(",").map((e=>e.trim().toUpperCase())).filter((e=>e))){if(s.some((t=>t===e))){return true}}return false}t.checkBypass=checkBypass},50938:(e,t,i)=>{var s=Object.create;var r=Object.defineProperty;var o=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var c=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var je=(e,t,i)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i;var Ce=e=>r(e,"__esModule",{value:!0});var w=(e,t)=>{for(var i in t)r(e,i,{get:t[i],enumerable:!0})},fe=(e,t,i,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let c of l(t))!u.call(e,c)&&(i||c!=="default")&&r(e,c,{get:()=>t[c],enumerable:!(s=o(t,c))||s.enumerable});return e},Ze=(e,t)=>fe(Ce(r(e!=null?s(c(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),m=(e=>(t,i)=>e&&e.get(t)||(i=fe(Ce({}),t,1),e&&e.set(t,i),i))(typeof WeakMap!="undefined"?new WeakMap:0),p=(e,t,i,s)=>{for(var l=s>1?void 0:s?o(t,i):t,c=e.length-1,u;c>=0;c--)(u=e[c])&&(l=(s?u(t,i,l):u(l))||l);return s&&l&&r(t,i,l),l};var n=(e,t,i)=>(je(e,typeof t!="symbol"?t+"":t,i),i);var g={};w(g,{ContextMenuCommandAssertions:()=>_t,ContextMenuCommandBuilder:()=>xt,Embed:()=>j,EmbedAssertions:()=>v,Faces:()=>H,SlashCommandAssertions:()=>$,SlashCommandBooleanOption:()=>re,SlashCommandBuilder:()=>vt,SlashCommandChannelOption:()=>ve,SlashCommandIntegerOption:()=>Oe,SlashCommandMentionableOption:()=>ke,SlashCommandNumberOption:()=>qe,SlashCommandRoleOption:()=>Ve,SlashCommandStringOption:()=>$e,SlashCommandSubcommandBuilder:()=>ft,SlashCommandSubcommandGroupBuilder:()=>ht,SlashCommandUserOption:()=>We,TimestampStyles:()=>B,blockQuote:()=>nt,bold:()=>Ye,channelMention:()=>mt,codeBlock:()=>Qe,formatEmoji:()=>dt,hideLinkEmbed:()=>ot,hyperlink:()=>rt,inlineCode:()=>He,italic:()=>Xe,memberNicknameMention:()=>pt,quote:()=>it,roleMention:()=>lt,spoiler:()=>at,strikethrough:()=>tt,time:()=>ct,underscore:()=>et,userMention:()=>st});var v={};w(v,{authorNamePredicate:()=>O,colorPredicate:()=>k,descriptionPredicate:()=>P,embedFieldPredicate:()=>A,embedFieldsArrayPredicate:()=>I,fieldInlinePredicate:()=>S,fieldLengthPredicate:()=>N,fieldNamePredicate:()=>T,fieldValuePredicate:()=>x,footerTextPredicate:()=>M,timestampPredicate:()=>q,titlePredicate:()=>G,urlPredicate:()=>R,validateFieldLength:()=>L});var _=i(63301),T=_.z.string().min(1).max(256),x=_.z.string().min(1).max(1024),S=_.z.boolean().optional(),A=_.z.object({name:T,value:x,inline:S}),I=A.array(),N=_.z.number().lte(25);function L(e,t){N.parse(e.length+t)}var O=T.nullable(),R=_.z.string().url().nullish(),k=_.z.number().gte(0).lte(16777215).nullable(),P=_.z.string().min(1).max(4096).nullable(),M=_.z.string().min(1).max(2048).nullable(),q=_.z.union([_.z.number(),_.z.date()]).nullable(),G=T.nullable();var j=class{constructor(e={}){n(this,"fields");n(this,"title");n(this,"description");n(this,"url");n(this,"color");n(this,"timestamp");n(this,"thumbnail");n(this,"image");n(this,"video");n(this,"author");n(this,"provider");n(this,"footer");this.title=e.title,this.description=e.description,this.url=e.url,this.color=e.color,this.thumbnail=e.thumbnail,this.image=e.image,this.video=e.video,this.author=e.author,this.provider=e.provider,this.footer=e.footer,this.fields=e.fields??[],e.timestamp&&(this.timestamp=new Date(e.timestamp).toISOString())}get length(){return(this.title?.length??0)+(this.description?.length??0)+this.fields.reduce(((e,t)=>e+t.name.length+t.value.length),0)+(this.footer?.text.length??0)+(this.author?.name.length??0)}addField(e){return this.addFields(e)}addFields(...e){return I.parse(e),L(this.fields,e.length),this.fields.push(...j.normalizeFields(...e)),this}spliceFields(e,t,...i){return I.parse(i),L(this.fields,i.length-t),this.fields.splice(e,t,...j.normalizeFields(...i)),this}setAuthor(e){if(e===null)return this.author=void 0,this;let{name:t,iconURL:i,url:s}=e;return O.parse(t),R.parse(i),R.parse(s),this.author={name:t,url:s,icon_url:i},this}setColor(e){return k.parse(e),this.color=e??void 0,this}setDescription(e){return P.parse(e),this.description=e??void 0,this}setFooter(e){if(e===null)return this.footer=void 0,this;let{text:t,iconURL:i}=e;return M.parse(t),R.parse(i),this.footer={text:t,icon_url:i},this}setImage(e){return R.parse(e),this.image=e?{url:e}:void 0,this}setThumbnail(e){return R.parse(e),this.thumbnail=e?{url:e}:void 0,this}setTimestamp(e=Date.now()){return q.parse(e),this.timestamp=e?new Date(e).toISOString():void 0,this}setTitle(e){return G.parse(e),this.title=e??void 0,this}setURL(e){return R.parse(e),this.url=e??void 0,this}toJSON(){return{...this}}static normalizeFields(...e){return e.flat(1/0).map((e=>(T.parse(e.name),x.parse(e.value),S.parse(e.inline),{name:e.name,value:e.value,inline:e.inline??void 0})))}};function Qe(e,t){return typeof t=="undefined"?`\`\`\`\n${e}\`\`\``:`\`\`\`${e}\n${t}\`\`\``}function He(e){return`\`${e}\``}function Xe(e){return`_${e}_`}function Ye(e){return`**${e}**`}function et(e){return`__${e}__`}function tt(e){return`~~${e}~~`}function it(e){return`> ${e}`}function nt(e){return`>>> ${e}`}function ot(e){return`<${e}>`}function rt(e,t,i){return i?`[${e}](${t} "${i}")`:`[${e}](${t})`}function at(e){return`||${e}||`}function st(e){return`<@${e}>`}function pt(e){return`<@!${e}>`}function mt(e){return`<#${e}>`}function lt(e){return`<@&${e}>`}function dt(e,t=!1){return`<${t?"a":""}:_:${e}>`}function ct(e,t){return typeof e!="number"&&(e=Math.floor((e?.getTime()??Date.now())/1e3)),typeof t=="string"?`<t:${e}:${t}>`:`<t:${e}>`}var B={ShortTime:"t",LongTime:"T",ShortDate:"d",LongDate:"D",ShortDateTime:"f",LongDateTime:"F",RelativeTime:"R"},H=(e=>(e.Shrug="¯\\_(ツ)\\_/¯",e.Tableflip="(╯°□°）╯︵ ┻━┻",e.Unflip="┬─┬ ノ( ゜-゜ノ)",e))(H||{});var $={};w($,{assertReturnOfBuilder:()=>C,validateDefaultPermission:()=>ne,validateDescription:()=>D,validateMaxChoicesLength:()=>oe,validateMaxOptionsLength:()=>d,validateName:()=>U,validateRequired:()=>F,validateRequiredParameters:()=>h});var z=Ze(i(7678)),W=i(63301);function h(e,t,i){U(e),D(t),d(i)}var Y=W.z.string().min(1).max(32).regex(/^[\P{Lu}\p{N}_-]+$/u);function U(e){Y.parse(e)}var J=W.z.string().min(1).max(100);function D(e){J.parse(e)}var X=W.z.boolean();function ne(e){X.parse(e)}function F(e){X.parse(e)}var Q=W.z.unknown().array().max(25);function d(e){Q.parse(e)}function oe(e){Q.parse(e)}function C(e,t){let i=t.name;if(z.default.nullOrUndefined(e))throw new TypeError(`Expected to receive a ${i} builder, got ${e===null?"null":"undefined"} instead.`);if(z.default.primitive(e))throw new TypeError(`Expected to receive a ${i} builder, got a primitive (${typeof e}) instead.`);if(!(e instanceof t)){let t=e,s=z.default.function_(e)?e.name:t.constructor.name,r=Reflect.get(t,Symbol.toStringTag),o=r?`${s} [${r}]`:s;throw new TypeError(`Expected to receive a ${i} builder, got ${o} instead.`)}}var ee=i(62909);var te=i(69787);var ie=class{constructor(){n(this,"name");n(this,"description")}setName(e){return U(e),Reflect.set(this,"name",e),this}setDescription(e){return D(e),Reflect.set(this,"description",e),this}};var se=class extends ie{constructor(){super(...arguments);n(this,"required",!1)}setRequired(e){return F(e),Reflect.set(this,"required",e),this}runRequiredValidations(){h(this.name,this.description,[]),F(this.required)}};var re=class extends se{constructor(){super(...arguments);n(this,"type",te.ApplicationCommandOptionType.Boolean)}toJSON(){return this.runRequiredValidations(),{...this}}};var ae=i(69787),pe=i(62909);var le=i(69787),ue=i(63301),me=[le.ChannelType.GuildText,le.ChannelType.GuildVoice,le.ChannelType.GuildCategory,le.ChannelType.GuildNews,le.ChannelType.GuildStore,le.ChannelType.GuildNewsThread,le.ChannelType.GuildPublicThread,le.ChannelType.GuildPrivateThread,le.ChannelType.GuildStageVoice],he=ue.z.union(me.map((e=>ue.z.literal(e)))),ge=class{constructor(){n(this,"channel_types")}addChannelType(e){return this.channel_types===void 0&&Reflect.set(this,"channel_types",[]),he.parse(e),this.channel_types.push(e),this}addChannelTypes(e){return e.forEach((e=>this.addChannelType(e))),this}};var ve=class extends se{constructor(){super(...arguments);n(this,"type",ae.ApplicationCommandOptionType.Channel)}toJSON(){return this.runRequiredValidations(),{...this}}};ve=p([(0,pe.mix)(ge)],ve);var _e=i(69787),ye=i(62909),be=i(63301);var Ee=class{constructor(){n(this,"maxValue");n(this,"minValue")}};var we=i(69787),Te=i(63301);var xe=Te.z.string().min(1).max(100),Se=Te.z.number().gt(-1/0).lt(1/0),Ae=Te.z.tuple([xe,Te.z.union([xe,Se])]).array(),Ie=Te.z.boolean(),Ne=class{constructor(){n(this,"choices");n(this,"autocomplete");n(this,"type")}addChoice(e,t){if(this.autocomplete)throw new RangeError("Autocomplete and choices are mutually exclusive to each other.");return this.choices===void 0&&Reflect.set(this,"choices",[]),oe(this.choices),xe.parse(e),this.type===we.ApplicationCommandOptionType.String?xe.parse(t):Se.parse(t),this.choices.push({name:e,value:t}),this}addChoices(e){if(this.autocomplete)throw new RangeError("Autocomplete and choices are mutually exclusive to each other.");Ae.parse(e);for(let[t,i]of e)this.addChoice(t,i);return this}setChoices(e){if(e.length>0&&this.autocomplete)throw new RangeError("Autocomplete and choices are mutually exclusive to each other.");Ae.parse(e),Reflect.set(this,"choices",[]);for(let[t,i]of e)this.addChoice(t,i);return this}setAutocomplete(e){if(Ie.parse(e),e&&Array.isArray(this.choices)&&this.choices.length>0)throw new RangeError("Autocomplete and choices are mutually exclusive to each other.");return Reflect.set(this,"autocomplete",e),this}};var De=be.z.number().int().nonnegative(),Oe=class extends se{constructor(){super(...arguments);n(this,"type",_e.ApplicationCommandOptionType.Integer)}setMaxValue(e){return De.parse(e),Reflect.set(this,"maxValue",e),this}setMinValue(e){return De.parse(e),Reflect.set(this,"minValue",e),this}toJSON(){if(this.runRequiredValidations(),this.autocomplete&&Array.isArray(this.choices)&&this.choices.length>0)throw new RangeError("Autocomplete and choices are mutually exclusive to each other.");return{...this}}};Oe=p([(0,ye.mix)(Ee,Ne)],Oe);var Re=i(69787);var ke=class extends se{constructor(){super(...arguments);n(this,"type",Re.ApplicationCommandOptionType.Mentionable)}toJSON(){return this.runRequiredValidations(),{...this}}};var Le=i(69787),Pe=i(62909),Me=i(63301);var Ue=Me.z.number().nonnegative(),qe=class extends se{constructor(){super(...arguments);n(this,"type",Le.ApplicationCommandOptionType.Number)}setMaxValue(e){return Ue.parse(e),Reflect.set(this,"maxValue",e),this}setMinValue(e){return Ue.parse(e),Reflect.set(this,"minValue",e),this}toJSON(){if(this.runRequiredValidations(),this.autocomplete&&Array.isArray(this.choices)&&this.choices.length>0)throw new RangeError("Autocomplete and choices are mutually exclusive to each other.");return{...this}}};qe=p([(0,Pe.mix)(Ee,Ne)],qe);var Ge=i(69787);var Ve=class extends se{constructor(){super(...arguments);n(this,"type",Ge.ApplicationCommandOptionType.Role)}toJSON(){return this.runRequiredValidations(),{...this}}};var Be=i(69787),Fe=i(62909);var $e=class extends se{constructor(){super(...arguments);n(this,"type",Be.ApplicationCommandOptionType.String)}toJSON(){if(this.runRequiredValidations(),this.autocomplete&&Array.isArray(this.choices)&&this.choices.length>0)throw new RangeError("Autocomplete and choices are mutually exclusive to each other.");return{...this}}};$e=p([(0,Fe.mix)(Ne)],$e);var ze=i(69787);var We=class extends se{constructor(){super(...arguments);n(this,"type",ze.ApplicationCommandOptionType.User)}toJSON(){return this.runRequiredValidations(),{...this}}};var Ke=class{constructor(){n(this,"options")}addBooleanOption(e){return this._sharedAddOptionMethod(e,re)}addUserOption(e){return this._sharedAddOptionMethod(e,We)}addChannelOption(e){return this._sharedAddOptionMethod(e,ve)}addRoleOption(e){return this._sharedAddOptionMethod(e,Ve)}addMentionableOption(e){return this._sharedAddOptionMethod(e,ke)}addStringOption(e){return this._sharedAddOptionMethod(e,$e)}addIntegerOption(e){return this._sharedAddOptionMethod(e,Oe)}addNumberOption(e){return this._sharedAddOptionMethod(e,qe)}_sharedAddOptionMethod(e,t){let{options:i}=this;d(i);let s=typeof e=="function"?e(new t):e;return C(s,t),i.push(s),this}};var Je=i(69787),ut=i(62909);var ht=class{constructor(){n(this,"name");n(this,"description");n(this,"options",[])}addSubcommand(e){let{options:t}=this;d(t);let i=typeof e=="function"?e(new ft):e;return C(i,ft),t.push(i),this}toJSON(){return h(this.name,this.description,this.options),{type:Je.ApplicationCommandOptionType.SubcommandGroup,name:this.name,description:this.description,options:this.options.map((e=>e.toJSON()))}}};ht=p([(0,ut.mix)(ie)],ht);var ft=class{constructor(){n(this,"name");n(this,"description");n(this,"options",[])}toJSON(){return h(this.name,this.description,this.options),{type:Je.ApplicationCommandOptionType.Subcommand,name:this.name,description:this.description,options:this.options.map((e=>e.toJSON()))}}};ft=p([(0,ut.mix)(ie,Ke)],ft);var vt=class{constructor(){n(this,"name");n(this,"description");n(this,"options",[]);n(this,"defaultPermission")}toJSON(){return h(this.name,this.description,this.options),{name:this.name,description:this.description,options:this.options.map((e=>e.toJSON())),default_permission:this.defaultPermission}}setDefaultPermission(e){return ne(e),Reflect.set(this,"defaultPermission",e),this}addSubcommandGroup(e){let{options:t}=this;d(t);let i=typeof e=="function"?e(new ht):e;return C(i,ht),t.push(i),this}addSubcommand(e){let{options:t}=this;d(t);let i=typeof e=="function"?e(new ft):e;return C(i,ft),t.push(i),this}};vt=p([(0,ee.mix)(Ke,ie)],vt);var _t={};w(_t,{validateDefaultPermission:()=>ce,validateName:()=>Z,validateRequiredParameters:()=>de,validateType:()=>K});var yt=i(63301),bt=i(69787);function de(e,t){Z(e),K(t)}var Et=yt.z.string().min(1).max(32).regex(/^( *[\p{L}\p{N}_-]+ *)+$/u);function Z(e){Et.parse(e)}var wt=yt.z.union([yt.z.literal(bt.ApplicationCommandType.User),yt.z.literal(bt.ApplicationCommandType.Message)]);function K(e){wt.parse(e)}var Tt=yt.z.boolean();function ce(e){Tt.parse(e)}var xt=class{constructor(){n(this,"name");n(this,"type");n(this,"defaultPermission")}setName(e){return Z(e),Reflect.set(this,"name",e),this}setType(e){return K(e),Reflect.set(this,"type",e),this}setDefaultPermission(e){return ce(e),Reflect.set(this,"defaultPermission",e),this}toJSON(){return de(this.name,this.type),{name:this.name,type:this.type,default_permission:this.defaultPermission}}};e.exports=m(g);0&&0},38861:e=>{var t=Object.defineProperty;var i=Object.getOwnPropertyDescriptor;var s=Object.getOwnPropertyNames;var r=Object.prototype.hasOwnProperty;var b=(e,i,s)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[i]=s;var V=e=>t(e,"__esModule",{value:!0}),h=(e,i)=>t(e,"name",{value:i,configurable:!0});var d=(e,i)=>{for(var s in i)t(e,s,{get:i[s],enumerable:!0})},y=(e,o,l,c)=>{if(o&&typeof o=="object"||typeof o=="function")for(let u of s(o))!r.call(e,u)&&(l||u!=="default")&&t(e,u,{get:()=>o[u],enumerable:!(c=i(o,u))||c.enumerable});return e};var o=(e=>(t,i)=>e&&e.get(t)||(i=y(V({}),t,1),e&&e.set(t,i),i))(typeof WeakMap!="undefined"?new WeakMap:0);var a=(e,t,i)=>(b(e,typeof t!="symbol"?t+"":t,i),i);var l={};d(l,{Collection:()=>u,default:()=>m});var c=class extends Map{ensure(e,t){if(this.has(e))return this.get(e);let i=t(e,this);return this.set(e,i),i}hasAll(...e){return e.every((e=>super.has(e)))}hasAny(...e){return e.some((e=>super.has(e)))}first(e){if(typeof e=="undefined")return this.values().next().value;if(e<0)return this.last(e*-1);e=Math.min(this.size,e);let t=this.values();return Array.from({length:e},(()=>t.next().value))}firstKey(e){if(typeof e=="undefined")return this.keys().next().value;if(e<0)return this.lastKey(e*-1);e=Math.min(this.size,e);let t=this.keys();return Array.from({length:e},(()=>t.next().value))}last(e){let t=[...this.values()];return typeof e=="undefined"?t[t.length-1]:e<0?this.first(e*-1):e?t.slice(-e):[]}lastKey(e){let t=[...this.keys()];return typeof e=="undefined"?t[t.length-1]:e<0?this.firstKey(e*-1):e?t.slice(-e):[]}at(e){return e=Math.floor(e),[...this.values()].at(e)}keyAt(e){return e=Math.floor(e),[...this.keys()].at(e)}random(e){let t=[...this.values()];return typeof e=="undefined"?t[Math.floor(Math.random()*t.length)]:!t.length||!e?[]:Array.from({length:Math.min(e,t.length)},(()=>t.splice(Math.floor(Math.random()*t.length),1)[0]))}randomKey(e){let t=[...this.keys()];return typeof e=="undefined"?t[Math.floor(Math.random()*t.length)]:!t.length||!e?[]:Array.from({length:Math.min(e,t.length)},(()=>t.splice(Math.floor(Math.random()*t.length),1)[0]))}reverse(){let e=[...this.entries()].reverse();this.clear();for(let[t,i]of e)this.set(t,i);return this}find(e,t){typeof t!="undefined"&&(e=e.bind(t));for(let[t,i]of this)if(e(i,t,this))return i}findKey(e,t){typeof t!="undefined"&&(e=e.bind(t));for(let[t,i]of this)if(e(i,t,this))return t}sweep(e,t){typeof t!="undefined"&&(e=e.bind(t));let i=this.size;for(let[t,i]of this)e(i,t,this)&&this.delete(t);return i-this.size}filter(e,t){typeof t!="undefined"&&(e=e.bind(t));let i=new this.constructor[Symbol.species];for(let[t,s]of this)e(s,t,this)&&i.set(t,s);return i}partition(e,t){typeof t!="undefined"&&(e=e.bind(t));let i=[new this.constructor[Symbol.species],new this.constructor[Symbol.species]];for(let[t,s]of this)e(s,t,this)?i[0].set(t,s):i[1].set(t,s);return i}flatMap(e,t){let i=this.map(e,t);return(new this.constructor[Symbol.species]).concat(...i)}map(e,t){typeof t!="undefined"&&(e=e.bind(t));let i=this.entries();return Array.from({length:this.size},(()=>{let[t,s]=i.next().value;return e(s,t,this)}))}mapValues(e,t){typeof t!="undefined"&&(e=e.bind(t));let i=new this.constructor[Symbol.species];for(let[t,s]of this)i.set(t,e(s,t,this));return i}some(e,t){typeof t!="undefined"&&(e=e.bind(t));for(let[t,i]of this)if(e(i,t,this))return!0;return!1}every(e,t){typeof t!="undefined"&&(e=e.bind(t));for(let[t,i]of this)if(!e(i,t,this))return!1;return!0}reduce(e,t){let i;if(typeof t!="undefined"){i=t;for(let[t,s]of this)i=e(i,s,t,this);return i}let s=!0;for(let[t,r]of this){if(s){i=r,s=!1;continue}i=e(i,r,t,this)}if(s)throw new TypeError("Reduce of empty collection with no initial value");return i}each(e,t){return this.forEach(e,t),this}tap(e,t){return typeof t!="undefined"&&(e=e.bind(t)),e(this),this}clone(){return new this.constructor[Symbol.species](this)}concat(...e){let t=this.clone();for(let i of e)for(let[e,s]of i)t.set(e,s);return t}equals(e){if(!e)return!1;if(this===e)return!0;if(this.size!==e.size)return!1;for(let[t,i]of this)if(!e.has(t)||i!==e.get(t))return!1;return!0}sort(e=c.defaultSort){let t=[...this.entries()];t.sort(((t,i)=>e(t[1],i[1],t[0],i[0]))),super.clear();for(let[e,i]of t)super.set(e,i);return this}intersect(e){let t=new this.constructor[Symbol.species];for(let[i,s]of e)this.has(i)&&t.set(i,s);return t}difference(e){let t=new this.constructor[Symbol.species];for(let[i,s]of e)this.has(i)||t.set(i,s);for(let[i,s]of this)e.has(i)||t.set(i,s);return t}sorted(e=c.defaultSort){return new this.constructor[Symbol.species](this).sort(((t,i,s,r)=>e(t,i,s,r)))}toJSON(){return[...this.values()]}static defaultSort(e,t){return Number(e>t)||Number(e===t)-1}},u=c;h(u,"Collection"),a(u,"default",c);var m=u;e.exports=o(l);0&&0},40334:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});async function auth(e){const t=e.split(/\./).length===3?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:t}}function withAuthorizationPrefix(e){if(e.split(/\./).length===3){return`bearer ${e}`}return`token ${e}`}async function hook(e,t,i,s){const r=t.endpoint.merge(i,s);r.headers.authorization=withAuthorizationPrefix(e);return t(r)}const i=function createTokenAuth(e){if(!e){throw new Error("[@octokit/auth-token] No token passed to createTokenAuth")}if(typeof e!=="string"){throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string")}e=e.replace(/^(token|bearer) +/i,"");return Object.assign(auth.bind(null,e),{hook:hook.bind(null,e)})};t.createTokenAuth=i},59440:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var s=_interopDefault(i(48840));var r=i(11292);function lowercaseKeys(e){if(!e){return{}}return Object.keys(e).reduce(((t,i)=>{t[i.toLowerCase()]=e[i];return t}),{})}function mergeDeep(e,t){const i=Object.assign({},e);Object.keys(t).forEach((r=>{if(s(t[r])){if(!(r in e))Object.assign(i,{[r]:t[r]});else i[r]=mergeDeep(e[r],t[r])}else{Object.assign(i,{[r]:t[r]})}}));return i}function merge(e,t,i){if(typeof t==="string"){let[e,s]=t.split(" ");i=Object.assign(s?{method:e,url:s}:{url:e},i)}else{i=Object.assign({},t)}i.headers=lowercaseKeys(i.headers);const s=mergeDeep(e||{},i);if(e&&e.mediaType.previews.length){s.mediaType.previews=e.mediaType.previews.filter((e=>!s.mediaType.previews.includes(e))).concat(s.mediaType.previews)}s.mediaType.previews=s.mediaType.previews.map((e=>e.replace(/-preview/,"")));return s}function addQueryParameters(e,t){const i=/\?/.test(e)?"&":"?";const s=Object.keys(t);if(s.length===0){return e}return e+i+s.map((e=>{if(e==="q"){return"q="+t.q.split("+").map(encodeURIComponent).join("+")}return`${e}=${encodeURIComponent(t[e])}`})).join("&")}const o=/\{[^}]+\}/g;function removeNonChars(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function extractUrlVariableNames(e){const t=e.match(o);if(!t){return[]}return t.map(removeNonChars).reduce(((e,t)=>e.concat(t)),[])}function omit(e,t){return Object.keys(e).filter((e=>!t.includes(e))).reduce(((t,i)=>{t[i]=e[i];return t}),{})}function encodeReserved(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){if(!/%[0-9A-Fa-f]/.test(e)){e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")}return e})).join("")}function encodeUnreserved(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function encodeValue(e,t,i){t=e==="+"||e==="#"?encodeReserved(t):encodeUnreserved(t);if(i){return encodeUnreserved(i)+"="+t}else{return t}}function isDefined(e){return e!==undefined&&e!==null}function isKeyOperator(e){return e===";"||e==="&"||e==="?"}function getValues(e,t,i,s){var r=e[i],o=[];if(isDefined(r)&&r!==""){if(typeof r==="string"||typeof r==="number"||typeof r==="boolean"){r=r.toString();if(s&&s!=="*"){r=r.substring(0,parseInt(s,10))}o.push(encodeValue(t,r,isKeyOperator(t)?i:""))}else{if(s==="*"){if(Array.isArray(r)){r.filter(isDefined).forEach((function(e){o.push(encodeValue(t,e,isKeyOperator(t)?i:""))}))}else{Object.keys(r).forEach((function(e){if(isDefined(r[e])){o.push(encodeValue(t,r[e],e))}}))}}else{const e=[];if(Array.isArray(r)){r.filter(isDefined).forEach((function(i){e.push(encodeValue(t,i))}))}else{Object.keys(r).forEach((function(i){if(isDefined(r[i])){e.push(encodeUnreserved(i));e.push(encodeValue(t,r[i].toString()))}}))}if(isKeyOperator(t)){o.push(encodeUnreserved(i)+"="+e.join(","))}else if(e.length!==0){o.push(e.join(","))}}}}else{if(t===";"){if(isDefined(r)){o.push(encodeUnreserved(i))}}else if(r===""&&(t==="&"||t==="?")){o.push(encodeUnreserved(i)+"=")}else if(r===""){o.push("")}}return o}function parseUrl(e){return{expand:expand.bind(null,e)}}function expand(e,t){var i=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,s,r){if(s){let e="";const r=[];if(i.indexOf(s.charAt(0))!==-1){e=s.charAt(0);s=s.substr(1)}s.split(/,/g).forEach((function(i){var s=/([^:\*]*)(?::(\d+)|(\*))?/.exec(i);r.push(getValues(t,e,s[1],s[2]||s[3]))}));if(e&&e!=="+"){var o=",";if(e==="?"){o="&"}else if(e!=="#"){o=e}return(r.length!==0?e:"")+r.join(o)}else{return r.join(",")}}else{return encodeReserved(r)}}))}function parse(e){let t=e.method.toUpperCase();let i=(e.url||"/").replace(/:([a-z]\w+)/g,"{+$1}");let s=Object.assign({},e.headers);let r;let o=omit(e,["method","baseUrl","url","headers","request","mediaType"]);const l=extractUrlVariableNames(i);i=parseUrl(i).expand(o);if(!/^http/.test(i)){i=e.baseUrl+i}const c=Object.keys(e).filter((e=>l.includes(e))).concat("baseUrl");const u=omit(o,c);const m=/application\/octet-stream/i.test(s.accept);if(!m){if(e.mediaType.format){s.accept=s.accept.split(/,/).map((t=>t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")}if(e.mediaType.previews.length){const t=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=t.concat(e.mediaType.previews).map((t=>{const i=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${t}-preview${i}`})).join(",")}}if(["GET","HEAD"].includes(t)){i=addQueryParameters(i,u)}else{if("data"in u){r=u.data}else{if(Object.keys(u).length){r=u}else{s["content-length"]=0}}}if(!s["content-type"]&&typeof r!=="undefined"){s["content-type"]="application/json; charset=utf-8"}if(["PATCH","PUT"].includes(t)&&typeof r==="undefined"){r=""}return Object.assign({method:t,url:i,headers:s},typeof r!=="undefined"?{body:r}:null,e.request?{request:e.request}:null)}function endpointWithDefaults(e,t,i){return parse(merge(e,t,i))}function withDefaults(e,t){const i=merge(e,t);const s=endpointWithDefaults.bind(null,i);return Object.assign(s,{DEFAULTS:i,defaults:withDefaults.bind(null,i),merge:merge.bind(null,i),parse:parse})}const l="5.5.3";const c=`octokit-endpoint.js/${l} ${r.getUserAgent()}`;const u={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":c},mediaType:{format:"",previews:[]}};const m=withDefaults(null,u);t.endpoint=m},11292:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var s=_interopDefault(i(54824));function getUserAgent(){try{return`Node.js/${process.version.substr(1)} (${s()}; ${process.arch})`}catch(e){if(/wmic os get Caption/.test(e.message)){return"Windows <version undetectable>"}return"<environment undetectable>"}}t.getUserAgent=getUserAgent},88467:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var s=i(36234);var r=i(45030);const o="4.3.1";class GraphqlError extends Error{constructor(e,t){const i=t.data.errors[0].message;super(i);Object.assign(this,t.data);this.name="GraphqlError";this.request=e;if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}}}const l=["method","baseUrl","url","headers","request","query"];function graphql(e,t,i){i=typeof t==="string"?i=Object.assign({query:t},i):i=t;const s=Object.keys(i).reduce(((e,t)=>{if(l.includes(t)){e[t]=i[t];return e}if(!e.variables){e.variables={}}e.variables[t]=i[t];return e}),{});return e(s).then((e=>{if(e.data.errors){throw new GraphqlError(s,{data:e.data})}return e.data.data}))}function withDefaults(e,t){const i=e.defaults(t);const newApi=(e,t)=>graphql(i,e,t);return Object.assign(newApi,{defaults:withDefaults.bind(null,i),endpoint:s.request.endpoint})}const c=withDefaults(s.request,{headers:{"user-agent":`octokit-graphql.js/${o} ${r.getUserAgent()}`},method:"POST",url:"/graphql"});function withCustomRequest(e){return withDefaults(e,{method:"POST",url:"/graphql"})}t.graphql=c;t.withCustomRequest=withCustomRequest},64193:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const i="1.1.2";const s=[/^\/search\//,/^\/repos\/[^/]+\/[^/]+\/commits\/[^/]+\/(check-runs|check-suites)([^/]|$)/,/^\/installation\/repositories([^/]|$)/,/^\/user\/installations([^/]|$)/,/^\/repos\/[^/]+\/[^/]+\/actions\/secrets([^/]|$)/,/^\/repos\/[^/]+\/[^/]+\/actions\/workflows(\/[^/]+\/runs)?([^/]|$)/,/^\/repos\/[^/]+\/[^/]+\/actions\/runs(\/[^/]+\/(artifacts|jobs))?([^/]|$)/];function normalizePaginatedListResponse(e,t,i){const r=t.replace(e.request.endpoint.DEFAULTS.baseUrl,"");const o=s.find((e=>e.test(r)));if(!o)return;const l=i.data.incomplete_results;const c=i.data.repository_selection;const u=i.data.total_count;delete i.data.incomplete_results;delete i.data.repository_selection;delete i.data.total_count;const m=Object.keys(i.data)[0];const g=i.data[m];i.data=g;if(typeof l!=="undefined"){i.data.incomplete_results=l}if(typeof c!=="undefined"){i.data.repository_selection=c}i.data.total_count=u;Object.defineProperty(i.data,m,{get(){e.log.warn(`[@octokit/paginate-rest] "response.data.${m}" is deprecated for "GET ${r}". Get the results directly from "response.data"`);return Array.from(g)}})}function iterator(e,t,i){const s=e.request.endpoint(t,i);const r=s.method;const o=s.headers;let l=s.url;return{[Symbol.asyncIterator]:()=>({next(){if(!l){return Promise.resolve({done:true})}return e.request({method:r,url:l,headers:o}).then((t=>{normalizePaginatedListResponse(e,l,t);l=((t.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1];return{value:t}}))}})}}function paginate(e,t,i,s){if(typeof i==="function"){s=i;i=undefined}return gather(e,[],iterator(e,t,i)[Symbol.asyncIterator](),s)}function gather(e,t,i,s){return i.next().then((r=>{if(r.done){return t}let o=false;function done(){o=true}t=t.concat(s?s(r.value,done):r.value.data);if(o){return t}return gather(e,t,i,s)}))}function paginateRest(e){return{paginate:Object.assign(paginate.bind(null,e),{iterator:iterator.bind(null,e)})}}paginateRest.VERSION=i;t.paginateRest=paginateRest},68883:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const i="1.0.0";function requestLog(e){e.hook.wrap("request",((t,i)=>{e.log.debug("request",i);const s=Date.now();const r=e.request.endpoint.parse(i);const o=r.url.replace(i.baseUrl,"");return t(i).then((t=>{e.log.info(`${r.method} ${o} - ${t.status} in ${Date.now()-s}ms`);return t})).catch((t=>{e.log.info(`${r.method} ${o} - ${t.status} in ${Date.now()-s}ms`);throw t}))}))}requestLog.VERSION=i;t.requestLog=requestLog},83044:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});var s=i(58932);var r={actions:{cancelWorkflowRun:{method:"POST",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},run_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/actions/runs/:run_id/cancel"},createOrUpdateSecretForRepo:{method:"PUT",params:{encrypted_value:{type:"string"},key_id:{type:"string"},name:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/secrets/:name"},createRegistrationToken:{method:"POST",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/runners/registration-token"},createRemoveToken:{method:"POST",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/runners/remove-token"},deleteArtifact:{method:"DELETE",params:{artifact_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/artifacts/:artifact_id"},deleteSecretFromRepo:{method:"DELETE",params:{name:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/secrets/:name"},downloadArtifact:{method:"GET",params:{archive_format:{required:true,type:"string"},artifact_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/artifacts/:artifact_id/:archive_format"},getArtifact:{method:"GET",params:{artifact_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/artifacts/:artifact_id"},getPublicKey:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/secrets/public-key"},getSecret:{method:"GET",params:{name:{required:true,type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/secrets/:name"},getSelfHostedRunner:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},runner_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/actions/runners/:runner_id"},getWorkflow:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},workflow_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/actions/workflows/:workflow_id"},getWorkflowJob:{method:"GET",params:{job_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/jobs/:job_id"},getWorkflowRun:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},run_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/actions/runs/:run_id"},listDownloadsForSelfHostedRunnerApplication:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/runners/downloads"},listJobsForWorkflowRun:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},run_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/actions/runs/:run_id/jobs"},listRepoWorkflowRuns:{method:"GET",params:{actor:{type:"string"},branch:{type:"string"},event:{type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},status:{enum:["completed","status","conclusion"],type:"string"}},url:"/repos/:owner/:repo/actions/runs"},listRepoWorkflows:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/workflows"},listSecretsForRepo:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/secrets"},listSelfHostedRunnersForRepo:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/runners"},listWorkflowJobLogs:{method:"GET",params:{job_id:{required:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/actions/jobs/:job_id/logs"},listWorkflowRunArtifacts:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},run_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/actions/runs/:run_id/artifacts"},listWorkflowRunLogs:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},run_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/actions/runs/:run_id/logs"},listWorkflowRuns:{method:"GET",params:{actor:{type:"string"},branch:{type:"string"},event:{type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},status:{enum:["completed","status","conclusion"],type:"string"},workflow_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/actions/workflows/:workflow_id/runs"},reRunWorkflow:{method:"POST",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},run_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/actions/runs/:run_id/rerun"},removeSelfHostedRunner:{method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},runner_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/actions/runners/:runner_id"}},activity:{checkStarringRepo:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/user/starred/:owner/:repo"},deleteRepoSubscription:{method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/subscription"},deleteThreadSubscription:{method:"DELETE",params:{thread_id:{required:true,type:"integer"}},url:"/notifications/threads/:thread_id/subscription"},getRepoSubscription:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/subscription"},getThread:{method:"GET",params:{thread_id:{required:true,type:"integer"}},url:"/notifications/threads/:thread_id"},getThreadSubscription:{method:"GET",params:{thread_id:{required:true,type:"integer"}},url:"/notifications/threads/:thread_id/subscription"},listEventsForOrg:{method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},username:{required:true,type:"string"}},url:"/users/:username/events/orgs/:org"},listEventsForUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},username:{required:true,type:"string"}},url:"/users/:username/events"},listFeeds:{method:"GET",params:{},url:"/feeds"},listNotifications:{method:"GET",params:{all:{type:"boolean"},before:{type:"string"},page:{type:"integer"},participating:{type:"boolean"},per_page:{type:"integer"},since:{type:"string"}},url:"/notifications"},listNotificationsForRepo:{method:"GET",params:{all:{type:"boolean"},before:{type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},participating:{type:"boolean"},per_page:{type:"integer"},repo:{required:true,type:"string"},since:{type:"string"}},url:"/repos/:owner/:repo/notifications"},listPublicEvents:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/events"},listPublicEventsForOrg:{method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/orgs/:org/events"},listPublicEventsForRepoNetwork:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/networks/:owner/:repo/events"},listPublicEventsForUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},username:{required:true,type:"string"}},url:"/users/:username/events/public"},listReceivedEventsForUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},username:{required:true,type:"string"}},url:"/users/:username/received_events"},listReceivedPublicEventsForUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},username:{required:true,type:"string"}},url:"/users/:username/received_events/public"},listRepoEvents:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/events"},listReposStarredByAuthenticatedUser:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},sort:{enum:["created","updated"],type:"string"}},url:"/user/starred"},listReposStarredByUser:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},sort:{enum:["created","updated"],type:"string"},username:{required:true,type:"string"}},url:"/users/:username/starred"},listReposWatchedByUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},username:{required:true,type:"string"}},url:"/users/:username/subscriptions"},listStargazersForRepo:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/stargazers"},listWatchedReposForAuthenticatedUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/subscriptions"},listWatchersForRepo:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/subscribers"},markAsRead:{method:"PUT",params:{last_read_at:{type:"string"}},url:"/notifications"},markNotificationsAsReadForRepo:{method:"PUT",params:{last_read_at:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/notifications"},markThreadAsRead:{method:"PATCH",params:{thread_id:{required:true,type:"integer"}},url:"/notifications/threads/:thread_id"},setRepoSubscription:{method:"PUT",params:{ignored:{type:"boolean"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},subscribed:{type:"boolean"}},url:"/repos/:owner/:repo/subscription"},setThreadSubscription:{method:"PUT",params:{ignored:{type:"boolean"},thread_id:{required:true,type:"integer"}},url:"/notifications/threads/:thread_id/subscription"},starRepo:{method:"PUT",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/user/starred/:owner/:repo"},unstarRepo:{method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/user/starred/:owner/:repo"}},apps:{addRepoToInstallation:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"PUT",params:{installation_id:{required:true,type:"integer"},repository_id:{required:true,type:"integer"}},url:"/user/installations/:installation_id/repositories/:repository_id"},checkAccountIsAssociatedWithAny:{method:"GET",params:{account_id:{required:true,type:"integer"}},url:"/marketplace_listing/accounts/:account_id"},checkAccountIsAssociatedWithAnyStubbed:{method:"GET",params:{account_id:{required:true,type:"integer"}},url:"/marketplace_listing/stubbed/accounts/:account_id"},checkAuthorization:{deprecated:"octokit.apps.checkAuthorization() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#check-an-authorization",method:"GET",params:{access_token:{required:true,type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/tokens/:access_token"},checkToken:{headers:{accept:"application/vnd.github.doctor-strange-preview+json"},method:"POST",params:{access_token:{type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/token"},createContentAttachment:{headers:{accept:"application/vnd.github.corsair-preview+json"},method:"POST",params:{body:{required:true,type:"string"},content_reference_id:{required:true,type:"integer"},title:{required:true,type:"string"}},url:"/content_references/:content_reference_id/attachments"},createFromManifest:{headers:{accept:"application/vnd.github.fury-preview+json"},method:"POST",params:{code:{required:true,type:"string"}},url:"/app-manifests/:code/conversions"},createInstallationToken:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"POST",params:{installation_id:{required:true,type:"integer"},permissions:{type:"object"},repository_ids:{type:"integer[]"}},url:"/app/installations/:installation_id/access_tokens"},deleteAuthorization:{headers:{accept:"application/vnd.github.doctor-strange-preview+json"},method:"DELETE",params:{access_token:{type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/grant"},deleteInstallation:{headers:{accept:"application/vnd.github.gambit-preview+json,application/vnd.github.machine-man-preview+json"},method:"DELETE",params:{installation_id:{required:true,type:"integer"}},url:"/app/installations/:installation_id"},deleteToken:{headers:{accept:"application/vnd.github.doctor-strange-preview+json"},method:"DELETE",params:{access_token:{type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/token"},findOrgInstallation:{deprecated:"octokit.apps.findOrgInstallation() has been renamed to octokit.apps.getOrgInstallation() (2019-04-10)",headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{org:{required:true,type:"string"}},url:"/orgs/:org/installation"},findRepoInstallation:{deprecated:"octokit.apps.findRepoInstallation() has been renamed to octokit.apps.getRepoInstallation() (2019-04-10)",headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/installation"},findUserInstallation:{deprecated:"octokit.apps.findUserInstallation() has been renamed to octokit.apps.getUserInstallation() (2019-04-10)",headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{username:{required:true,type:"string"}},url:"/users/:username/installation"},getAuthenticated:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{},url:"/app"},getBySlug:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{app_slug:{required:true,type:"string"}},url:"/apps/:app_slug"},getInstallation:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{installation_id:{required:true,type:"integer"}},url:"/app/installations/:installation_id"},getOrgInstallation:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{org:{required:true,type:"string"}},url:"/orgs/:org/installation"},getRepoInstallation:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/installation"},getUserInstallation:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{username:{required:true,type:"string"}},url:"/users/:username/installation"},listAccountsUserOrOrgOnPlan:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},plan_id:{required:true,type:"integer"},sort:{enum:["created","updated"],type:"string"}},url:"/marketplace_listing/plans/:plan_id/accounts"},listAccountsUserOrOrgOnPlanStubbed:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},plan_id:{required:true,type:"integer"},sort:{enum:["created","updated"],type:"string"}},url:"/marketplace_listing/stubbed/plans/:plan_id/accounts"},listInstallationReposForAuthenticatedUser:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{installation_id:{required:true,type:"integer"},page:{type:"integer"},per_page:{type:"integer"}},url:"/user/installations/:installation_id/repositories"},listInstallations:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/app/installations"},listInstallationsForAuthenticatedUser:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/installations"},listMarketplacePurchasesForAuthenticatedUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/marketplace_purchases"},listMarketplacePurchasesForAuthenticatedUserStubbed:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/marketplace_purchases/stubbed"},listPlans:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/marketplace_listing/plans"},listPlansStubbed:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/marketplace_listing/stubbed/plans"},listRepos:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/installation/repositories"},removeRepoFromInstallation:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"DELETE",params:{installation_id:{required:true,type:"integer"},repository_id:{required:true,type:"integer"}},url:"/user/installations/:installation_id/repositories/:repository_id"},resetAuthorization:{deprecated:"octokit.apps.resetAuthorization() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#reset-an-authorization",method:"POST",params:{access_token:{required:true,type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/tokens/:access_token"},resetToken:{headers:{accept:"application/vnd.github.doctor-strange-preview+json"},method:"PATCH",params:{access_token:{type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/token"},revokeAuthorizationForApplication:{deprecated:"octokit.apps.revokeAuthorizationForApplication() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#revoke-an-authorization-for-an-application",method:"DELETE",params:{access_token:{required:true,type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/tokens/:access_token"},revokeGrantForApplication:{deprecated:"octokit.apps.revokeGrantForApplication() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#revoke-a-grant-for-an-application",method:"DELETE",params:{access_token:{required:true,type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/grants/:access_token"},revokeInstallationToken:{headers:{accept:"application/vnd.github.gambit-preview+json"},method:"DELETE",params:{},url:"/installation/token"}},checks:{create:{headers:{accept:"application/vnd.github.antiope-preview+json"},method:"POST",params:{actions:{type:"object[]"},"actions[].description":{required:true,type:"string"},"actions[].identifier":{required:true,type:"string"},"actions[].label":{required:true,type:"string"},completed_at:{type:"string"},conclusion:{enum:["success","failure","neutral","cancelled","timed_out","action_required"],type:"string"},details_url:{type:"string"},external_id:{type:"string"},head_sha:{required:true,type:"string"},name:{required:true,type:"string"},output:{type:"object"},"output.annotations":{type:"object[]"},"output.annotations[].annotation_level":{enum:["notice","warning","failure"],required:true,type:"string"},"output.annotations[].end_column":{type:"integer"},"output.annotations[].end_line":{required:true,type:"integer"},"output.annotations[].message":{required:true,type:"string"},"output.annotations[].path":{required:true,type:"string"},"output.annotations[].raw_details":{type:"string"},"output.annotations[].start_column":{type:"integer"},"output.annotations[].start_line":{required:true,type:"integer"},"output.annotations[].title":{type:"string"},"output.images":{type:"object[]"},"output.images[].alt":{required:true,type:"string"},"output.images[].caption":{type:"string"},"output.images[].image_url":{required:true,type:"string"},"output.summary":{required:true,type:"string"},"output.text":{type:"string"},"output.title":{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},started_at:{type:"string"},status:{enum:["queued","in_progress","completed"],type:"string"}},url:"/repos/:owner/:repo/check-runs"},createSuite:{headers:{accept:"application/vnd.github.antiope-preview+json"},method:"POST",params:{head_sha:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/check-suites"},get:{headers:{accept:"application/vnd.github.antiope-preview+json"},method:"GET",params:{check_run_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/check-runs/:check_run_id"},getSuite:{headers:{accept:"application/vnd.github.antiope-preview+json"},method:"GET",params:{check_suite_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/check-suites/:check_suite_id"},listAnnotations:{headers:{accept:"application/vnd.github.antiope-preview+json"},method:"GET",params:{check_run_id:{required:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/check-runs/:check_run_id/annotations"},listForRef:{headers:{accept:"application/vnd.github.antiope-preview+json"},method:"GET",params:{check_name:{type:"string"},filter:{enum:["latest","all"],type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},ref:{required:true,type:"string"},repo:{required:true,type:"string"},status:{enum:["queued","in_progress","completed"],type:"string"}},url:"/repos/:owner/:repo/commits/:ref/check-runs"},listForSuite:{headers:{accept:"application/vnd.github.antiope-preview+json"},method:"GET",params:{check_name:{type:"string"},check_suite_id:{required:true,type:"integer"},filter:{enum:["latest","all"],type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},status:{enum:["queued","in_progress","completed"],type:"string"}},url:"/repos/:owner/:repo/check-suites/:check_suite_id/check-runs"},listSuitesForRef:{headers:{accept:"application/vnd.github.antiope-preview+json"},method:"GET",params:{app_id:{type:"integer"},check_name:{type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},ref:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/commits/:ref/check-suites"},rerequestSuite:{headers:{accept:"application/vnd.github.antiope-preview+json"},method:"POST",params:{check_suite_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/check-suites/:check_suite_id/rerequest"},setSuitesPreferences:{headers:{accept:"application/vnd.github.antiope-preview+json"},method:"PATCH",params:{auto_trigger_checks:{type:"object[]"},"auto_trigger_checks[].app_id":{required:true,type:"integer"},"auto_trigger_checks[].setting":{required:true,type:"boolean"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/check-suites/preferences"},update:{headers:{accept:"application/vnd.github.antiope-preview+json"},method:"PATCH",params:{actions:{type:"object[]"},"actions[].description":{required:true,type:"string"},"actions[].identifier":{required:true,type:"string"},"actions[].label":{required:true,type:"string"},check_run_id:{required:true,type:"integer"},completed_at:{type:"string"},conclusion:{enum:["success","failure","neutral","cancelled","timed_out","action_required"],type:"string"},details_url:{type:"string"},external_id:{type:"string"},name:{type:"string"},output:{type:"object"},"output.annotations":{type:"object[]"},"output.annotations[].annotation_level":{enum:["notice","warning","failure"],required:true,type:"string"},"output.annotations[].end_column":{type:"integer"},"output.annotations[].end_line":{required:true,type:"integer"},"output.annotations[].message":{required:true,type:"string"},"output.annotations[].path":{required:true,type:"string"},"output.annotations[].raw_details":{type:"string"},"output.annotations[].start_column":{type:"integer"},"output.annotations[].start_line":{required:true,type:"integer"},"output.annotations[].title":{type:"string"},"output.images":{type:"object[]"},"output.images[].alt":{required:true,type:"string"},"output.images[].caption":{type:"string"},"output.images[].image_url":{required:true,type:"string"},"output.summary":{required:true,type:"string"},"output.text":{type:"string"},"output.title":{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},started_at:{type:"string"},status:{enum:["queued","in_progress","completed"],type:"string"}},url:"/repos/:owner/:repo/check-runs/:check_run_id"}},codesOfConduct:{getConductCode:{headers:{accept:"application/vnd.github.scarlet-witch-preview+json"},method:"GET",params:{key:{required:true,type:"string"}},url:"/codes_of_conduct/:key"},getForRepo:{headers:{accept:"application/vnd.github.scarlet-witch-preview+json"},method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/community/code_of_conduct"},listConductCodes:{headers:{accept:"application/vnd.github.scarlet-witch-preview+json"},method:"GET",params:{},url:"/codes_of_conduct"}},emojis:{get:{method:"GET",params:{},url:"/emojis"}},gists:{checkIsStarred:{method:"GET",params:{gist_id:{required:true,type:"string"}},url:"/gists/:gist_id/star"},create:{method:"POST",params:{description:{type:"string"},files:{required:true,type:"object"},"files.content":{type:"string"},public:{type:"boolean"}},url:"/gists"},createComment:{method:"POST",params:{body:{required:true,type:"string"},gist_id:{required:true,type:"string"}},url:"/gists/:gist_id/comments"},delete:{method:"DELETE",params:{gist_id:{required:true,type:"string"}},url:"/gists/:gist_id"},deleteComment:{method:"DELETE",params:{comment_id:{required:true,type:"integer"},gist_id:{required:true,type:"string"}},url:"/gists/:gist_id/comments/:comment_id"},fork:{method:"POST",params:{gist_id:{required:true,type:"string"}},url:"/gists/:gist_id/forks"},get:{method:"GET",params:{gist_id:{required:true,type:"string"}},url:"/gists/:gist_id"},getComment:{method:"GET",params:{comment_id:{required:true,type:"integer"},gist_id:{required:true,type:"string"}},url:"/gists/:gist_id/comments/:comment_id"},getRevision:{method:"GET",params:{gist_id:{required:true,type:"string"},sha:{required:true,type:"string"}},url:"/gists/:gist_id/:sha"},list:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},since:{type:"string"}},url:"/gists"},listComments:{method:"GET",params:{gist_id:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/gists/:gist_id/comments"},listCommits:{method:"GET",params:{gist_id:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/gists/:gist_id/commits"},listForks:{method:"GET",params:{gist_id:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/gists/:gist_id/forks"},listPublic:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},since:{type:"string"}},url:"/gists/public"},listPublicForUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},since:{type:"string"},username:{required:true,type:"string"}},url:"/users/:username/gists"},listStarred:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},since:{type:"string"}},url:"/gists/starred"},star:{method:"PUT",params:{gist_id:{required:true,type:"string"}},url:"/gists/:gist_id/star"},unstar:{method:"DELETE",params:{gist_id:{required:true,type:"string"}},url:"/gists/:gist_id/star"},update:{method:"PATCH",params:{description:{type:"string"},files:{type:"object"},"files.content":{type:"string"},"files.filename":{type:"string"},gist_id:{required:true,type:"string"}},url:"/gists/:gist_id"},updateComment:{method:"PATCH",params:{body:{required:true,type:"string"},comment_id:{required:true,type:"integer"},gist_id:{required:true,type:"string"}},url:"/gists/:gist_id/comments/:comment_id"}},git:{createBlob:{method:"POST",params:{content:{required:true,type:"string"},encoding:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/blobs"},createCommit:{method:"POST",params:{author:{type:"object"},"author.date":{type:"string"},"author.email":{type:"string"},"author.name":{type:"string"},committer:{type:"object"},"committer.date":{type:"string"},"committer.email":{type:"string"},"committer.name":{type:"string"},message:{required:true,type:"string"},owner:{required:true,type:"string"},parents:{required:true,type:"string[]"},repo:{required:true,type:"string"},signature:{type:"string"},tree:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/commits"},createRef:{method:"POST",params:{owner:{required:true,type:"string"},ref:{required:true,type:"string"},repo:{required:true,type:"string"},sha:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/refs"},createTag:{method:"POST",params:{message:{required:true,type:"string"},object:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},tag:{required:true,type:"string"},tagger:{type:"object"},"tagger.date":{type:"string"},"tagger.email":{type:"string"},"tagger.name":{type:"string"},type:{enum:["commit","tree","blob"],required:true,type:"string"}},url:"/repos/:owner/:repo/git/tags"},createTree:{method:"POST",params:{base_tree:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},tree:{required:true,type:"object[]"},"tree[].content":{type:"string"},"tree[].mode":{enum:["100644","100755","040000","160000","120000"],type:"string"},"tree[].path":{type:"string"},"tree[].sha":{allowNull:true,type:"string"},"tree[].type":{enum:["blob","tree","commit"],type:"string"}},url:"/repos/:owner/:repo/git/trees"},deleteRef:{method:"DELETE",params:{owner:{required:true,type:"string"},ref:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/refs/:ref"},getBlob:{method:"GET",params:{file_sha:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/blobs/:file_sha"},getCommit:{method:"GET",params:{commit_sha:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/commits/:commit_sha"},getRef:{method:"GET",params:{owner:{required:true,type:"string"},ref:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/ref/:ref"},getTag:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},tag_sha:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/tags/:tag_sha"},getTree:{method:"GET",params:{owner:{required:true,type:"string"},recursive:{enum:["1"],type:"integer"},repo:{required:true,type:"string"},tree_sha:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/trees/:tree_sha"},listMatchingRefs:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},ref:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/matching-refs/:ref"},listRefs:{method:"GET",params:{namespace:{type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/refs/:namespace"},updateRef:{method:"PATCH",params:{force:{type:"boolean"},owner:{required:true,type:"string"},ref:{required:true,type:"string"},repo:{required:true,type:"string"},sha:{required:true,type:"string"}},url:"/repos/:owner/:repo/git/refs/:ref"}},gitignore:{getTemplate:{method:"GET",params:{name:{required:true,type:"string"}},url:"/gitignore/templates/:name"},listTemplates:{method:"GET",params:{},url:"/gitignore/templates"}},interactions:{addOrUpdateRestrictionsForOrg:{headers:{accept:"application/vnd.github.sombra-preview+json"},method:"PUT",params:{limit:{enum:["existing_users","contributors_only","collaborators_only"],required:true,type:"string"},org:{required:true,type:"string"}},url:"/orgs/:org/interaction-limits"},addOrUpdateRestrictionsForRepo:{headers:{accept:"application/vnd.github.sombra-preview+json"},method:"PUT",params:{limit:{enum:["existing_users","contributors_only","collaborators_only"],required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/interaction-limits"},getRestrictionsForOrg:{headers:{accept:"application/vnd.github.sombra-preview+json"},method:"GET",params:{org:{required:true,type:"string"}},url:"/orgs/:org/interaction-limits"},getRestrictionsForRepo:{headers:{accept:"application/vnd.github.sombra-preview+json"},method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/interaction-limits"},removeRestrictionsForOrg:{headers:{accept:"application/vnd.github.sombra-preview+json"},method:"DELETE",params:{org:{required:true,type:"string"}},url:"/orgs/:org/interaction-limits"},removeRestrictionsForRepo:{headers:{accept:"application/vnd.github.sombra-preview+json"},method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/interaction-limits"}},issues:{addAssignees:{method:"POST",params:{assignees:{type:"string[]"},issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/assignees"},addLabels:{method:"POST",params:{issue_number:{required:true,type:"integer"},labels:{required:true,type:"string[]"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/labels"},checkAssignee:{method:"GET",params:{assignee:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/assignees/:assignee"},create:{method:"POST",params:{assignee:{type:"string"},assignees:{type:"string[]"},body:{type:"string"},labels:{type:"string[]"},milestone:{type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},title:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues"},createComment:{method:"POST",params:{body:{required:true,type:"string"},issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/comments"},createLabel:{method:"POST",params:{color:{required:true,type:"string"},description:{type:"string"},name:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/labels"},createMilestone:{method:"POST",params:{description:{type:"string"},due_on:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},state:{enum:["open","closed"],type:"string"},title:{required:true,type:"string"}},url:"/repos/:owner/:repo/milestones"},deleteComment:{method:"DELETE",params:{comment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/comments/:comment_id"},deleteLabel:{method:"DELETE",params:{name:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/labels/:name"},deleteMilestone:{method:"DELETE",params:{milestone_number:{required:true,type:"integer"},number:{alias:"milestone_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/milestones/:milestone_number"},get:{method:"GET",params:{issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number"},getComment:{method:"GET",params:{comment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/comments/:comment_id"},getEvent:{method:"GET",params:{event_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/events/:event_id"},getLabel:{method:"GET",params:{name:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/labels/:name"},getMilestone:{method:"GET",params:{milestone_number:{required:true,type:"integer"},number:{alias:"milestone_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/milestones/:milestone_number"},list:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},filter:{enum:["assigned","created","mentioned","subscribed","all"],type:"string"},labels:{type:"string"},page:{type:"integer"},per_page:{type:"integer"},since:{type:"string"},sort:{enum:["created","updated","comments"],type:"string"},state:{enum:["open","closed","all"],type:"string"}},url:"/issues"},listAssignees:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/assignees"},listComments:{method:"GET",params:{issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},since:{type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/comments"},listCommentsForRepo:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},since:{type:"string"},sort:{enum:["created","updated"],type:"string"}},url:"/repos/:owner/:repo/issues/comments"},listEvents:{method:"GET",params:{issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/events"},listEventsForRepo:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/events"},listEventsForTimeline:{headers:{accept:"application/vnd.github.mockingbird-preview+json"},method:"GET",params:{issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/timeline"},listForAuthenticatedUser:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},filter:{enum:["assigned","created","mentioned","subscribed","all"],type:"string"},labels:{type:"string"},page:{type:"integer"},per_page:{type:"integer"},since:{type:"string"},sort:{enum:["created","updated","comments"],type:"string"},state:{enum:["open","closed","all"],type:"string"}},url:"/user/issues"},listForOrg:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},filter:{enum:["assigned","created","mentioned","subscribed","all"],type:"string"},labels:{type:"string"},org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},since:{type:"string"},sort:{enum:["created","updated","comments"],type:"string"},state:{enum:["open","closed","all"],type:"string"}},url:"/orgs/:org/issues"},listForRepo:{method:"GET",params:{assignee:{type:"string"},creator:{type:"string"},direction:{enum:["asc","desc"],type:"string"},labels:{type:"string"},mentioned:{type:"string"},milestone:{type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},since:{type:"string"},sort:{enum:["created","updated","comments"],type:"string"},state:{enum:["open","closed","all"],type:"string"}},url:"/repos/:owner/:repo/issues"},listLabelsForMilestone:{method:"GET",params:{milestone_number:{required:true,type:"integer"},number:{alias:"milestone_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/milestones/:milestone_number/labels"},listLabelsForRepo:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/labels"},listLabelsOnIssue:{method:"GET",params:{issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/labels"},listMilestonesForRepo:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},sort:{enum:["due_on","completeness"],type:"string"},state:{enum:["open","closed","all"],type:"string"}},url:"/repos/:owner/:repo/milestones"},lock:{method:"PUT",params:{issue_number:{required:true,type:"integer"},lock_reason:{enum:["off-topic","too heated","resolved","spam"],type:"string"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/lock"},removeAssignees:{method:"DELETE",params:{assignees:{type:"string[]"},issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/assignees"},removeLabel:{method:"DELETE",params:{issue_number:{required:true,type:"integer"},name:{required:true,type:"string"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/labels/:name"},removeLabels:{method:"DELETE",params:{issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/labels"},replaceLabels:{method:"PUT",params:{issue_number:{required:true,type:"integer"},labels:{type:"string[]"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/labels"},unlock:{method:"DELETE",params:{issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/lock"},update:{method:"PATCH",params:{assignee:{type:"string"},assignees:{type:"string[]"},body:{type:"string"},issue_number:{required:true,type:"integer"},labels:{type:"string[]"},milestone:{allowNull:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},state:{enum:["open","closed"],type:"string"},title:{type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number"},updateComment:{method:"PATCH",params:{body:{required:true,type:"string"},comment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/comments/:comment_id"},updateLabel:{method:"PATCH",params:{color:{type:"string"},current_name:{required:true,type:"string"},description:{type:"string"},name:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/labels/:current_name"},updateMilestone:{method:"PATCH",params:{description:{type:"string"},due_on:{type:"string"},milestone_number:{required:true,type:"integer"},number:{alias:"milestone_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},state:{enum:["open","closed"],type:"string"},title:{type:"string"}},url:"/repos/:owner/:repo/milestones/:milestone_number"}},licenses:{get:{method:"GET",params:{license:{required:true,type:"string"}},url:"/licenses/:license"},getForRepo:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/license"},list:{deprecated:"octokit.licenses.list() has been renamed to octokit.licenses.listCommonlyUsed() (2019-03-05)",method:"GET",params:{},url:"/licenses"},listCommonlyUsed:{method:"GET",params:{},url:"/licenses"}},markdown:{render:{method:"POST",params:{context:{type:"string"},mode:{enum:["markdown","gfm"],type:"string"},text:{required:true,type:"string"}},url:"/markdown"},renderRaw:{headers:{"content-type":"text/plain; charset=utf-8"},method:"POST",params:{data:{mapTo:"data",required:true,type:"string"}},url:"/markdown/raw"}},meta:{get:{method:"GET",params:{},url:"/meta"}},migrations:{cancelImport:{method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/import"},deleteArchiveForAuthenticatedUser:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"DELETE",params:{migration_id:{required:true,type:"integer"}},url:"/user/migrations/:migration_id/archive"},deleteArchiveForOrg:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"DELETE",params:{migration_id:{required:true,type:"integer"},org:{required:true,type:"string"}},url:"/orgs/:org/migrations/:migration_id/archive"},downloadArchiveForOrg:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"GET",params:{migration_id:{required:true,type:"integer"},org:{required:true,type:"string"}},url:"/orgs/:org/migrations/:migration_id/archive"},getArchiveForAuthenticatedUser:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"GET",params:{migration_id:{required:true,type:"integer"}},url:"/user/migrations/:migration_id/archive"},getArchiveForOrg:{deprecated:"octokit.migrations.getArchiveForOrg() has been renamed to octokit.migrations.downloadArchiveForOrg() (2020-01-27)",headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"GET",params:{migration_id:{required:true,type:"integer"},org:{required:true,type:"string"}},url:"/orgs/:org/migrations/:migration_id/archive"},getCommitAuthors:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},since:{type:"string"}},url:"/repos/:owner/:repo/import/authors"},getImportProgress:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/import"},getLargeFiles:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/import/large_files"},getStatusForAuthenticatedUser:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"GET",params:{migration_id:{required:true,type:"integer"}},url:"/user/migrations/:migration_id"},getStatusForOrg:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"GET",params:{migration_id:{required:true,type:"integer"},org:{required:true,type:"string"}},url:"/orgs/:org/migrations/:migration_id"},listForAuthenticatedUser:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/migrations"},listForOrg:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/orgs/:org/migrations"},listReposForOrg:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"GET",params:{migration_id:{required:true,type:"integer"},org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/orgs/:org/migrations/:migration_id/repositories"},listReposForUser:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"GET",params:{migration_id:{required:true,type:"integer"},page:{type:"integer"},per_page:{type:"integer"}},url:"/user/:migration_id/repositories"},mapCommitAuthor:{method:"PATCH",params:{author_id:{required:true,type:"integer"},email:{type:"string"},name:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/import/authors/:author_id"},setLfsPreference:{method:"PATCH",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},use_lfs:{enum:["opt_in","opt_out"],required:true,type:"string"}},url:"/repos/:owner/:repo/import/lfs"},startForAuthenticatedUser:{method:"POST",params:{exclude_attachments:{type:"boolean"},lock_repositories:{type:"boolean"},repositories:{required:true,type:"string[]"}},url:"/user/migrations"},startForOrg:{method:"POST",params:{exclude_attachments:{type:"boolean"},lock_repositories:{type:"boolean"},org:{required:true,type:"string"},repositories:{required:true,type:"string[]"}},url:"/orgs/:org/migrations"},startImport:{method:"PUT",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},tfvc_project:{type:"string"},vcs:{enum:["subversion","git","mercurial","tfvc"],type:"string"},vcs_password:{type:"string"},vcs_url:{required:true,type:"string"},vcs_username:{type:"string"}},url:"/repos/:owner/:repo/import"},unlockRepoForAuthenticatedUser:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"DELETE",params:{migration_id:{required:true,type:"integer"},repo_name:{required:true,type:"string"}},url:"/user/migrations/:migration_id/repos/:repo_name/lock"},unlockRepoForOrg:{headers:{accept:"application/vnd.github.wyandotte-preview+json"},method:"DELETE",params:{migration_id:{required:true,type:"integer"},org:{required:true,type:"string"},repo_name:{required:true,type:"string"}},url:"/orgs/:org/migrations/:migration_id/repos/:repo_name/lock"},updateImport:{method:"PATCH",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},vcs_password:{type:"string"},vcs_username:{type:"string"}},url:"/repos/:owner/:repo/import"}},oauthAuthorizations:{checkAuthorization:{deprecated:"octokit.oauthAuthorizations.checkAuthorization() has been renamed to octokit.apps.checkAuthorization() (2019-11-05)",method:"GET",params:{access_token:{required:true,type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/tokens/:access_token"},createAuthorization:{deprecated:"octokit.oauthAuthorizations.createAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization",method:"POST",params:{client_id:{type:"string"},client_secret:{type:"string"},fingerprint:{type:"string"},note:{required:true,type:"string"},note_url:{type:"string"},scopes:{type:"string[]"}},url:"/authorizations"},deleteAuthorization:{deprecated:"octokit.oauthAuthorizations.deleteAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#delete-an-authorization",method:"DELETE",params:{authorization_id:{required:true,type:"integer"}},url:"/authorizations/:authorization_id"},deleteGrant:{deprecated:"octokit.oauthAuthorizations.deleteGrant() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#delete-a-grant",method:"DELETE",params:{grant_id:{required:true,type:"integer"}},url:"/applications/grants/:grant_id"},getAuthorization:{deprecated:"octokit.oauthAuthorizations.getAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-a-single-authorization",method:"GET",params:{authorization_id:{required:true,type:"integer"}},url:"/authorizations/:authorization_id"},getGrant:{deprecated:"octokit.oauthAuthorizations.getGrant() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-a-single-grant",method:"GET",params:{grant_id:{required:true,type:"integer"}},url:"/applications/grants/:grant_id"},getOrCreateAuthorizationForApp:{deprecated:"octokit.oauthAuthorizations.getOrCreateAuthorizationForApp() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app",method:"PUT",params:{client_id:{required:true,type:"string"},client_secret:{required:true,type:"string"},fingerprint:{type:"string"},note:{type:"string"},note_url:{type:"string"},scopes:{type:"string[]"}},url:"/authorizations/clients/:client_id"},getOrCreateAuthorizationForAppAndFingerprint:{deprecated:"octokit.oauthAuthorizations.getOrCreateAuthorizationForAppAndFingerprint() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint",method:"PUT",params:{client_id:{required:true,type:"string"},client_secret:{required:true,type:"string"},fingerprint:{required:true,type:"string"},note:{type:"string"},note_url:{type:"string"},scopes:{type:"string[]"}},url:"/authorizations/clients/:client_id/:fingerprint"},getOrCreateAuthorizationForAppFingerprint:{deprecated:"octokit.oauthAuthorizations.getOrCreateAuthorizationForAppFingerprint() has been renamed to octokit.oauthAuthorizations.getOrCreateAuthorizationForAppAndFingerprint() (2018-12-27)",method:"PUT",params:{client_id:{required:true,type:"string"},client_secret:{required:true,type:"string"},fingerprint:{required:true,type:"string"},note:{type:"string"},note_url:{type:"string"},scopes:{type:"string[]"}},url:"/authorizations/clients/:client_id/:fingerprint"},listAuthorizations:{deprecated:"octokit.oauthAuthorizations.listAuthorizations() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#list-your-authorizations",method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/authorizations"},listGrants:{deprecated:"octokit.oauthAuthorizations.listGrants() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#list-your-grants",method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/applications/grants"},resetAuthorization:{deprecated:"octokit.oauthAuthorizations.resetAuthorization() has been renamed to octokit.apps.resetAuthorization() (2019-11-05)",method:"POST",params:{access_token:{required:true,type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/tokens/:access_token"},revokeAuthorizationForApplication:{deprecated:"octokit.oauthAuthorizations.revokeAuthorizationForApplication() has been renamed to octokit.apps.revokeAuthorizationForApplication() (2019-11-05)",method:"DELETE",params:{access_token:{required:true,type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/tokens/:access_token"},revokeGrantForApplication:{deprecated:"octokit.oauthAuthorizations.revokeGrantForApplication() has been renamed to octokit.apps.revokeGrantForApplication() (2019-11-05)",method:"DELETE",params:{access_token:{required:true,type:"string"},client_id:{required:true,type:"string"}},url:"/applications/:client_id/grants/:access_token"},updateAuthorization:{deprecated:"octokit.oauthAuthorizations.updateAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#update-an-existing-authorization",method:"PATCH",params:{add_scopes:{type:"string[]"},authorization_id:{required:true,type:"integer"},fingerprint:{type:"string"},note:{type:"string"},note_url:{type:"string"},remove_scopes:{type:"string[]"},scopes:{type:"string[]"}},url:"/authorizations/:authorization_id"}},orgs:{addOrUpdateMembership:{method:"PUT",params:{org:{required:true,type:"string"},role:{enum:["admin","member"],type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/memberships/:username"},blockUser:{method:"PUT",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/blocks/:username"},checkBlockedUser:{method:"GET",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/blocks/:username"},checkMembership:{method:"GET",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/members/:username"},checkPublicMembership:{method:"GET",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/public_members/:username"},concealMembership:{method:"DELETE",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/public_members/:username"},convertMemberToOutsideCollaborator:{method:"PUT",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/outside_collaborators/:username"},createHook:{method:"POST",params:{active:{type:"boolean"},config:{required:true,type:"object"},"config.content_type":{type:"string"},"config.insecure_ssl":{type:"string"},"config.secret":{type:"string"},"config.url":{required:true,type:"string"},events:{type:"string[]"},name:{required:true,type:"string"},org:{required:true,type:"string"}},url:"/orgs/:org/hooks"},createInvitation:{method:"POST",params:{email:{type:"string"},invitee_id:{type:"integer"},org:{required:true,type:"string"},role:{enum:["admin","direct_member","billing_manager"],type:"string"},team_ids:{type:"integer[]"}},url:"/orgs/:org/invitations"},deleteHook:{method:"DELETE",params:{hook_id:{required:true,type:"integer"},org:{required:true,type:"string"}},url:"/orgs/:org/hooks/:hook_id"},get:{method:"GET",params:{org:{required:true,type:"string"}},url:"/orgs/:org"},getHook:{method:"GET",params:{hook_id:{required:true,type:"integer"},org:{required:true,type:"string"}},url:"/orgs/:org/hooks/:hook_id"},getMembership:{method:"GET",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/memberships/:username"},getMembershipForAuthenticatedUser:{method:"GET",params:{org:{required:true,type:"string"}},url:"/user/memberships/orgs/:org"},list:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},since:{type:"integer"}},url:"/organizations"},listBlockedUsers:{method:"GET",params:{org:{required:true,type:"string"}},url:"/orgs/:org/blocks"},listForAuthenticatedUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/orgs"},listForUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},username:{required:true,type:"string"}},url:"/users/:username/orgs"},listHooks:{method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/orgs/:org/hooks"},listInstallations:{headers:{accept:"application/vnd.github.machine-man-preview+json"},method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/orgs/:org/installations"},listInvitationTeams:{method:"GET",params:{invitation_id:{required:true,type:"integer"},org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/orgs/:org/invitations/:invitation_id/teams"},listMembers:{method:"GET",params:{filter:{enum:["2fa_disabled","all"],type:"string"},org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},role:{enum:["all","admin","member"],type:"string"}},url:"/orgs/:org/members"},listMemberships:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},state:{enum:["active","pending"],type:"string"}},url:"/user/memberships/orgs"},listOutsideCollaborators:{method:"GET",params:{filter:{enum:["2fa_disabled","all"],type:"string"},org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/orgs/:org/outside_collaborators"},listPendingInvitations:{method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/orgs/:org/invitations"},listPublicMembers:{method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/orgs/:org/public_members"},pingHook:{method:"POST",params:{hook_id:{required:true,type:"integer"},org:{required:true,type:"string"}},url:"/orgs/:org/hooks/:hook_id/pings"},publicizeMembership:{method:"PUT",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/public_members/:username"},removeMember:{method:"DELETE",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/members/:username"},removeMembership:{method:"DELETE",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/memberships/:username"},removeOutsideCollaborator:{method:"DELETE",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/outside_collaborators/:username"},unblockUser:{method:"DELETE",params:{org:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/blocks/:username"},update:{method:"PATCH",params:{billing_email:{type:"string"},company:{type:"string"},default_repository_permission:{enum:["read","write","admin","none"],type:"string"},description:{type:"string"},email:{type:"string"},has_organization_projects:{type:"boolean"},has_repository_projects:{type:"boolean"},location:{type:"string"},members_allowed_repository_creation_type:{enum:["all","private","none"],type:"string"},members_can_create_internal_repositories:{type:"boolean"},members_can_create_private_repositories:{type:"boolean"},members_can_create_public_repositories:{type:"boolean"},members_can_create_repositories:{type:"boolean"},name:{type:"string"},org:{required:true,type:"string"}},url:"/orgs/:org"},updateHook:{method:"PATCH",params:{active:{type:"boolean"},config:{type:"object"},"config.content_type":{type:"string"},"config.insecure_ssl":{type:"string"},"config.secret":{type:"string"},"config.url":{required:true,type:"string"},events:{type:"string[]"},hook_id:{required:true,type:"integer"},org:{required:true,type:"string"}},url:"/orgs/:org/hooks/:hook_id"},updateMembership:{method:"PATCH",params:{org:{required:true,type:"string"},state:{enum:["active"],required:true,type:"string"}},url:"/user/memberships/orgs/:org"}},projects:{addCollaborator:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"PUT",params:{permission:{enum:["read","write","admin"],type:"string"},project_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/projects/:project_id/collaborators/:username"},createCard:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"POST",params:{column_id:{required:true,type:"integer"},content_id:{type:"integer"},content_type:{type:"string"},note:{type:"string"}},url:"/projects/columns/:column_id/cards"},createColumn:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"POST",params:{name:{required:true,type:"string"},project_id:{required:true,type:"integer"}},url:"/projects/:project_id/columns"},createForAuthenticatedUser:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"POST",params:{body:{type:"string"},name:{required:true,type:"string"}},url:"/user/projects"},createForOrg:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"POST",params:{body:{type:"string"},name:{required:true,type:"string"},org:{required:true,type:"string"}},url:"/orgs/:org/projects"},createForRepo:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"POST",params:{body:{type:"string"},name:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/projects"},delete:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"DELETE",params:{project_id:{required:true,type:"integer"}},url:"/projects/:project_id"},deleteCard:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"DELETE",params:{card_id:{required:true,type:"integer"}},url:"/projects/columns/cards/:card_id"},deleteColumn:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"DELETE",params:{column_id:{required:true,type:"integer"}},url:"/projects/columns/:column_id"},get:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{project_id:{required:true,type:"integer"}},url:"/projects/:project_id"},getCard:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{card_id:{required:true,type:"integer"}},url:"/projects/columns/cards/:card_id"},getColumn:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{column_id:{required:true,type:"integer"}},url:"/projects/columns/:column_id"},listCards:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{archived_state:{enum:["all","archived","not_archived"],type:"string"},column_id:{required:true,type:"integer"},page:{type:"integer"},per_page:{type:"integer"}},url:"/projects/columns/:column_id/cards"},listCollaborators:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{affiliation:{enum:["outside","direct","all"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},project_id:{required:true,type:"integer"}},url:"/projects/:project_id/collaborators"},listColumns:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},project_id:{required:true,type:"integer"}},url:"/projects/:project_id/columns"},listForOrg:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},state:{enum:["open","closed","all"],type:"string"}},url:"/orgs/:org/projects"},listForRepo:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},state:{enum:["open","closed","all"],type:"string"}},url:"/repos/:owner/:repo/projects"},listForUser:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},state:{enum:["open","closed","all"],type:"string"},username:{required:true,type:"string"}},url:"/users/:username/projects"},moveCard:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"POST",params:{card_id:{required:true,type:"integer"},column_id:{type:"integer"},position:{required:true,type:"string",validation:"^(top|bottom|after:\\d+)$"}},url:"/projects/columns/cards/:card_id/moves"},moveColumn:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"POST",params:{column_id:{required:true,type:"integer"},position:{required:true,type:"string",validation:"^(first|last|after:\\d+)$"}},url:"/projects/columns/:column_id/moves"},removeCollaborator:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"DELETE",params:{project_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/projects/:project_id/collaborators/:username"},reviewUserPermissionLevel:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{project_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/projects/:project_id/collaborators/:username/permission"},update:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"PATCH",params:{body:{type:"string"},name:{type:"string"},organization_permission:{type:"string"},private:{type:"boolean"},project_id:{required:true,type:"integer"},state:{enum:["open","closed"],type:"string"}},url:"/projects/:project_id"},updateCard:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"PATCH",params:{archived:{type:"boolean"},card_id:{required:true,type:"integer"},note:{type:"string"}},url:"/projects/columns/cards/:card_id"},updateColumn:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"PATCH",params:{column_id:{required:true,type:"integer"},name:{required:true,type:"string"}},url:"/projects/columns/:column_id"}},pulls:{checkIfMerged:{method:"GET",params:{number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/merge"},create:{method:"POST",params:{base:{required:true,type:"string"},body:{type:"string"},draft:{type:"boolean"},head:{required:true,type:"string"},maintainer_can_modify:{type:"boolean"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},title:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls"},createComment:{method:"POST",params:{body:{required:true,type:"string"},commit_id:{required:true,type:"string"},in_reply_to:{deprecated:true,description:"The comment ID to reply to. **Note**: This must be the ID of a top-level comment, not a reply to that comment. Replies to replies are not supported.",type:"integer"},line:{type:"integer"},number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},path:{required:true,type:"string"},position:{type:"integer"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},side:{enum:["LEFT","RIGHT"],type:"string"},start_line:{type:"integer"},start_side:{enum:["LEFT","RIGHT","side"],type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/comments"},createCommentReply:{deprecated:"octokit.pulls.createCommentReply() has been renamed to octokit.pulls.createComment() (2019-09-09)",method:"POST",params:{body:{required:true,type:"string"},commit_id:{required:true,type:"string"},in_reply_to:{deprecated:true,description:"The comment ID to reply to. **Note**: This must be the ID of a top-level comment, not a reply to that comment. Replies to replies are not supported.",type:"integer"},line:{type:"integer"},number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},path:{required:true,type:"string"},position:{type:"integer"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},side:{enum:["LEFT","RIGHT"],type:"string"},start_line:{type:"integer"},start_side:{enum:["LEFT","RIGHT","side"],type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/comments"},createFromIssue:{deprecated:"octokit.pulls.createFromIssue() is deprecated, see https://developer.github.com/v3/pulls/#create-a-pull-request",method:"POST",params:{base:{required:true,type:"string"},draft:{type:"boolean"},head:{required:true,type:"string"},issue:{required:true,type:"integer"},maintainer_can_modify:{type:"boolean"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls"},createReview:{method:"POST",params:{body:{type:"string"},comments:{type:"object[]"},"comments[].body":{required:true,type:"string"},"comments[].path":{required:true,type:"string"},"comments[].position":{required:true,type:"integer"},commit_id:{type:"string"},event:{enum:["APPROVE","REQUEST_CHANGES","COMMENT"],type:"string"},number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/reviews"},createReviewCommentReply:{method:"POST",params:{body:{required:true,type:"string"},comment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/comments/:comment_id/replies"},createReviewRequest:{method:"POST",params:{number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},reviewers:{type:"string[]"},team_reviewers:{type:"string[]"}},url:"/repos/:owner/:repo/pulls/:pull_number/requested_reviewers"},deleteComment:{method:"DELETE",params:{comment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/comments/:comment_id"},deletePendingReview:{method:"DELETE",params:{number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},review_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id"},deleteReviewRequest:{method:"DELETE",params:{number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},reviewers:{type:"string[]"},team_reviewers:{type:"string[]"}},url:"/repos/:owner/:repo/pulls/:pull_number/requested_reviewers"},dismissReview:{method:"PUT",params:{message:{required:true,type:"string"},number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},review_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/dismissals"},get:{method:"GET",params:{number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number"},getComment:{method:"GET",params:{comment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/comments/:comment_id"},getCommentsForReview:{method:"GET",params:{number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},review_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/comments"},getReview:{method:"GET",params:{number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},review_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id"},list:{method:"GET",params:{base:{type:"string"},direction:{enum:["asc","desc"],type:"string"},head:{type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},sort:{enum:["created","updated","popularity","long-running"],type:"string"},state:{enum:["open","closed","all"],type:"string"}},url:"/repos/:owner/:repo/pulls"},listComments:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},since:{type:"string"},sort:{enum:["created","updated"],type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/comments"},listCommentsForRepo:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},since:{type:"string"},sort:{enum:["created","updated"],type:"string"}},url:"/repos/:owner/:repo/pulls/comments"},listCommits:{method:"GET",params:{number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/commits"},listFiles:{method:"GET",params:{number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/files"},listReviewRequests:{method:"GET",params:{number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/requested_reviewers"},listReviews:{method:"GET",params:{number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/reviews"},merge:{method:"PUT",params:{commit_message:{type:"string"},commit_title:{type:"string"},merge_method:{enum:["merge","squash","rebase"],type:"string"},number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},sha:{type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/merge"},submitReview:{method:"POST",params:{body:{type:"string"},event:{enum:["APPROVE","REQUEST_CHANGES","COMMENT"],required:true,type:"string"},number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},review_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/events"},update:{method:"PATCH",params:{base:{type:"string"},body:{type:"string"},maintainer_can_modify:{type:"boolean"},number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},state:{enum:["open","closed"],type:"string"},title:{type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number"},updateBranch:{headers:{accept:"application/vnd.github.lydian-preview+json"},method:"PUT",params:{expected_head_sha:{type:"string"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/:pull_number/update-branch"},updateComment:{method:"PATCH",params:{body:{required:true,type:"string"},comment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/comments/:comment_id"},updateReview:{method:"PUT",params:{body:{required:true,type:"string"},number:{alias:"pull_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},pull_number:{required:true,type:"integer"},repo:{required:true,type:"string"},review_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id"}},rateLimit:{get:{method:"GET",params:{},url:"/rate_limit"}},reactions:{createForCommitComment:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"POST",params:{comment_id:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/comments/:comment_id/reactions"},createForIssue:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"POST",params:{content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],required:true,type:"string"},issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/reactions"},createForIssueComment:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"POST",params:{comment_id:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/comments/:comment_id/reactions"},createForPullRequestReviewComment:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"POST",params:{comment_id:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/comments/:comment_id/reactions"},createForTeamDiscussion:{deprecated:"octokit.reactions.createForTeamDiscussion() has been renamed to octokit.reactions.createForTeamDiscussionLegacy() (2020-01-16)",headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"POST",params:{content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],required:true,type:"string"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/reactions"},createForTeamDiscussionComment:{deprecated:"octokit.reactions.createForTeamDiscussionComment() has been renamed to octokit.reactions.createForTeamDiscussionCommentLegacy() (2020-01-16)",headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"POST",params:{comment_number:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],required:true,type:"string"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"},createForTeamDiscussionCommentInOrg:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"POST",params:{comment_number:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],required:true,type:"string"},discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions"},createForTeamDiscussionCommentLegacy:{deprecated:"octokit.reactions.createForTeamDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment-legacy",headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"POST",params:{comment_number:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],required:true,type:"string"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"},createForTeamDiscussionInOrg:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"POST",params:{content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],required:true,type:"string"},discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions"},createForTeamDiscussionLegacy:{deprecated:"octokit.reactions.createForTeamDiscussionLegacy() is deprecated, see https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-legacy",headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"POST",params:{content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],required:true,type:"string"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/reactions"},delete:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"DELETE",params:{reaction_id:{required:true,type:"integer"}},url:"/reactions/:reaction_id"},listForCommitComment:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"GET",params:{comment_id:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/comments/:comment_id/reactions"},listForIssue:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"GET",params:{content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],type:"string"},issue_number:{required:true,type:"integer"},number:{alias:"issue_number",deprecated:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/:issue_number/reactions"},listForIssueComment:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"GET",params:{comment_id:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/issues/comments/:comment_id/reactions"},listForPullRequestReviewComment:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"GET",params:{comment_id:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pulls/comments/:comment_id/reactions"},listForTeamDiscussion:{deprecated:"octokit.reactions.listForTeamDiscussion() has been renamed to octokit.reactions.listForTeamDiscussionLegacy() (2020-01-16)",headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"GET",params:{content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],type:"string"},discussion_number:{required:true,type:"integer"},page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/reactions"},listForTeamDiscussionComment:{deprecated:"octokit.reactions.listForTeamDiscussionComment() has been renamed to octokit.reactions.listForTeamDiscussionCommentLegacy() (2020-01-16)",headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"GET",params:{comment_number:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],type:"string"},discussion_number:{required:true,type:"integer"},page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"},listForTeamDiscussionCommentInOrg:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"GET",params:{comment_number:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],type:"string"},discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions"},listForTeamDiscussionCommentLegacy:{deprecated:"octokit.reactions.listForTeamDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment-legacy",headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"GET",params:{comment_number:{required:true,type:"integer"},content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],type:"string"},discussion_number:{required:true,type:"integer"},page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"},listForTeamDiscussionInOrg:{headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"GET",params:{content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],type:"string"},discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions"},listForTeamDiscussionLegacy:{deprecated:"octokit.reactions.listForTeamDiscussionLegacy() is deprecated, see https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-legacy",headers:{accept:"application/vnd.github.squirrel-girl-preview+json"},method:"GET",params:{content:{enum:["+1","-1","laugh","confused","heart","hooray","rocket","eyes"],type:"string"},discussion_number:{required:true,type:"integer"},page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/reactions"}},repos:{acceptInvitation:{method:"PATCH",params:{invitation_id:{required:true,type:"integer"}},url:"/user/repository_invitations/:invitation_id"},addCollaborator:{method:"PUT",params:{owner:{required:true,type:"string"},permission:{enum:["pull","push","admin"],type:"string"},repo:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/repos/:owner/:repo/collaborators/:username"},addDeployKey:{method:"POST",params:{key:{required:true,type:"string"},owner:{required:true,type:"string"},read_only:{type:"boolean"},repo:{required:true,type:"string"},title:{type:"string"}},url:"/repos/:owner/:repo/keys"},addProtectedBranchAdminEnforcement:{method:"POST",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/enforce_admins"},addProtectedBranchAppRestrictions:{method:"POST",params:{apps:{mapTo:"data",required:true,type:"string[]"},branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"},addProtectedBranchRequiredSignatures:{headers:{accept:"application/vnd.github.zzzax-preview+json"},method:"POST",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_signatures"},addProtectedBranchRequiredStatusChecksContexts:{method:"POST",params:{branch:{required:true,type:"string"},contexts:{mapTo:"data",required:true,type:"string[]"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"},addProtectedBranchTeamRestrictions:{method:"POST",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},teams:{mapTo:"data",required:true,type:"string[]"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"},addProtectedBranchUserRestrictions:{method:"POST",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},users:{mapTo:"data",required:true,type:"string[]"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/users"},checkCollaborator:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/repos/:owner/:repo/collaborators/:username"},checkVulnerabilityAlerts:{headers:{accept:"application/vnd.github.dorian-preview+json"},method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/vulnerability-alerts"},compareCommits:{method:"GET",params:{base:{required:true,type:"string"},head:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/compare/:base...:head"},createCommitComment:{method:"POST",params:{body:{required:true,type:"string"},commit_sha:{required:true,type:"string"},line:{type:"integer"},owner:{required:true,type:"string"},path:{type:"string"},position:{type:"integer"},repo:{required:true,type:"string"},sha:{alias:"commit_sha",deprecated:true,type:"string"}},url:"/repos/:owner/:repo/commits/:commit_sha/comments"},createDeployment:{method:"POST",params:{auto_merge:{type:"boolean"},description:{type:"string"},environment:{type:"string"},owner:{required:true,type:"string"},payload:{type:"string"},production_environment:{type:"boolean"},ref:{required:true,type:"string"},repo:{required:true,type:"string"},required_contexts:{type:"string[]"},task:{type:"string"},transient_environment:{type:"boolean"}},url:"/repos/:owner/:repo/deployments"},createDeploymentStatus:{method:"POST",params:{auto_inactive:{type:"boolean"},deployment_id:{required:true,type:"integer"},description:{type:"string"},environment:{enum:["production","staging","qa"],type:"string"},environment_url:{type:"string"},log_url:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},state:{enum:["error","failure","inactive","in_progress","queued","pending","success"],required:true,type:"string"},target_url:{type:"string"}},url:"/repos/:owner/:repo/deployments/:deployment_id/statuses"},createDispatchEvent:{method:"POST",params:{client_payload:{type:"object"},event_type:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/dispatches"},createFile:{deprecated:"octokit.repos.createFile() has been renamed to octokit.repos.createOrUpdateFile() (2019-06-07)",method:"PUT",params:{author:{type:"object"},"author.email":{required:true,type:"string"},"author.name":{required:true,type:"string"},branch:{type:"string"},committer:{type:"object"},"committer.email":{required:true,type:"string"},"committer.name":{required:true,type:"string"},content:{required:true,type:"string"},message:{required:true,type:"string"},owner:{required:true,type:"string"},path:{required:true,type:"string"},repo:{required:true,type:"string"},sha:{type:"string"}},url:"/repos/:owner/:repo/contents/:path"},createForAuthenticatedUser:{method:"POST",params:{allow_merge_commit:{type:"boolean"},allow_rebase_merge:{type:"boolean"},allow_squash_merge:{type:"boolean"},auto_init:{type:"boolean"},delete_branch_on_merge:{type:"boolean"},description:{type:"string"},gitignore_template:{type:"string"},has_issues:{type:"boolean"},has_projects:{type:"boolean"},has_wiki:{type:"boolean"},homepage:{type:"string"},is_template:{type:"boolean"},license_template:{type:"string"},name:{required:true,type:"string"},private:{type:"boolean"},team_id:{type:"integer"},visibility:{enum:["public","private","visibility","internal"],type:"string"}},url:"/user/repos"},createFork:{method:"POST",params:{organization:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/forks"},createHook:{method:"POST",params:{active:{type:"boolean"},config:{required:true,type:"object"},"config.content_type":{type:"string"},"config.insecure_ssl":{type:"string"},"config.secret":{type:"string"},"config.url":{required:true,type:"string"},events:{type:"string[]"},name:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/hooks"},createInOrg:{method:"POST",params:{allow_merge_commit:{type:"boolean"},allow_rebase_merge:{type:"boolean"},allow_squash_merge:{type:"boolean"},auto_init:{type:"boolean"},delete_branch_on_merge:{type:"boolean"},description:{type:"string"},gitignore_template:{type:"string"},has_issues:{type:"boolean"},has_projects:{type:"boolean"},has_wiki:{type:"boolean"},homepage:{type:"string"},is_template:{type:"boolean"},license_template:{type:"string"},name:{required:true,type:"string"},org:{required:true,type:"string"},private:{type:"boolean"},team_id:{type:"integer"},visibility:{enum:["public","private","visibility","internal"],type:"string"}},url:"/orgs/:org/repos"},createOrUpdateFile:{method:"PUT",params:{author:{type:"object"},"author.email":{required:true,type:"string"},"author.name":{required:true,type:"string"},branch:{type:"string"},committer:{type:"object"},"committer.email":{required:true,type:"string"},"committer.name":{required:true,type:"string"},content:{required:true,type:"string"},message:{required:true,type:"string"},owner:{required:true,type:"string"},path:{required:true,type:"string"},repo:{required:true,type:"string"},sha:{type:"string"}},url:"/repos/:owner/:repo/contents/:path"},createRelease:{method:"POST",params:{body:{type:"string"},draft:{type:"boolean"},name:{type:"string"},owner:{required:true,type:"string"},prerelease:{type:"boolean"},repo:{required:true,type:"string"},tag_name:{required:true,type:"string"},target_commitish:{type:"string"}},url:"/repos/:owner/:repo/releases"},createStatus:{method:"POST",params:{context:{type:"string"},description:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},sha:{required:true,type:"string"},state:{enum:["error","failure","pending","success"],required:true,type:"string"},target_url:{type:"string"}},url:"/repos/:owner/:repo/statuses/:sha"},createUsingTemplate:{headers:{accept:"application/vnd.github.baptiste-preview+json"},method:"POST",params:{description:{type:"string"},name:{required:true,type:"string"},owner:{type:"string"},private:{type:"boolean"},template_owner:{required:true,type:"string"},template_repo:{required:true,type:"string"}},url:"/repos/:template_owner/:template_repo/generate"},declineInvitation:{method:"DELETE",params:{invitation_id:{required:true,type:"integer"}},url:"/user/repository_invitations/:invitation_id"},delete:{method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo"},deleteCommitComment:{method:"DELETE",params:{comment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/comments/:comment_id"},deleteDownload:{method:"DELETE",params:{download_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/downloads/:download_id"},deleteFile:{method:"DELETE",params:{author:{type:"object"},"author.email":{type:"string"},"author.name":{type:"string"},branch:{type:"string"},committer:{type:"object"},"committer.email":{type:"string"},"committer.name":{type:"string"},message:{required:true,type:"string"},owner:{required:true,type:"string"},path:{required:true,type:"string"},repo:{required:true,type:"string"},sha:{required:true,type:"string"}},url:"/repos/:owner/:repo/contents/:path"},deleteHook:{method:"DELETE",params:{hook_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/hooks/:hook_id"},deleteInvitation:{method:"DELETE",params:{invitation_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/invitations/:invitation_id"},deleteRelease:{method:"DELETE",params:{owner:{required:true,type:"string"},release_id:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/releases/:release_id"},deleteReleaseAsset:{method:"DELETE",params:{asset_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/releases/assets/:asset_id"},disableAutomatedSecurityFixes:{headers:{accept:"application/vnd.github.london-preview+json"},method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/automated-security-fixes"},disablePagesSite:{headers:{accept:"application/vnd.github.switcheroo-preview+json"},method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pages"},disableVulnerabilityAlerts:{headers:{accept:"application/vnd.github.dorian-preview+json"},method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/vulnerability-alerts"},enableAutomatedSecurityFixes:{headers:{accept:"application/vnd.github.london-preview+json"},method:"PUT",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/automated-security-fixes"},enablePagesSite:{headers:{accept:"application/vnd.github.switcheroo-preview+json"},method:"POST",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},source:{type:"object"},"source.branch":{enum:["master","gh-pages"],type:"string"},"source.path":{type:"string"}},url:"/repos/:owner/:repo/pages"},enableVulnerabilityAlerts:{headers:{accept:"application/vnd.github.dorian-preview+json"},method:"PUT",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/vulnerability-alerts"},get:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo"},getAppsWithAccessToProtectedBranch:{method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"},getArchiveLink:{method:"GET",params:{archive_format:{required:true,type:"string"},owner:{required:true,type:"string"},ref:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/:archive_format/:ref"},getBranch:{method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch"},getBranchProtection:{method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection"},getClones:{method:"GET",params:{owner:{required:true,type:"string"},per:{enum:["day","week"],type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/traffic/clones"},getCodeFrequencyStats:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/stats/code_frequency"},getCollaboratorPermissionLevel:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/repos/:owner/:repo/collaborators/:username/permission"},getCombinedStatusForRef:{method:"GET",params:{owner:{required:true,type:"string"},ref:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/commits/:ref/status"},getCommit:{method:"GET",params:{commit_sha:{alias:"ref",deprecated:true,type:"string"},owner:{required:true,type:"string"},ref:{required:true,type:"string"},repo:{required:true,type:"string"},sha:{alias:"ref",deprecated:true,type:"string"}},url:"/repos/:owner/:repo/commits/:ref"},getCommitActivityStats:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/stats/commit_activity"},getCommitComment:{method:"GET",params:{comment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/comments/:comment_id"},getCommitRefSha:{deprecated:"octokit.repos.getCommitRefSha() is deprecated, see https://developer.github.com/v3/repos/commits/#get-a-single-commit",headers:{accept:"application/vnd.github.v3.sha"},method:"GET",params:{owner:{required:true,type:"string"},ref:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/commits/:ref"},getContents:{method:"GET",params:{owner:{required:true,type:"string"},path:{required:true,type:"string"},ref:{type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/contents/:path"},getContributorsStats:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/stats/contributors"},getDeployKey:{method:"GET",params:{key_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/keys/:key_id"},getDeployment:{method:"GET",params:{deployment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/deployments/:deployment_id"},getDeploymentStatus:{method:"GET",params:{deployment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},status_id:{required:true,type:"integer"}},url:"/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id"},getDownload:{method:"GET",params:{download_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/downloads/:download_id"},getHook:{method:"GET",params:{hook_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/hooks/:hook_id"},getLatestPagesBuild:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pages/builds/latest"},getLatestRelease:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/releases/latest"},getPages:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pages"},getPagesBuild:{method:"GET",params:{build_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pages/builds/:build_id"},getParticipationStats:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/stats/participation"},getProtectedBranchAdminEnforcement:{method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/enforce_admins"},getProtectedBranchPullRequestReviewEnforcement:{method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"},getProtectedBranchRequiredSignatures:{headers:{accept:"application/vnd.github.zzzax-preview+json"},method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_signatures"},getProtectedBranchRequiredStatusChecks:{method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks"},getProtectedBranchRestrictions:{method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions"},getPunchCardStats:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/stats/punch_card"},getReadme:{method:"GET",params:{owner:{required:true,type:"string"},ref:{type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/readme"},getRelease:{method:"GET",params:{owner:{required:true,type:"string"},release_id:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/releases/:release_id"},getReleaseAsset:{method:"GET",params:{asset_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/releases/assets/:asset_id"},getReleaseByTag:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},tag:{required:true,type:"string"}},url:"/repos/:owner/:repo/releases/tags/:tag"},getTeamsWithAccessToProtectedBranch:{method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"},getTopPaths:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/traffic/popular/paths"},getTopReferrers:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/traffic/popular/referrers"},getUsersWithAccessToProtectedBranch:{method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/users"},getViews:{method:"GET",params:{owner:{required:true,type:"string"},per:{enum:["day","week"],type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/traffic/views"},list:{method:"GET",params:{affiliation:{type:"string"},direction:{enum:["asc","desc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},sort:{enum:["created","updated","pushed","full_name"],type:"string"},type:{enum:["all","owner","public","private","member"],type:"string"},visibility:{enum:["all","public","private"],type:"string"}},url:"/user/repos"},listAppsWithAccessToProtectedBranch:{deprecated:"octokit.repos.listAppsWithAccessToProtectedBranch() has been renamed to octokit.repos.getAppsWithAccessToProtectedBranch() (2019-09-13)",method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"},listAssetsForRelease:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},release_id:{required:true,type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/releases/:release_id/assets"},listBranches:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},protected:{type:"boolean"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches"},listBranchesForHeadCommit:{headers:{accept:"application/vnd.github.groot-preview+json"},method:"GET",params:{commit_sha:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/commits/:commit_sha/branches-where-head"},listCollaborators:{method:"GET",params:{affiliation:{enum:["outside","direct","all"],type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/collaborators"},listCommentsForCommit:{method:"GET",params:{commit_sha:{required:true,type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},ref:{alias:"commit_sha",deprecated:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/commits/:commit_sha/comments"},listCommitComments:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/comments"},listCommits:{method:"GET",params:{author:{type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},path:{type:"string"},per_page:{type:"integer"},repo:{required:true,type:"string"},sha:{type:"string"},since:{type:"string"},until:{type:"string"}},url:"/repos/:owner/:repo/commits"},listContributors:{method:"GET",params:{anon:{type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/contributors"},listDeployKeys:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/keys"},listDeploymentStatuses:{method:"GET",params:{deployment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/deployments/:deployment_id/statuses"},listDeployments:{method:"GET",params:{environment:{type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},ref:{type:"string"},repo:{required:true,type:"string"},sha:{type:"string"},task:{type:"string"}},url:"/repos/:owner/:repo/deployments"},listDownloads:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/downloads"},listForOrg:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},sort:{enum:["created","updated","pushed","full_name"],type:"string"},type:{enum:["all","public","private","forks","sources","member","internal"],type:"string"}},url:"/orgs/:org/repos"},listForUser:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},sort:{enum:["created","updated","pushed","full_name"],type:"string"},type:{enum:["all","owner","member"],type:"string"},username:{required:true,type:"string"}},url:"/users/:username/repos"},listForks:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"},sort:{enum:["newest","oldest","stargazers"],type:"string"}},url:"/repos/:owner/:repo/forks"},listHooks:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/hooks"},listInvitations:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/invitations"},listInvitationsForAuthenticatedUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/repository_invitations"},listLanguages:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/languages"},listPagesBuilds:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pages/builds"},listProtectedBranchRequiredStatusChecksContexts:{method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"},listProtectedBranchTeamRestrictions:{deprecated:"octokit.repos.listProtectedBranchTeamRestrictions() has been renamed to octokit.repos.getTeamsWithAccessToProtectedBranch() (2019-09-09)",method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"},listProtectedBranchUserRestrictions:{deprecated:"octokit.repos.listProtectedBranchUserRestrictions() has been renamed to octokit.repos.getUsersWithAccessToProtectedBranch() (2019-09-09)",method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/users"},listPublic:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},since:{type:"integer"}},url:"/repositories"},listPullRequestsAssociatedWithCommit:{headers:{accept:"application/vnd.github.groot-preview+json"},method:"GET",params:{commit_sha:{required:true,type:"string"},owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/commits/:commit_sha/pulls"},listReleases:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/releases"},listStatusesForRef:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},ref:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/commits/:ref/statuses"},listTags:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/tags"},listTeams:{method:"GET",params:{owner:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/teams"},listTeamsWithAccessToProtectedBranch:{deprecated:"octokit.repos.listTeamsWithAccessToProtectedBranch() has been renamed to octokit.repos.getTeamsWithAccessToProtectedBranch() (2019-09-13)",method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"},listTopics:{headers:{accept:"application/vnd.github.mercy-preview+json"},method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/topics"},listUsersWithAccessToProtectedBranch:{deprecated:"octokit.repos.listUsersWithAccessToProtectedBranch() has been renamed to octokit.repos.getUsersWithAccessToProtectedBranch() (2019-09-13)",method:"GET",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/users"},merge:{method:"POST",params:{base:{required:true,type:"string"},commit_message:{type:"string"},head:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/merges"},pingHook:{method:"POST",params:{hook_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/hooks/:hook_id/pings"},removeBranchProtection:{method:"DELETE",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection"},removeCollaborator:{method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/repos/:owner/:repo/collaborators/:username"},removeDeployKey:{method:"DELETE",params:{key_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/keys/:key_id"},removeProtectedBranchAdminEnforcement:{method:"DELETE",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/enforce_admins"},removeProtectedBranchAppRestrictions:{method:"DELETE",params:{apps:{mapTo:"data",required:true,type:"string[]"},branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"},removeProtectedBranchPullRequestReviewEnforcement:{method:"DELETE",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"},removeProtectedBranchRequiredSignatures:{headers:{accept:"application/vnd.github.zzzax-preview+json"},method:"DELETE",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_signatures"},removeProtectedBranchRequiredStatusChecks:{method:"DELETE",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks"},removeProtectedBranchRequiredStatusChecksContexts:{method:"DELETE",params:{branch:{required:true,type:"string"},contexts:{mapTo:"data",required:true,type:"string[]"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"},removeProtectedBranchRestrictions:{method:"DELETE",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions"},removeProtectedBranchTeamRestrictions:{method:"DELETE",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},teams:{mapTo:"data",required:true,type:"string[]"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"},removeProtectedBranchUserRestrictions:{method:"DELETE",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},users:{mapTo:"data",required:true,type:"string[]"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/users"},replaceProtectedBranchAppRestrictions:{method:"PUT",params:{apps:{mapTo:"data",required:true,type:"string[]"},branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"},replaceProtectedBranchRequiredStatusChecksContexts:{method:"PUT",params:{branch:{required:true,type:"string"},contexts:{mapTo:"data",required:true,type:"string[]"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"},replaceProtectedBranchTeamRestrictions:{method:"PUT",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},teams:{mapTo:"data",required:true,type:"string[]"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"},replaceProtectedBranchUserRestrictions:{method:"PUT",params:{branch:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},users:{mapTo:"data",required:true,type:"string[]"}},url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/users"},replaceTopics:{headers:{accept:"application/vnd.github.mercy-preview+json"},method:"PUT",params:{names:{required:true,type:"string[]"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/topics"},requestPageBuild:{method:"POST",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/pages/builds"},retrieveCommunityProfileMetrics:{method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/community/profile"},testPushHook:{method:"POST",params:{hook_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/hooks/:hook_id/tests"},transfer:{method:"POST",params:{new_owner:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},team_ids:{type:"integer[]"}},url:"/repos/:owner/:repo/transfer"},update:{method:"PATCH",params:{allow_merge_commit:{type:"boolean"},allow_rebase_merge:{type:"boolean"},allow_squash_merge:{type:"boolean"},archived:{type:"boolean"},default_branch:{type:"string"},delete_branch_on_merge:{type:"boolean"},description:{type:"string"},has_issues:{type:"boolean"},has_projects:{type:"boolean"},has_wiki:{type:"boolean"},homepage:{type:"string"},is_template:{type:"boolean"},name:{type:"string"},owner:{required:true,type:"string"},private:{type:"boolean"},repo:{required:true,type:"string"},visibility:{enum:["public","private","visibility","internal"],type:"string"}},url:"/repos/:owner/:repo"},updateBranchProtection:{method:"PUT",params:{allow_deletions:{type:"boolean"},allow_force_pushes:{allowNull:true,type:"boolean"},branch:{required:true,type:"string"},enforce_admins:{allowNull:true,required:true,type:"boolean"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},required_linear_history:{type:"boolean"},required_pull_request_reviews:{allowNull:true,required:true,type:"object"},"required_pull_request_reviews.dismiss_stale_reviews":{type:"boolean"},"required_pull_request_reviews.dismissal_restrictions":{type:"object"},"required_pull_request_reviews.dismissal_restrictions.teams":{type:"string[]"},"required_pull_request_reviews.dismissal_restrictions.users":{type:"string[]"},"required_pull_request_reviews.require_code_owner_reviews":{type:"boolean"},"required_pull_request_reviews.required_approving_review_count":{type:"integer"},required_status_checks:{allowNull:true,required:true,type:"object"},"required_status_checks.contexts":{required:true,type:"string[]"},"required_status_checks.strict":{required:true,type:"boolean"},restrictions:{allowNull:true,required:true,type:"object"},"restrictions.apps":{type:"string[]"},"restrictions.teams":{required:true,type:"string[]"},"restrictions.users":{required:true,type:"string[]"}},url:"/repos/:owner/:repo/branches/:branch/protection"},updateCommitComment:{method:"PATCH",params:{body:{required:true,type:"string"},comment_id:{required:true,type:"integer"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/comments/:comment_id"},updateFile:{deprecated:"octokit.repos.updateFile() has been renamed to octokit.repos.createOrUpdateFile() (2019-06-07)",method:"PUT",params:{author:{type:"object"},"author.email":{required:true,type:"string"},"author.name":{required:true,type:"string"},branch:{type:"string"},committer:{type:"object"},"committer.email":{required:true,type:"string"},"committer.name":{required:true,type:"string"},content:{required:true,type:"string"},message:{required:true,type:"string"},owner:{required:true,type:"string"},path:{required:true,type:"string"},repo:{required:true,type:"string"},sha:{type:"string"}},url:"/repos/:owner/:repo/contents/:path"},updateHook:{method:"PATCH",params:{active:{type:"boolean"},add_events:{type:"string[]"},config:{type:"object"},"config.content_type":{type:"string"},"config.insecure_ssl":{type:"string"},"config.secret":{type:"string"},"config.url":{required:true,type:"string"},events:{type:"string[]"},hook_id:{required:true,type:"integer"},owner:{required:true,type:"string"},remove_events:{type:"string[]"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/hooks/:hook_id"},updateInformationAboutPagesSite:{method:"PUT",params:{cname:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},source:{enum:['"gh-pages"','"master"','"master /docs"'],type:"string"}},url:"/repos/:owner/:repo/pages"},updateInvitation:{method:"PATCH",params:{invitation_id:{required:true,type:"integer"},owner:{required:true,type:"string"},permissions:{enum:["read","write","admin"],type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/invitations/:invitation_id"},updateProtectedBranchPullRequestReviewEnforcement:{method:"PATCH",params:{branch:{required:true,type:"string"},dismiss_stale_reviews:{type:"boolean"},dismissal_restrictions:{type:"object"},"dismissal_restrictions.teams":{type:"string[]"},"dismissal_restrictions.users":{type:"string[]"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},require_code_owner_reviews:{type:"boolean"},required_approving_review_count:{type:"integer"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"},updateProtectedBranchRequiredStatusChecks:{method:"PATCH",params:{branch:{required:true,type:"string"},contexts:{type:"string[]"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},strict:{type:"boolean"}},url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks"},updateRelease:{method:"PATCH",params:{body:{type:"string"},draft:{type:"boolean"},name:{type:"string"},owner:{required:true,type:"string"},prerelease:{type:"boolean"},release_id:{required:true,type:"integer"},repo:{required:true,type:"string"},tag_name:{type:"string"},target_commitish:{type:"string"}},url:"/repos/:owner/:repo/releases/:release_id"},updateReleaseAsset:{method:"PATCH",params:{asset_id:{required:true,type:"integer"},label:{type:"string"},name:{type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"}},url:"/repos/:owner/:repo/releases/assets/:asset_id"},uploadReleaseAsset:{method:"POST",params:{data:{mapTo:"data",required:true,type:"string | object"},file:{alias:"data",deprecated:true,type:"string | object"},headers:{required:true,type:"object"},"headers.content-length":{required:true,type:"integer"},"headers.content-type":{required:true,type:"string"},label:{type:"string"},name:{required:true,type:"string"},url:{required:true,type:"string"}},url:":url"}},search:{code:{method:"GET",params:{order:{enum:["desc","asc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},q:{required:true,type:"string"},sort:{enum:["indexed"],type:"string"}},url:"/search/code"},commits:{headers:{accept:"application/vnd.github.cloak-preview+json"},method:"GET",params:{order:{enum:["desc","asc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},q:{required:true,type:"string"},sort:{enum:["author-date","committer-date"],type:"string"}},url:"/search/commits"},issues:{deprecated:"octokit.search.issues() has been renamed to octokit.search.issuesAndPullRequests() (2018-12-27)",method:"GET",params:{order:{enum:["desc","asc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},q:{required:true,type:"string"},sort:{enum:["comments","reactions","reactions-+1","reactions--1","reactions-smile","reactions-thinking_face","reactions-heart","reactions-tada","interactions","created","updated"],type:"string"}},url:"/search/issues"},issuesAndPullRequests:{method:"GET",params:{order:{enum:["desc","asc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},q:{required:true,type:"string"},sort:{enum:["comments","reactions","reactions-+1","reactions--1","reactions-smile","reactions-thinking_face","reactions-heart","reactions-tada","interactions","created","updated"],type:"string"}},url:"/search/issues"},labels:{method:"GET",params:{order:{enum:["desc","asc"],type:"string"},q:{required:true,type:"string"},repository_id:{required:true,type:"integer"},sort:{enum:["created","updated"],type:"string"}},url:"/search/labels"},repos:{method:"GET",params:{order:{enum:["desc","asc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},q:{required:true,type:"string"},sort:{enum:["stars","forks","help-wanted-issues","updated"],type:"string"}},url:"/search/repositories"},topics:{method:"GET",params:{q:{required:true,type:"string"}},url:"/search/topics"},users:{method:"GET",params:{order:{enum:["desc","asc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},q:{required:true,type:"string"},sort:{enum:["followers","repositories","joined"],type:"string"}},url:"/search/users"}},teams:{addMember:{deprecated:"octokit.teams.addMember() has been renamed to octokit.teams.addMemberLegacy() (2020-01-16)",method:"PUT",params:{team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/members/:username"},addMemberLegacy:{deprecated:"octokit.teams.addMemberLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#add-team-member-legacy",method:"PUT",params:{team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/members/:username"},addOrUpdateMembership:{deprecated:"octokit.teams.addOrUpdateMembership() has been renamed to octokit.teams.addOrUpdateMembershipLegacy() (2020-01-16)",method:"PUT",params:{role:{enum:["member","maintainer"],type:"string"},team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/memberships/:username"},addOrUpdateMembershipInOrg:{method:"PUT",params:{org:{required:true,type:"string"},role:{enum:["member","maintainer"],type:"string"},team_slug:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/memberships/:username"},addOrUpdateMembershipLegacy:{deprecated:"octokit.teams.addOrUpdateMembershipLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#add-or-update-team-membership-legacy",method:"PUT",params:{role:{enum:["member","maintainer"],type:"string"},team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/memberships/:username"},addOrUpdateProject:{deprecated:"octokit.teams.addOrUpdateProject() has been renamed to octokit.teams.addOrUpdateProjectLegacy() (2020-01-16)",headers:{accept:"application/vnd.github.inertia-preview+json"},method:"PUT",params:{permission:{enum:["read","write","admin"],type:"string"},project_id:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/projects/:project_id"},addOrUpdateProjectInOrg:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"PUT",params:{org:{required:true,type:"string"},permission:{enum:["read","write","admin"],type:"string"},project_id:{required:true,type:"integer"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/projects/:project_id"},addOrUpdateProjectLegacy:{deprecated:"octokit.teams.addOrUpdateProjectLegacy() is deprecated, see https://developer.github.com/v3/teams/#add-or-update-team-project-legacy",headers:{accept:"application/vnd.github.inertia-preview+json"},method:"PUT",params:{permission:{enum:["read","write","admin"],type:"string"},project_id:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/projects/:project_id"},addOrUpdateRepo:{deprecated:"octokit.teams.addOrUpdateRepo() has been renamed to octokit.teams.addOrUpdateRepoLegacy() (2020-01-16)",method:"PUT",params:{owner:{required:true,type:"string"},permission:{enum:["pull","push","admin"],type:"string"},repo:{required:true,type:"string"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/repos/:owner/:repo"},addOrUpdateRepoInOrg:{method:"PUT",params:{org:{required:true,type:"string"},owner:{required:true,type:"string"},permission:{enum:["pull","push","admin"],type:"string"},repo:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/repos/:owner/:repo"},addOrUpdateRepoLegacy:{deprecated:"octokit.teams.addOrUpdateRepoLegacy() is deprecated, see https://developer.github.com/v3/teams/#add-or-update-team-repository-legacy",method:"PUT",params:{owner:{required:true,type:"string"},permission:{enum:["pull","push","admin"],type:"string"},repo:{required:true,type:"string"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/repos/:owner/:repo"},checkManagesRepo:{deprecated:"octokit.teams.checkManagesRepo() has been renamed to octokit.teams.checkManagesRepoLegacy() (2020-01-16)",method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/repos/:owner/:repo"},checkManagesRepoInOrg:{method:"GET",params:{org:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/repos/:owner/:repo"},checkManagesRepoLegacy:{deprecated:"octokit.teams.checkManagesRepoLegacy() is deprecated, see https://developer.github.com/v3/teams/#check-if-a-team-manages-a-repository-legacy",method:"GET",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/repos/:owner/:repo"},create:{method:"POST",params:{description:{type:"string"},maintainers:{type:"string[]"},name:{required:true,type:"string"},org:{required:true,type:"string"},parent_team_id:{type:"integer"},permission:{enum:["pull","push","admin"],type:"string"},privacy:{enum:["secret","closed"],type:"string"},repo_names:{type:"string[]"}},url:"/orgs/:org/teams"},createDiscussion:{deprecated:"octokit.teams.createDiscussion() has been renamed to octokit.teams.createDiscussionLegacy() (2020-01-16)",method:"POST",params:{body:{required:true,type:"string"},private:{type:"boolean"},team_id:{required:true,type:"integer"},title:{required:true,type:"string"}},url:"/teams/:team_id/discussions"},createDiscussionComment:{deprecated:"octokit.teams.createDiscussionComment() has been renamed to octokit.teams.createDiscussionCommentLegacy() (2020-01-16)",method:"POST",params:{body:{required:true,type:"string"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments"},createDiscussionCommentInOrg:{method:"POST",params:{body:{required:true,type:"string"},discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments"},createDiscussionCommentLegacy:{deprecated:"octokit.teams.createDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#create-a-comment-legacy",method:"POST",params:{body:{required:true,type:"string"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments"},createDiscussionInOrg:{method:"POST",params:{body:{required:true,type:"string"},org:{required:true,type:"string"},private:{type:"boolean"},team_slug:{required:true,type:"string"},title:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions"},createDiscussionLegacy:{deprecated:"octokit.teams.createDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#create-a-discussion-legacy",method:"POST",params:{body:{required:true,type:"string"},private:{type:"boolean"},team_id:{required:true,type:"integer"},title:{required:true,type:"string"}},url:"/teams/:team_id/discussions"},delete:{deprecated:"octokit.teams.delete() has been renamed to octokit.teams.deleteLegacy() (2020-01-16)",method:"DELETE",params:{team_id:{required:true,type:"integer"}},url:"/teams/:team_id"},deleteDiscussion:{deprecated:"octokit.teams.deleteDiscussion() has been renamed to octokit.teams.deleteDiscussionLegacy() (2020-01-16)",method:"DELETE",params:{discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number"},deleteDiscussionComment:{deprecated:"octokit.teams.deleteDiscussionComment() has been renamed to octokit.teams.deleteDiscussionCommentLegacy() (2020-01-16)",method:"DELETE",params:{comment_number:{required:true,type:"integer"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments/:comment_number"},deleteDiscussionCommentInOrg:{method:"DELETE",params:{comment_number:{required:true,type:"integer"},discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number"},deleteDiscussionCommentLegacy:{deprecated:"octokit.teams.deleteDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment-legacy",method:"DELETE",params:{comment_number:{required:true,type:"integer"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments/:comment_number"},deleteDiscussionInOrg:{method:"DELETE",params:{discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number"},deleteDiscussionLegacy:{deprecated:"octokit.teams.deleteDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#delete-a-discussion-legacy",method:"DELETE",params:{discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number"},deleteInOrg:{method:"DELETE",params:{org:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug"},deleteLegacy:{deprecated:"octokit.teams.deleteLegacy() is deprecated, see https://developer.github.com/v3/teams/#delete-team-legacy",method:"DELETE",params:{team_id:{required:true,type:"integer"}},url:"/teams/:team_id"},get:{deprecated:"octokit.teams.get() has been renamed to octokit.teams.getLegacy() (2020-01-16)",method:"GET",params:{team_id:{required:true,type:"integer"}},url:"/teams/:team_id"},getByName:{method:"GET",params:{org:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug"},getDiscussion:{deprecated:"octokit.teams.getDiscussion() has been renamed to octokit.teams.getDiscussionLegacy() (2020-01-16)",method:"GET",params:{discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number"},getDiscussionComment:{deprecated:"octokit.teams.getDiscussionComment() has been renamed to octokit.teams.getDiscussionCommentLegacy() (2020-01-16)",method:"GET",params:{comment_number:{required:true,type:"integer"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments/:comment_number"},getDiscussionCommentInOrg:{method:"GET",params:{comment_number:{required:true,type:"integer"},discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number"},getDiscussionCommentLegacy:{deprecated:"octokit.teams.getDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment-legacy",method:"GET",params:{comment_number:{required:true,type:"integer"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments/:comment_number"},getDiscussionInOrg:{method:"GET",params:{discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number"},getDiscussionLegacy:{deprecated:"octokit.teams.getDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#get-a-single-discussion-legacy",method:"GET",params:{discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number"},getLegacy:{deprecated:"octokit.teams.getLegacy() is deprecated, see https://developer.github.com/v3/teams/#get-team-legacy",method:"GET",params:{team_id:{required:true,type:"integer"}},url:"/teams/:team_id"},getMember:{deprecated:"octokit.teams.getMember() has been renamed to octokit.teams.getMemberLegacy() (2020-01-16)",method:"GET",params:{team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/members/:username"},getMemberLegacy:{deprecated:"octokit.teams.getMemberLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#get-team-member-legacy",method:"GET",params:{team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/members/:username"},getMembership:{deprecated:"octokit.teams.getMembership() has been renamed to octokit.teams.getMembershipLegacy() (2020-01-16)",method:"GET",params:{team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/memberships/:username"},getMembershipInOrg:{method:"GET",params:{org:{required:true,type:"string"},team_slug:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/memberships/:username"},getMembershipLegacy:{deprecated:"octokit.teams.getMembershipLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#get-team-membership-legacy",method:"GET",params:{team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/memberships/:username"},list:{method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"}},url:"/orgs/:org/teams"},listChild:{deprecated:"octokit.teams.listChild() has been renamed to octokit.teams.listChildLegacy() (2020-01-16)",method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/teams"},listChildInOrg:{method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/teams"},listChildLegacy:{deprecated:"octokit.teams.listChildLegacy() is deprecated, see https://developer.github.com/v3/teams/#list-child-teams-legacy",method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/teams"},listDiscussionComments:{deprecated:"octokit.teams.listDiscussionComments() has been renamed to octokit.teams.listDiscussionCommentsLegacy() (2020-01-16)",method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},discussion_number:{required:true,type:"integer"},page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments"},listDiscussionCommentsInOrg:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments"},listDiscussionCommentsLegacy:{deprecated:"octokit.teams.listDiscussionCommentsLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#list-comments-legacy",method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},discussion_number:{required:true,type:"integer"},page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments"},listDiscussions:{deprecated:"octokit.teams.listDiscussions() has been renamed to octokit.teams.listDiscussionsLegacy() (2020-01-16)",method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions"},listDiscussionsInOrg:{method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions"},listDiscussionsLegacy:{deprecated:"octokit.teams.listDiscussionsLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#list-discussions-legacy",method:"GET",params:{direction:{enum:["asc","desc"],type:"string"},page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions"},listForAuthenticatedUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/teams"},listMembers:{deprecated:"octokit.teams.listMembers() has been renamed to octokit.teams.listMembersLegacy() (2020-01-16)",method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},role:{enum:["member","maintainer","all"],type:"string"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/members"},listMembersInOrg:{method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},role:{enum:["member","maintainer","all"],type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/members"},listMembersLegacy:{deprecated:"octokit.teams.listMembersLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#list-team-members-legacy",method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},role:{enum:["member","maintainer","all"],type:"string"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/members"},listPendingInvitations:{deprecated:"octokit.teams.listPendingInvitations() has been renamed to octokit.teams.listPendingInvitationsLegacy() (2020-01-16)",method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/invitations"},listPendingInvitationsInOrg:{method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/invitations"},listPendingInvitationsLegacy:{deprecated:"octokit.teams.listPendingInvitationsLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#list-pending-team-invitations-legacy",method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/invitations"},listProjects:{deprecated:"octokit.teams.listProjects() has been renamed to octokit.teams.listProjectsLegacy() (2020-01-16)",headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/projects"},listProjectsInOrg:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/projects"},listProjectsLegacy:{deprecated:"octokit.teams.listProjectsLegacy() is deprecated, see https://developer.github.com/v3/teams/#list-team-projects-legacy",headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/projects"},listRepos:{deprecated:"octokit.teams.listRepos() has been renamed to octokit.teams.listReposLegacy() (2020-01-16)",method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/repos"},listReposInOrg:{method:"GET",params:{org:{required:true,type:"string"},page:{type:"integer"},per_page:{type:"integer"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/repos"},listReposLegacy:{deprecated:"octokit.teams.listReposLegacy() is deprecated, see https://developer.github.com/v3/teams/#list-team-repos-legacy",method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/repos"},removeMember:{deprecated:"octokit.teams.removeMember() has been renamed to octokit.teams.removeMemberLegacy() (2020-01-16)",method:"DELETE",params:{team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/members/:username"},removeMemberLegacy:{deprecated:"octokit.teams.removeMemberLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#remove-team-member-legacy",method:"DELETE",params:{team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/members/:username"},removeMembership:{deprecated:"octokit.teams.removeMembership() has been renamed to octokit.teams.removeMembershipLegacy() (2020-01-16)",method:"DELETE",params:{team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/memberships/:username"},removeMembershipInOrg:{method:"DELETE",params:{org:{required:true,type:"string"},team_slug:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/memberships/:username"},removeMembershipLegacy:{deprecated:"octokit.teams.removeMembershipLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#remove-team-membership-legacy",method:"DELETE",params:{team_id:{required:true,type:"integer"},username:{required:true,type:"string"}},url:"/teams/:team_id/memberships/:username"},removeProject:{deprecated:"octokit.teams.removeProject() has been renamed to octokit.teams.removeProjectLegacy() (2020-01-16)",method:"DELETE",params:{project_id:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/projects/:project_id"},removeProjectInOrg:{method:"DELETE",params:{org:{required:true,type:"string"},project_id:{required:true,type:"integer"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/projects/:project_id"},removeProjectLegacy:{deprecated:"octokit.teams.removeProjectLegacy() is deprecated, see https://developer.github.com/v3/teams/#remove-team-project-legacy",method:"DELETE",params:{project_id:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/projects/:project_id"},removeRepo:{deprecated:"octokit.teams.removeRepo() has been renamed to octokit.teams.removeRepoLegacy() (2020-01-16)",method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/repos/:owner/:repo"},removeRepoInOrg:{method:"DELETE",params:{org:{required:true,type:"string"},owner:{required:true,type:"string"},repo:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/repos/:owner/:repo"},removeRepoLegacy:{deprecated:"octokit.teams.removeRepoLegacy() is deprecated, see https://developer.github.com/v3/teams/#remove-team-repository-legacy",method:"DELETE",params:{owner:{required:true,type:"string"},repo:{required:true,type:"string"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/repos/:owner/:repo"},reviewProject:{deprecated:"octokit.teams.reviewProject() has been renamed to octokit.teams.reviewProjectLegacy() (2020-01-16)",headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{project_id:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/projects/:project_id"},reviewProjectInOrg:{headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{org:{required:true,type:"string"},project_id:{required:true,type:"integer"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/projects/:project_id"},reviewProjectLegacy:{deprecated:"octokit.teams.reviewProjectLegacy() is deprecated, see https://developer.github.com/v3/teams/#review-a-team-project-legacy",headers:{accept:"application/vnd.github.inertia-preview+json"},method:"GET",params:{project_id:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/projects/:project_id"},update:{deprecated:"octokit.teams.update() has been renamed to octokit.teams.updateLegacy() (2020-01-16)",method:"PATCH",params:{description:{type:"string"},name:{required:true,type:"string"},parent_team_id:{type:"integer"},permission:{enum:["pull","push","admin"],type:"string"},privacy:{enum:["secret","closed"],type:"string"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id"},updateDiscussion:{deprecated:"octokit.teams.updateDiscussion() has been renamed to octokit.teams.updateDiscussionLegacy() (2020-01-16)",method:"PATCH",params:{body:{type:"string"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"},title:{type:"string"}},url:"/teams/:team_id/discussions/:discussion_number"},updateDiscussionComment:{deprecated:"octokit.teams.updateDiscussionComment() has been renamed to octokit.teams.updateDiscussionCommentLegacy() (2020-01-16)",method:"PATCH",params:{body:{required:true,type:"string"},comment_number:{required:true,type:"integer"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments/:comment_number"},updateDiscussionCommentInOrg:{method:"PATCH",params:{body:{required:true,type:"string"},comment_number:{required:true,type:"integer"},discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number"},updateDiscussionCommentLegacy:{deprecated:"octokit.teams.updateDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment-legacy",method:"PATCH",params:{body:{required:true,type:"string"},comment_number:{required:true,type:"integer"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id/discussions/:discussion_number/comments/:comment_number"},updateDiscussionInOrg:{method:"PATCH",params:{body:{type:"string"},discussion_number:{required:true,type:"integer"},org:{required:true,type:"string"},team_slug:{required:true,type:"string"},title:{type:"string"}},url:"/orgs/:org/teams/:team_slug/discussions/:discussion_number"},updateDiscussionLegacy:{deprecated:"octokit.teams.updateDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#edit-a-discussion-legacy",method:"PATCH",params:{body:{type:"string"},discussion_number:{required:true,type:"integer"},team_id:{required:true,type:"integer"},title:{type:"string"}},url:"/teams/:team_id/discussions/:discussion_number"},updateInOrg:{method:"PATCH",params:{description:{type:"string"},name:{required:true,type:"string"},org:{required:true,type:"string"},parent_team_id:{type:"integer"},permission:{enum:["pull","push","admin"],type:"string"},privacy:{enum:["secret","closed"],type:"string"},team_slug:{required:true,type:"string"}},url:"/orgs/:org/teams/:team_slug"},updateLegacy:{deprecated:"octokit.teams.updateLegacy() is deprecated, see https://developer.github.com/v3/teams/#edit-team-legacy",method:"PATCH",params:{description:{type:"string"},name:{required:true,type:"string"},parent_team_id:{type:"integer"},permission:{enum:["pull","push","admin"],type:"string"},privacy:{enum:["secret","closed"],type:"string"},team_id:{required:true,type:"integer"}},url:"/teams/:team_id"}},users:{addEmails:{method:"POST",params:{emails:{required:true,type:"string[]"}},url:"/user/emails"},block:{method:"PUT",params:{username:{required:true,type:"string"}},url:"/user/blocks/:username"},checkBlocked:{method:"GET",params:{username:{required:true,type:"string"}},url:"/user/blocks/:username"},checkFollowing:{method:"GET",params:{username:{required:true,type:"string"}},url:"/user/following/:username"},checkFollowingForUser:{method:"GET",params:{target_user:{required:true,type:"string"},username:{required:true,type:"string"}},url:"/users/:username/following/:target_user"},createGpgKey:{method:"POST",params:{armored_public_key:{type:"string"}},url:"/user/gpg_keys"},createPublicKey:{method:"POST",params:{key:{type:"string"},title:{type:"string"}},url:"/user/keys"},deleteEmails:{method:"DELETE",params:{emails:{required:true,type:"string[]"}},url:"/user/emails"},deleteGpgKey:{method:"DELETE",params:{gpg_key_id:{required:true,type:"integer"}},url:"/user/gpg_keys/:gpg_key_id"},deletePublicKey:{method:"DELETE",params:{key_id:{required:true,type:"integer"}},url:"/user/keys/:key_id"},follow:{method:"PUT",params:{username:{required:true,type:"string"}},url:"/user/following/:username"},getAuthenticated:{method:"GET",params:{},url:"/user"},getByUsername:{method:"GET",params:{username:{required:true,type:"string"}},url:"/users/:username"},getContextForUser:{method:"GET",params:{subject_id:{type:"string"},subject_type:{enum:["organization","repository","issue","pull_request"],type:"string"},username:{required:true,type:"string"}},url:"/users/:username/hovercard"},getGpgKey:{method:"GET",params:{gpg_key_id:{required:true,type:"integer"}},url:"/user/gpg_keys/:gpg_key_id"},getPublicKey:{method:"GET",params:{key_id:{required:true,type:"integer"}},url:"/user/keys/:key_id"},list:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},since:{type:"string"}},url:"/users"},listBlocked:{method:"GET",params:{},url:"/user/blocks"},listEmails:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/emails"},listFollowersForAuthenticatedUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/followers"},listFollowersForUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},username:{required:true,type:"string"}},url:"/users/:username/followers"},listFollowingForAuthenticatedUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/following"},listFollowingForUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},username:{required:true,type:"string"}},url:"/users/:username/following"},listGpgKeys:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/gpg_keys"},listGpgKeysForUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},username:{required:true,type:"string"}},url:"/users/:username/gpg_keys"},listPublicEmails:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/public_emails"},listPublicKeys:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"}},url:"/user/keys"},listPublicKeysForUser:{method:"GET",params:{page:{type:"integer"},per_page:{type:"integer"},username:{required:true,type:"string"}},url:"/users/:username/keys"},togglePrimaryEmailVisibility:{method:"PATCH",params:{email:{required:true,type:"string"},visibility:{required:true,type:"string"}},url:"/user/email/visibility"},unblock:{method:"DELETE",params:{username:{required:true,type:"string"}},url:"/user/blocks/:username"},unfollow:{method:"DELETE",params:{username:{required:true,type:"string"}},url:"/user/following/:username"},updateAuthenticated:{method:"PATCH",params:{bio:{type:"string"},blog:{type:"string"},company:{type:"string"},email:{type:"string"},hireable:{type:"boolean"},location:{type:"string"},name:{type:"string"}},url:"/user"}}};const o="2.4.0";function registerEndpoints(e,t){Object.keys(t).forEach((i=>{if(!e[i]){e[i]={}}Object.keys(t[i]).forEach((r=>{const o=t[i][r];const l=["method","url","headers"].reduce(((e,t)=>{if(typeof o[t]!=="undefined"){e[t]=o[t]}return e}),{});l.request={validate:o.params};let c=e.request.defaults(l);const u=Object.keys(o.params||{}).find((e=>o.params[e].deprecated));if(u){const t=patchForDeprecation.bind(null,e,o);c=t(e.request.defaults(l),`.${i}.${r}()`);c.endpoint=t(c.endpoint,`.${i}.${r}.endpoint()`);c.endpoint.merge=t(c.endpoint.merge,`.${i}.${r}.endpoint.merge()`)}if(o.deprecated){e[i][r]=Object.assign((function deprecatedEndpointMethod(){e.log.warn(new s.Deprecation(`[@octokit/rest] ${o.deprecated}`));e[i][r]=c;return c.apply(null,arguments)}),c);return}e[i][r]=c}))}))}function patchForDeprecation(e,t,i,r){const patchedMethod=o=>{o=Object.assign({},o);Object.keys(o).forEach((i=>{if(t.params[i]&&t.params[i].deprecated){const l=t.params[i].alias;e.log.warn(new s.Deprecation(`[@octokit/rest] "${i}" parameter is deprecated for "${r}". Use "${l}" instead`));if(!(l in o)){o[l]=o[i]}delete o[i]}}));return i(o)};Object.keys(i).forEach((e=>{patchedMethod[e]=i[e]}));return patchedMethod}function restEndpointMethods(e){e.registerEndpoints=registerEndpoints.bind(null,e);registerEndpoints(e,r);[["gitdata","git"],["authorization","oauthAuthorizations"],["pullRequests","pulls"]].forEach((([t,i])=>{Object.defineProperty(e,t,{get(){e.log.warn(new s.Deprecation(`[@octokit/plugin-rest-endpoint-methods] "octokit.${t}.*" methods are deprecated, use "octokit.${i}.*" instead`));return e[i]}})}));return{}}restEndpointMethods.VERSION=o;t.restEndpointMethods=restEndpointMethods},10537:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var s=i(58932);var r=_interopDefault(i(1223));const o=r((e=>console.warn(e)));class RequestError extends Error{constructor(e,t,i){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="HttpError";this.status=t;Object.defineProperty(this,"code",{get(){o(new s.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));return t}});this.headers=i.headers||{};const r=Object.assign({},i.request);if(i.request.headers.authorization){r.headers=Object.assign({},i.request.headers,{authorization:i.request.headers.authorization.replace(/ .*$/," [REDACTED]")})}r.url=r.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]");this.request=r}}t.RequestError=RequestError},36234:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var s=i(59440);var r=i(41441);var o=_interopDefault(i(48840));var l=_interopDefault(i(80467));var c=i(10537);const u="5.3.2";function getBufferResponse(e){return e.arrayBuffer()}function fetchWrapper(e){if(o(e.body)||Array.isArray(e.body)){e.body=JSON.stringify(e.body)}let t={};let i;let s;const r=e.request&&e.request.fetch||l;return r(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((r=>{s=r.url;i=r.status;for(const e of r.headers){t[e[0]]=e[1]}if(i===204||i===205){return}if(e.method==="HEAD"){if(i<400){return}throw new c.RequestError(r.statusText,i,{headers:t,request:e})}if(i===304){throw new c.RequestError("Not modified",i,{headers:t,request:e})}if(i>=400){return r.text().then((s=>{const r=new c.RequestError(s,i,{headers:t,request:e});try{let e=JSON.parse(r.message);Object.assign(r,e);let t=e.errors;r.message=r.message+": "+t.map(JSON.stringify).join(", ")}catch(e){}throw r}))}const o=r.headers.get("content-type");if(/application\/json/.test(o)){return r.json()}if(!o||/^text\/|charset=utf-8$/.test(o)){return r.text()}return getBufferResponse(r)})).then((e=>({status:i,url:s,headers:t,data:e}))).catch((i=>{if(i instanceof c.RequestError){throw i}throw new c.RequestError(i.message,500,{headers:t,request:e})}))}function withDefaults(e,t){const i=e.defaults(t);const newApi=function(e,t){const s=i.merge(e,t);if(!s.request||!s.request.hook){return fetchWrapper(i.parse(s))}const request=(e,t)=>fetchWrapper(i.parse(i.merge(e,t)));Object.assign(request,{endpoint:i,defaults:withDefaults.bind(null,i)});return s.request.hook(request,s)};return Object.assign(newApi,{endpoint:i,defaults:withDefaults.bind(null,i)})}const m=withDefaults(s.endpoint,{headers:{"user-agent":`octokit-request.js/${u} ${r.getUserAgent()}`}});t.request=m},41441:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var s=_interopDefault(i(54824));function getUserAgent(){try{return`Node.js/${process.version.substr(1)} (${s()}; ${process.arch})`}catch(e){if(/wmic os get Caption/.test(e.message)){return"Windows <version undetectable>"}return"<environment undetectable>"}}t.getUserAgent=getUserAgent},29351:(e,t,i)=>{const{requestLog:s}=i(68883);const{restEndpointMethods:r}=i(83044);const o=i(29833);const l=[i(64555),i(33691),s,i(18579),r,i(42657),i(82072)];const c=o.plugin(l);function DeprecatedOctokit(e){const t=e&&e.log&&e.log.warn?e.log.warn:console.warn;t('[@octokit/rest] `const Octokit = require("@octokit/rest")` is deprecated. Use `const { Octokit } = require("@octokit/rest")` instead');return new c(e)}const u=Object.assign(DeprecatedOctokit,{Octokit:c});Object.keys(c).forEach((e=>{if(c.hasOwnProperty(e)){u[e]=c[e]}}));e.exports=u},30823:(e,t,i)=>{e.exports=Octokit;const{request:s}=i(36234);const r=i(83682);const o=i(64613);function Octokit(e,t){t=t||{};const i=new r.Collection;const l=Object.assign({debug:()=>{},info:()=>{},warn:console.warn,error:console.error},t&&t.log);const c={hook:i,log:l,request:s.defaults(o(t,l,i))};e.forEach((e=>e(c,t)));return c}},29833:(e,t,i)=>{const s=i(35320);e.exports=s()},35320:(e,t,i)=>{e.exports=factory;const s=i(30823);const r=i(77826);function factory(e){const t=s.bind(null,e||[]);t.plugin=r.bind(null,e||[]);return t}},64613:(e,t,i)=>{e.exports=parseOptions;const{Deprecation:s}=i(58932);const{getUserAgent:r}=i(45030);const o=i(1223);const l=i(51322);const c=o(((e,t)=>e.warn(t)));const u=o(((e,t)=>e.warn(t)));const m=o(((e,t)=>e.warn(t)));function parseOptions(e,t,i){if(e.headers){e.headers=Object.keys(e.headers).reduce(((t,i)=>{t[i.toLowerCase()]=e.headers[i];return t}),{})}const o={headers:e.headers||{},request:e.request||{},mediaType:{previews:[],format:""}};if(e.baseUrl){o.baseUrl=e.baseUrl}if(e.userAgent){o.headers["user-agent"]=e.userAgent}if(e.previews){o.mediaType.previews=e.previews}if(e.timeZone){o.headers["time-zone"]=e.timeZone}if(e.timeout){c(t,new s("[@octokit/rest] new Octokit({timeout}) is deprecated. Use {request: {timeout}} instead. See https://github.com/octokit/request.js#request"));o.request.timeout=e.timeout}if(e.agent){u(t,new s("[@octokit/rest] new Octokit({agent}) is deprecated. Use {request: {agent}} instead. See https://github.com/octokit/request.js#request"));o.request.agent=e.agent}if(e.headers){m(t,new s("[@octokit/rest] new Octokit({headers}) is deprecated. Use {userAgent, previews} instead. See https://github.com/octokit/request.js#request"))}const g=o.headers["user-agent"];const v=`octokit.js/${l.version} ${r()}`;o.headers["user-agent"]=[g,v].filter(Boolean).join(" ");o.request.hook=i.bind(null,"request");return o}},77826:(e,t,i)=>{e.exports=registerPlugin;const s=i(35320);function registerPlugin(e,t){return s(e.includes(t)?e:e.concat(t))}},795:(e,t,i)=>{e.exports=authenticate;const{Deprecation:s}=i(58932);const r=i(1223);const o=r(((e,t)=>e.warn(t)));function authenticate(e,t){o(e.octokit.log,new s('[@octokit/rest] octokit.authenticate() is deprecated. Use "auth" constructor option instead.'));if(!t){e.auth=false;return}switch(t.type){case"basic":if(!t.username||!t.password){throw new Error("Basic authentication requires both a username and password to be set")}break;case"oauth":if(!t.token&&!(t.key&&t.secret)){throw new Error("OAuth2 authentication requires a token or key & secret to be set")}break;case"token":case"app":if(!t.token){throw new Error("Token authentication requires a token to be set")}break;default:throw new Error("Invalid authentication type, must be 'basic', 'oauth', 'token' or 'app'")}e.auth=t}},47578:(e,t,i)=>{e.exports=authenticationBeforeRequest;const s=i(72358);const r=i(78216);function authenticationBeforeRequest(e,t){if(!e.auth.type){return}if(e.auth.type==="basic"){const i=s(`${e.auth.username}:${e.auth.password}`);t.headers.authorization=`Basic ${i}`;return}if(e.auth.type==="token"){t.headers.authorization=`token ${e.auth.token}`;return}if(e.auth.type==="app"){t.headers.authorization=`Bearer ${e.auth.token}`;const i=t.headers.accept.split(",").concat("application/vnd.github.machine-man-preview+json");t.headers.accept=r(i).filter(Boolean).join(",");return}t.url+=t.url.indexOf("?")===-1?"?":"&";if(e.auth.token){t.url+=`access_token=${encodeURIComponent(e.auth.token)}`;return}const i=encodeURIComponent(e.auth.key);const o=encodeURIComponent(e.auth.secret);t.url+=`client_id=${i}&client_secret=${o}`}},33691:(e,t,i)=>{e.exports=authenticationPlugin;const{Deprecation:s}=i(58932);const r=i(1223);const o=r(((e,t)=>e.warn(t)));const l=i(795);const c=i(47578);const u=i(54275);function authenticationPlugin(e,t){if(t.auth){e.authenticate=()=>{o(e.log,new s('[@octokit/rest] octokit.authenticate() is deprecated and has no effect when "auth" option is set on Octokit constructor'))};return}const i={octokit:e,auth:false};e.authenticate=l.bind(null,i);e.hook.before("request",c.bind(null,i));e.hook.error("request",u.bind(null,i))}},54275:(e,t,i)=>{e.exports=authenticationRequestError;const{RequestError:s}=i(10537);function authenticationRequestError(e,t,i){if(!t.headers)throw t;const r=/required/.test(t.headers["x-github-otp"]||"");if(t.status!==401||!r){throw t}if(t.status===401&&r&&t.request&&t.request.headers["x-github-otp"]){throw new s("Invalid one-time password for two-factor authentication",401,{headers:t.headers,request:i})}if(typeof e.auth.on2fa!=="function"){throw new s("2FA required, but options.on2fa is not a function. See https://github.com/octokit/rest.js#authentication",401,{headers:t.headers,request:i})}return Promise.resolve().then((()=>e.auth.on2fa())).then((t=>{const s=Object.assign(i,{headers:Object.assign({"x-github-otp":t},i.headers)});return e.octokit.request(s)}))}},99733:(e,t,i)=>{e.exports=authenticationBeforeRequest;const s=i(72358);const r=i(19603);function authenticationBeforeRequest(e,t){if(typeof e.auth==="string"){t.headers.authorization=r(e.auth);return}if(e.auth.username){const i=s(`${e.auth.username}:${e.auth.password}`);t.headers.authorization=`Basic ${i}`;if(e.otp){t.headers["x-github-otp"]=e.otp}return}if(e.auth.clientId){if(/\/applications\/:?[\w_]+\/tokens\/:?[\w_]+($|\?)/.test(t.url)){const i=s(`${e.auth.clientId}:${e.auth.clientSecret}`);t.headers.authorization=`Basic ${i}`;return}t.url+=t.url.indexOf("?")===-1?"?":"&";t.url+=`client_id=${e.auth.clientId}&client_secret=${e.auth.clientSecret}`;return}return Promise.resolve().then((()=>e.auth())).then((e=>{t.headers.authorization=r(e)}))}},64555:(e,t,i)=>{e.exports=authenticationPlugin;const{createTokenAuth:s}=i(40334);const{Deprecation:r}=i(58932);const o=i(1223);const l=i(99733);const c=i(3217);const u=i(18997);const m=i(19603);const g=o(((e,t)=>e.warn(t)));const v=o(((e,t)=>e.warn(t)));function authenticationPlugin(e,t){if(t.authStrategy){const i=t.authStrategy(t.auth);e.hook.wrap("request",i.hook);e.auth=i;return}if(!t.auth){e.auth=()=>Promise.resolve({type:"unauthenticated"});return}const i=typeof t.auth==="string"&&/^basic/.test(m(t.auth));if(typeof t.auth==="string"&&!i){const i=s(t.auth);e.hook.wrap("request",i.hook);e.auth=i;return}const[o,_]=i?[g,'Setting the "new Octokit({ auth })" option to a Basic Auth string is deprecated. Use https://github.com/octokit/auth-basic.js instead. See (https://octokit.github.io/rest.js/#authentication)']:[v,'Setting the "new Octokit({ auth })" option to an object without also setting the "authStrategy" option is deprecated and will be removed in v17. See (https://octokit.github.io/rest.js/#authentication)'];o(e.log,new r("[@octokit/rest] "+_));e.auth=()=>Promise.resolve({type:"deprecated",message:_});u(t.auth);const T={octokit:e,auth:t.auth};e.hook.before("request",l.bind(null,T));e.hook.error("request",c.bind(null,T))}},3217:(e,t,i)=>{e.exports=authenticationRequestError;const{RequestError:s}=i(10537);function authenticationRequestError(e,t,i){if(!t.headers)throw t;const r=/required/.test(t.headers["x-github-otp"]||"");if(t.status!==401||!r){throw t}if(t.status===401&&r&&t.request&&t.request.headers["x-github-otp"]){if(e.otp){delete e.otp}else{throw new s("Invalid one-time password for two-factor authentication",401,{headers:t.headers,request:i})}}if(typeof e.auth.on2fa!=="function"){throw new s("2FA required, but options.on2fa is not a function. See https://github.com/octokit/rest.js#authentication",401,{headers:t.headers,request:i})}return Promise.resolve().then((()=>e.auth.on2fa())).then((t=>{const s=Object.assign(i,{headers:Object.assign(i.headers,{"x-github-otp":t})});return e.octokit.request(s).then((i=>{e.otp=t;return i}))}))}},18997:e=>{e.exports=validateAuth;function validateAuth(e){if(typeof e==="string"){return}if(typeof e==="function"){return}if(e.username&&e.password){return}if(e.clientId&&e.clientSecret){return}throw new Error(`Invalid "auth" option: ${JSON.stringify(e)}`)}},19603:(e,t,i)=>{e.exports=withAuthorizationPrefix;const s=i(55224);const r=/^[\w-]+:/;function withAuthorizationPrefix(e){if(/^(basic|bearer|token) /i.test(e)){return e}try{if(r.test(s(e))){return`basic ${e}`}}catch(e){}if(e.split(/\./).length===3){return`bearer ${e}`}return`token ${e}`}},18579:(e,t,i)=>{e.exports=paginatePlugin;const{paginateRest:s}=i(64193);function paginatePlugin(e){Object.assign(e,s(e))}},42657:(e,t,i)=>{e.exports=octokitValidate;const s=i(6132);function octokitValidate(e){e.hook.before("request",s.bind(null,e))}},6132:(e,t,i)=>{"use strict";e.exports=validate;const{RequestError:s}=i(10537);const r=i(99197);const o=i(51552);function validate(e,t){if(!t.request.validate){return}const{validate:i}=t.request;Object.keys(i).forEach((e=>{const l=r(i,e);const c=l.type;let u;let m;let g=true;let v=false;if(/\./.test(e)){u=e.replace(/\.[^.]+$/,"");v=u.slice(-2)==="[]";if(v){u=u.slice(0,-2)}m=r(t,u);g=u==="headers"||typeof m==="object"&&m!==null}const _=v?(r(t,u)||[]).map((t=>t[e.split(/\./).pop()])):[r(t,e)];_.forEach(((i,r)=>{const u=typeof i!=="undefined";const m=i===null;const _=v?e.replace(/\[\]/,`[${r}]`):e;if(!l.required&&!u){return}if(!g){return}if(l.allowNull&&m){return}if(!l.allowNull&&m){throw new s(`'${_}' cannot be null`,400,{request:t})}if(l.required&&!u){throw new s(`Empty value for parameter '${_}': ${JSON.stringify(i)}`,400,{request:t})}if(c==="integer"){const e=i;i=parseInt(i,10);if(isNaN(i)){throw new s(`Invalid value for parameter '${_}': ${JSON.stringify(e)} is NaN`,400,{request:t})}}if(l.enum&&l.enum.indexOf(String(i))===-1){throw new s(`Invalid value for parameter '${_}': ${JSON.stringify(i)}`,400,{request:t})}if(l.validation){const e=new RegExp(l.validation);if(!e.test(i)){throw new s(`Invalid value for parameter '${_}': ${JSON.stringify(i)}`,400,{request:t})}}if(c==="object"&&typeof i==="string"){try{i=JSON.parse(i)}catch(e){throw new s(`JSON parse error of value for parameter '${_}': ${JSON.stringify(i)}`,400,{request:t})}}o(t,l.mapTo||_,i)}))}));return t}},36181:e=>{"use strict";var t=Object.defineProperty;var i=Object.getOwnPropertyDescriptor;var s=Object.getOwnPropertyNames;var r=Object.prototype.hasOwnProperty;var __defNormalProp=(e,i,s)=>i in e?t(e,i,{enumerable:true,configurable:true,writable:true,value:s}):e[i]=s;var __name=(e,i)=>t(e,"name",{value:i,configurable:true});var __export=(e,i)=>{for(var s in i)t(e,s,{get:i[s],enumerable:true})};var __copyProps=(e,o,l,c)=>{if(o&&typeof o==="object"||typeof o==="function"){for(let u of s(o))if(!r.call(e,u)&&u!==l)t(e,u,{get:()=>o[u],enumerable:!(c=i(o,u))||c.enumerable})}return e};var __toCommonJS=e=>__copyProps(t({},"__esModule",{value:true}),e);var __publicField=(e,t,i)=>{__defNormalProp(e,typeof t!=="symbol"?t+"":t,i);return i};var o={};__export(o,{AsyncQueue:()=>l});e.exports=__toCommonJS(o);var l=class{constructor(){__publicField(this,"promises",[])}get remaining(){return this.promises.length}wait(){const e=this.promises.length?this.promises[this.promises.length-1].promise:Promise.resolve();let t;const i=new Promise((e=>{t=e}));this.promises.push({resolve:t,promise:i});return e}shift(){const e=this.promises.shift();if(typeof e!=="undefined")e.resolve()}};0&&0},7678:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});const i=["Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"];function isTypedArrayName(e){return i.includes(e)}const s=["Function","Generator","AsyncGenerator","GeneratorFunction","AsyncGeneratorFunction","AsyncFunction","Observable","Array","Buffer","Blob","Object","RegExp","Date","Error","Map","Set","WeakMap","WeakSet","ArrayBuffer","SharedArrayBuffer","DataView","Promise","URL","FormData","URLSearchParams","HTMLElement",...i];function isObjectTypeName(e){return s.includes(e)}const r=["null","undefined","string","number","bigint","boolean","symbol"];function isPrimitiveTypeName(e){return r.includes(e)}function isOfType(e){return t=>typeof t===e}const{toString:o}=Object.prototype;const getObjectType=e=>{const t=o.call(e).slice(8,-1);if(/HTML\w+Element/.test(t)&&is.domElement(e)){return"HTMLElement"}if(isObjectTypeName(t)){return t}return undefined};const isObjectOfType=e=>t=>getObjectType(t)===e;function is(e){if(e===null){return"null"}switch(typeof e){case"undefined":return"undefined";case"string":return"string";case"number":return"number";case"boolean":return"boolean";case"function":return"Function";case"bigint":return"bigint";case"symbol":return"symbol";default:}if(is.observable(e)){return"Observable"}if(is.array(e)){return"Array"}if(is.buffer(e)){return"Buffer"}const t=getObjectType(e);if(t){return t}if(e instanceof String||e instanceof Boolean||e instanceof Number){throw new TypeError("Please don't use object wrappers for primitive types")}return"Object"}is.undefined=isOfType("undefined");is.string=isOfType("string");const l=isOfType("number");is.number=e=>l(e)&&!is.nan(e);is.bigint=isOfType("bigint");is.function_=isOfType("function");is.null_=e=>e===null;is.class_=e=>is.function_(e)&&e.toString().startsWith("class ");is.boolean=e=>e===true||e===false;is.symbol=isOfType("symbol");is.numericString=e=>is.string(e)&&!is.emptyStringOrWhitespace(e)&&!Number.isNaN(Number(e));is.array=(e,t)=>{if(!Array.isArray(e)){return false}if(!is.function_(t)){return true}return e.every(t)};is.buffer=e=>{var t,i,s,r;return(r=(s=(i=(t=e)===null||t===void 0?void 0:t.constructor)===null||i===void 0?void 0:i.isBuffer)===null||s===void 0?void 0:s.call(i,e))!==null&&r!==void 0?r:false};is.blob=e=>isObjectOfType("Blob")(e);is.nullOrUndefined=e=>is.null_(e)||is.undefined(e);is.object=e=>!is.null_(e)&&(typeof e==="object"||is.function_(e));is.iterable=e=>{var t;return is.function_((t=e)===null||t===void 0?void 0:t[Symbol.iterator])};is.asyncIterable=e=>{var t;return is.function_((t=e)===null||t===void 0?void 0:t[Symbol.asyncIterator])};is.generator=e=>{var t,i;return is.iterable(e)&&is.function_((t=e)===null||t===void 0?void 0:t.next)&&is.function_((i=e)===null||i===void 0?void 0:i.throw)};is.asyncGenerator=e=>is.asyncIterable(e)&&is.function_(e.next)&&is.function_(e.throw);is.nativePromise=e=>isObjectOfType("Promise")(e);const hasPromiseAPI=e=>{var t,i;return is.function_((t=e)===null||t===void 0?void 0:t.then)&&is.function_((i=e)===null||i===void 0?void 0:i.catch)};is.promise=e=>is.nativePromise(e)||hasPromiseAPI(e);is.generatorFunction=isObjectOfType("GeneratorFunction");is.asyncGeneratorFunction=e=>getObjectType(e)==="AsyncGeneratorFunction";is.asyncFunction=e=>getObjectType(e)==="AsyncFunction";is.boundFunction=e=>is.function_(e)&&!e.hasOwnProperty("prototype");is.regExp=isObjectOfType("RegExp");is.date=isObjectOfType("Date");is.error=isObjectOfType("Error");is.map=e=>isObjectOfType("Map")(e);is.set=e=>isObjectOfType("Set")(e);is.weakMap=e=>isObjectOfType("WeakMap")(e);is.weakSet=e=>isObjectOfType("WeakSet")(e);is.int8Array=isObjectOfType("Int8Array");is.uint8Array=isObjectOfType("Uint8Array");is.uint8ClampedArray=isObjectOfType("Uint8ClampedArray");is.int16Array=isObjectOfType("Int16Array");is.uint16Array=isObjectOfType("Uint16Array");is.int32Array=isObjectOfType("Int32Array");is.uint32Array=isObjectOfType("Uint32Array");is.float32Array=isObjectOfType("Float32Array");is.float64Array=isObjectOfType("Float64Array");is.bigInt64Array=isObjectOfType("BigInt64Array");is.bigUint64Array=isObjectOfType("BigUint64Array");is.arrayBuffer=isObjectOfType("ArrayBuffer");is.sharedArrayBuffer=isObjectOfType("SharedArrayBuffer");is.dataView=isObjectOfType("DataView");is.enumCase=(e,t)=>Object.values(t).includes(e);is.directInstanceOf=(e,t)=>Object.getPrototypeOf(e)===t.prototype;is.urlInstance=e=>isObjectOfType("URL")(e);is.urlString=e=>{if(!is.string(e)){return false}try{new URL(e);return true}catch(e){return false}};is.truthy=e=>Boolean(e);is.falsy=e=>!e;is.nan=e=>Number.isNaN(e);is.primitive=e=>is.null_(e)||isPrimitiveTypeName(typeof e);is.integer=e=>Number.isInteger(e);is.safeInteger=e=>Number.isSafeInteger(e);is.plainObject=e=>{if(o.call(e)!=="[object Object]"){return false}const t=Object.getPrototypeOf(e);return t===null||t===Object.getPrototypeOf({})};is.typedArray=e=>isTypedArrayName(getObjectType(e));const isValidLength=e=>is.safeInteger(e)&&e>=0;is.arrayLike=e=>!is.nullOrUndefined(e)&&!is.function_(e)&&isValidLength(e.length);is.inRange=(e,t)=>{if(is.number(t)){return e>=Math.min(0,t)&&e<=Math.max(t,0)}if(is.array(t)&&t.length===2){return e>=Math.min(...t)&&e<=Math.max(...t)}throw new TypeError(`Invalid range: ${JSON.stringify(t)}`)};const c=1;const u=["innerHTML","ownerDocument","style","attributes","nodeValue"];is.domElement=e=>is.object(e)&&e.nodeType===c&&is.string(e.nodeName)&&!is.plainObject(e)&&u.every((t=>t in e));is.observable=e=>{var t,i,s,r;if(!e){return false}if(e===((i=(t=e)[Symbol.observable])===null||i===void 0?void 0:i.call(t))){return true}if(e===((r=(s=e)["@@observable"])===null||r===void 0?void 0:r.call(s))){return true}return false};is.nodeStream=e=>is.object(e)&&is.function_(e.pipe)&&!is.observable(e);is.infinite=e=>e===Infinity||e===-Infinity;const isAbsoluteMod2=e=>t=>is.integer(t)&&Math.abs(t%2)===e;is.evenInteger=isAbsoluteMod2(0);is.oddInteger=isAbsoluteMod2(1);is.emptyArray=e=>is.array(e)&&e.length===0;is.nonEmptyArray=e=>is.array(e)&&e.length>0;is.emptyString=e=>is.string(e)&&e.length===0;const isWhiteSpaceString=e=>is.string(e)&&!/\S/.test(e);is.emptyStringOrWhitespace=e=>is.emptyString(e)||isWhiteSpaceString(e);is.nonEmptyString=e=>is.string(e)&&e.length>0;is.nonEmptyStringAndNotWhitespace=e=>is.string(e)&&!is.emptyStringOrWhitespace(e);is.emptyObject=e=>is.object(e)&&!is.map(e)&&!is.set(e)&&Object.keys(e).length===0;is.nonEmptyObject=e=>is.object(e)&&!is.map(e)&&!is.set(e)&&Object.keys(e).length>0;is.emptySet=e=>is.set(e)&&e.size===0;is.nonEmptySet=e=>is.set(e)&&e.size>0;is.emptyMap=e=>is.map(e)&&e.size===0;is.nonEmptyMap=e=>is.map(e)&&e.size>0;is.propertyKey=e=>is.any([is.string,is.number,is.symbol],e);is.formData=e=>isObjectOfType("FormData")(e);is.urlSearchParams=e=>isObjectOfType("URLSearchParams")(e);const predicateOnArray=(e,t,i)=>{if(!is.function_(t)){throw new TypeError(`Invalid predicate: ${JSON.stringify(t)}`)}if(i.length===0){throw new TypeError("Invalid number of values")}return e.call(i,t)};is.any=(e,...t)=>{const i=is.array(e)?e:[e];return i.some((e=>predicateOnArray(Array.prototype.some,e,t)))};is.all=(e,...t)=>predicateOnArray(Array.prototype.every,e,t);const assertType=(e,t,i,s={})=>{if(!e){const{multipleValues:e}=s;const r=e?`received values of types ${[...new Set(i.map((e=>`\`${is(e)}\``)))].join(", ")}`:`received value of type \`${is(i)}\``;throw new TypeError(`Expected value which is \`${t}\`, ${r}.`)}};t.assert={undefined:e=>assertType(is.undefined(e),"undefined",e),string:e=>assertType(is.string(e),"string",e),number:e=>assertType(is.number(e),"number",e),bigint:e=>assertType(is.bigint(e),"bigint",e),function_:e=>assertType(is.function_(e),"Function",e),null_:e=>assertType(is.null_(e),"null",e),class_:e=>assertType(is.class_(e),"Class",e),boolean:e=>assertType(is.boolean(e),"boolean",e),symbol:e=>assertType(is.symbol(e),"symbol",e),numericString:e=>assertType(is.numericString(e),"string with a number",e),array:(e,t)=>{const i=assertType;i(is.array(e),"Array",e);if(t){e.forEach(t)}},buffer:e=>assertType(is.buffer(e),"Buffer",e),blob:e=>assertType(is.blob(e),"Blob",e),nullOrUndefined:e=>assertType(is.nullOrUndefined(e),"null or undefined",e),object:e=>assertType(is.object(e),"Object",e),iterable:e=>assertType(is.iterable(e),"Iterable",e),asyncIterable:e=>assertType(is.asyncIterable(e),"AsyncIterable",e),generator:e=>assertType(is.generator(e),"Generator",e),asyncGenerator:e=>assertType(is.asyncGenerator(e),"AsyncGenerator",e),nativePromise:e=>assertType(is.nativePromise(e),"native Promise",e),promise:e=>assertType(is.promise(e),"Promise",e),generatorFunction:e=>assertType(is.generatorFunction(e),"GeneratorFunction",e),asyncGeneratorFunction:e=>assertType(is.asyncGeneratorFunction(e),"AsyncGeneratorFunction",e),asyncFunction:e=>assertType(is.asyncFunction(e),"AsyncFunction",e),boundFunction:e=>assertType(is.boundFunction(e),"Function",e),regExp:e=>assertType(is.regExp(e),"RegExp",e),date:e=>assertType(is.date(e),"Date",e),error:e=>assertType(is.error(e),"Error",e),map:e=>assertType(is.map(e),"Map",e),set:e=>assertType(is.set(e),"Set",e),weakMap:e=>assertType(is.weakMap(e),"WeakMap",e),weakSet:e=>assertType(is.weakSet(e),"WeakSet",e),int8Array:e=>assertType(is.int8Array(e),"Int8Array",e),uint8Array:e=>assertType(is.uint8Array(e),"Uint8Array",e),uint8ClampedArray:e=>assertType(is.uint8ClampedArray(e),"Uint8ClampedArray",e),int16Array:e=>assertType(is.int16Array(e),"Int16Array",e),uint16Array:e=>assertType(is.uint16Array(e),"Uint16Array",e),int32Array:e=>assertType(is.int32Array(e),"Int32Array",e),uint32Array:e=>assertType(is.uint32Array(e),"Uint32Array",e),float32Array:e=>assertType(is.float32Array(e),"Float32Array",e),float64Array:e=>assertType(is.float64Array(e),"Float64Array",e),bigInt64Array:e=>assertType(is.bigInt64Array(e),"BigInt64Array",e),bigUint64Array:e=>assertType(is.bigUint64Array(e),"BigUint64Array",e),arrayBuffer:e=>assertType(is.arrayBuffer(e),"ArrayBuffer",e),sharedArrayBuffer:e=>assertType(is.sharedArrayBuffer(e),"SharedArrayBuffer",e),dataView:e=>assertType(is.dataView(e),"DataView",e),enumCase:(e,t)=>assertType(is.enumCase(e,t),"EnumCase",e),urlInstance:e=>assertType(is.urlInstance(e),"URL",e),urlString:e=>assertType(is.urlString(e),"string with a URL",e),truthy:e=>assertType(is.truthy(e),"truthy",e),falsy:e=>assertType(is.falsy(e),"falsy",e),nan:e=>assertType(is.nan(e),"NaN",e),primitive:e=>assertType(is.primitive(e),"primitive",e),integer:e=>assertType(is.integer(e),"integer",e),safeInteger:e=>assertType(is.safeInteger(e),"integer",e),plainObject:e=>assertType(is.plainObject(e),"plain object",e),typedArray:e=>assertType(is.typedArray(e),"TypedArray",e),arrayLike:e=>assertType(is.arrayLike(e),"array-like",e),domElement:e=>assertType(is.domElement(e),"HTMLElement",e),observable:e=>assertType(is.observable(e),"Observable",e),nodeStream:e=>assertType(is.nodeStream(e),"Node.js Stream",e),infinite:e=>assertType(is.infinite(e),"infinite number",e),emptyArray:e=>assertType(is.emptyArray(e),"empty array",e),nonEmptyArray:e=>assertType(is.nonEmptyArray(e),"non-empty array",e),emptyString:e=>assertType(is.emptyString(e),"empty string",e),emptyStringOrWhitespace:e=>assertType(is.emptyStringOrWhitespace(e),"empty string or whitespace",e),nonEmptyString:e=>assertType(is.nonEmptyString(e),"non-empty string",e),nonEmptyStringAndNotWhitespace:e=>assertType(is.nonEmptyStringAndNotWhitespace(e),"non-empty string and not whitespace",e),emptyObject:e=>assertType(is.emptyObject(e),"empty object",e),nonEmptyObject:e=>assertType(is.nonEmptyObject(e),"non-empty object",e),emptySet:e=>assertType(is.emptySet(e),"empty set",e),nonEmptySet:e=>assertType(is.nonEmptySet(e),"non-empty set",e),emptyMap:e=>assertType(is.emptyMap(e),"empty map",e),nonEmptyMap:e=>assertType(is.nonEmptyMap(e),"non-empty map",e),propertyKey:e=>assertType(is.propertyKey(e),"PropertyKey",e),formData:e=>assertType(is.formData(e),"FormData",e),urlSearchParams:e=>assertType(is.urlSearchParams(e),"URLSearchParams",e),evenInteger:e=>assertType(is.evenInteger(e),"even integer",e),oddInteger:e=>assertType(is.oddInteger(e),"odd integer",e),directInstanceOf:(e,t)=>assertType(is.directInstanceOf(e,t),"T",e),inRange:(e,t)=>assertType(is.inRange(e,t),"in range",e),any:(e,...t)=>assertType(is.any(e,...t),"predicate returns truthy for any value",t,{multipleValues:true}),all:(e,...t)=>assertType(is.all(e,...t),"predicate returns truthy for all values",t,{multipleValues:true})};Object.defineProperties(is,{class:{value:is.class_},function:{value:is.function_},null:{value:is.null_}});Object.defineProperties(t.assert,{class:{value:t.assert.class_},function:{value:t.assert.function_},null:{value:t.assert.null_}});t["default"]=is;e.exports=is;e.exports["default"]=is;e.exports.assert=t.assert},14812:(e,t,i)=>{e.exports={parallel:i(8210),serial:i(50445),serialOrdered:i(3578)}},1700:e=>{e.exports=abort;function abort(e){Object.keys(e.jobs).forEach(clean.bind(e));e.jobs={}}function clean(e){if(typeof this.jobs[e]=="function"){this.jobs[e]()}}},72794:(e,t,i)=>{var s=i(15295);e.exports=async;function async(e){var t=false;s((function(){t=true}));return function async_callback(i,r){if(t){e(i,r)}else{s((function nextTick_callback(){e(i,r)}))}}}},15295:e=>{e.exports=defer;function defer(e){var t=typeof setImmediate=="function"?setImmediate:typeof process=="object"&&typeof process.nextTick=="function"?process.nextTick:null;if(t){t(e)}else{setTimeout(e,0)}}},9023:(e,t,i)=>{var s=i(72794),r=i(1700);e.exports=iterate;function iterate(e,t,i,s){var o=i["keyedList"]?i["keyedList"][i.index]:i.index;i.jobs[o]=runJob(t,o,e[o],(function(e,t){if(!(o in i.jobs)){return}delete i.jobs[o];if(e){r(i)}else{i.results[o]=t}s(e,i.results)}))}function runJob(e,t,i,r){var o;if(e.length==2){o=e(i,s(r))}else{o=e(i,t,s(r))}return o}},42474:e=>{e.exports=state;function state(e,t){var i=!Array.isArray(e),s={index:0,keyedList:i||t?Object.keys(e):null,jobs:{},results:i?{}:[],size:i?Object.keys(e).length:e.length};if(t){s.keyedList.sort(i?t:function(i,s){return t(e[i],e[s])})}return s}},37942:(e,t,i)=>{var s=i(1700),r=i(72794);e.exports=terminator;function terminator(e){if(!Object.keys(this.jobs).length){return}this.index=this.size;s(this);r(e)(null,this.results)}},8210:(e,t,i)=>{var s=i(9023),r=i(42474),o=i(37942);e.exports=parallel;function parallel(e,t,i){var l=r(e);while(l.index<(l["keyedList"]||e).length){s(e,t,l,(function(e,t){if(e){i(e,t);return}if(Object.keys(l.jobs).length===0){i(null,l.results);return}}));l.index++}return o.bind(l,i)}},50445:(e,t,i)=>{var s=i(3578);e.exports=serial;function serial(e,t,i){return s(e,t,null,i)}},3578:(e,t,i)=>{var s=i(9023),r=i(42474),o=i(37942);e.exports=serialOrdered;e.exports.ascending=ascending;e.exports.descending=descending;function serialOrdered(e,t,i,l){var c=r(e,i);s(e,t,c,(function iteratorHandler(i,r){if(i){l(i,r);return}c.index++;if(c.index<(c["keyedList"]||e).length){s(e,t,c,iteratorHandler);return}l(null,c.results)}));return o.bind(c,l)}function ascending(e,t){return e<t?-1:e>t?1:0}function descending(e,t){return-1*ascending(e,t)}},55224:e=>{e.exports=function atob(e){return Buffer.from(e,"base64").toString("binary")}},83682:(e,t,i)=>{var s=i(44670);var r=i(5549);var o=i(6819);var l=Function.bind;var c=l.bind(l);function bindApi(e,t,i){var s=c(o,null).apply(null,i?[t,i]:[t]);e.api={remove:s};e.remove=s;["before","error","after","wrap"].forEach((function(s){var o=i?[t,s,i]:[t,s];e[s]=e.api[s]=c(r,null).apply(null,o)}))}function HookSingular(){var e="h";var t={registry:{}};var i=s.bind(null,t,e);bindApi(i,t,e);return i}function HookCollection(){var e={registry:{}};var t=s.bind(null,e);bindApi(t,e);return t}var u=false;function Hook(){if(!u){console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4');u=true}return HookCollection()}Hook.Singular=HookSingular.bind();Hook.Collection=HookCollection.bind();e.exports=Hook;e.exports.Hook=Hook;e.exports.Singular=Hook.Singular;e.exports.Collection=Hook.Collection},5549:e=>{e.exports=addHook;function addHook(e,t,i,s){var r=s;if(!e.registry[i]){e.registry[i]=[]}if(t==="before"){s=function(e,t){return Promise.resolve().then(r.bind(null,t)).then(e.bind(null,t))}}if(t==="after"){s=function(e,t){var i;return Promise.resolve().then(e.bind(null,t)).then((function(e){i=e;return r(i,t)})).then((function(){return i}))}}if(t==="error"){s=function(e,t){return Promise.resolve().then(e.bind(null,t)).catch((function(e){return r(e,t)}))}}e.registry[i].push({hook:s,orig:r})}},44670:e=>{e.exports=register;function register(e,t,i,s){if(typeof i!=="function"){throw new Error("method for before hook must be a function")}if(!s){s={}}if(Array.isArray(t)){return t.reverse().reduce((function(t,i){return register.bind(null,e,i,t,s)}),i)()}return Promise.resolve().then((function(){if(!e.registry[t]){return i(s)}return e.registry[t].reduce((function(e,t){return t.hook.bind(null,e,s)}),i)()}))}},6819:e=>{e.exports=removeHook;function removeHook(e,t,i){if(!e.registry[t]){return}var s=e.registry[t].map((function(e){return e.orig})).indexOf(i);if(s===-1){return}e.registry[t].splice(s,1)}},72358:e=>{e.exports=function btoa(e){return new Buffer(e).toString("base64")}},85443:(e,t,i)=>{var s=i(73837);var r=i(12781).Stream;var o=i(18611);e.exports=CombinedStream;function CombinedStream(){this.writable=false;this.readable=true;this.dataSize=0;this.maxDataSize=2*1024*1024;this.pauseStreams=true;this._released=false;this._streams=[];this._currentStream=null;this._insideLoop=false;this._pendingNext=false}s.inherits(CombinedStream,r);CombinedStream.create=function(e){var t=new this;e=e||{};for(var i in e){t[i]=e[i]}return t};CombinedStream.isStreamLike=function(e){return typeof e!=="function"&&typeof e!=="string"&&typeof e!=="boolean"&&typeof e!=="number"&&!Buffer.isBuffer(e)};CombinedStream.prototype.append=function(e){var t=CombinedStream.isStreamLike(e);if(t){if(!(e instanceof o)){var i=o.create(e,{maxDataSize:Infinity,pauseStream:this.pauseStreams});e.on("data",this._checkDataSize.bind(this));e=i}this._handleErrors(e);if(this.pauseStreams){e.pause()}}this._streams.push(e);return this};CombinedStream.prototype.pipe=function(e,t){r.prototype.pipe.call(this,e,t);this.resume();return e};CombinedStream.prototype._getNext=function(){this._currentStream=null;if(this._insideLoop){this._pendingNext=true;return}this._insideLoop=true;try{do{this._pendingNext=false;this._realGetNext()}while(this._pendingNext)}finally{this._insideLoop=false}};CombinedStream.prototype._realGetNext=function(){var e=this._streams.shift();if(typeof e=="undefined"){this.end();return}if(typeof e!=="function"){this._pipeNext(e);return}var t=e;t(function(e){var t=CombinedStream.isStreamLike(e);if(t){e.on("data",this._checkDataSize.bind(this));this._handleErrors(e)}this._pipeNext(e)}.bind(this))};CombinedStream.prototype._pipeNext=function(e){this._currentStream=e;var t=CombinedStream.isStreamLike(e);if(t){e.on("end",this._getNext.bind(this));e.pipe(this,{end:false});return}var i=e;this.write(i);this._getNext()};CombinedStream.prototype._handleErrors=function(e){var t=this;e.on("error",(function(e){t._emitError(e)}))};CombinedStream.prototype.write=function(e){this.emit("data",e)};CombinedStream.prototype.pause=function(){if(!this.pauseStreams){return}if(this.pauseStreams&&this._currentStream&&typeof this._currentStream.pause=="function")this._currentStream.pause();this.emit("pause")};CombinedStream.prototype.resume=function(){if(!this._released){this._released=true;this.writable=true;this._getNext()}if(this.pauseStreams&&this._currentStream&&typeof this._currentStream.resume=="function")this._currentStream.resume();this.emit("resume")};CombinedStream.prototype.end=function(){this._reset();this.emit("end")};CombinedStream.prototype.destroy=function(){this._reset();this.emit("close")};CombinedStream.prototype._reset=function(){this.writable=false;this._streams=[];this._currentStream=null};CombinedStream.prototype._checkDataSize=function(){this._updateDataSize();if(this.dataSize<=this.maxDataSize){return}var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this._emitError(new Error(e))};CombinedStream.prototype._updateDataSize=function(){this.dataSize=0;var e=this;this._streams.forEach((function(t){if(!t.dataSize){return}e.dataSize+=t.dataSize}));if(this._currentStream&&this._currentStream.dataSize){this.dataSize+=this._currentStream.dataSize}};CombinedStream.prototype._emitError=function(e){this._reset();this.emit("error",e)}},72746:(e,t,i)=>{"use strict";const s=i(32081);const r=i(66855);const o=i(44101);function spawn(e,t,i){const l=r(e,t,i);const c=s.spawn(l.command,l.args,l.options);o.hookChildProcess(c,l);return c}function spawnSync(e,t,i){const l=r(e,t,i);const c=s.spawnSync(l.command,l.args,l.options);c.error=c.error||o.verifyENOENTSync(c.status,l);return c}e.exports=spawn;e.exports.spawn=spawn;e.exports.sync=spawnSync;e.exports._parse=r;e.exports._enoent=o},44101:e=>{"use strict";const t=process.platform==="win32";function notFoundError(e,t){return Object.assign(new Error(`${t} ${e.command} ENOENT`),{code:"ENOENT",errno:"ENOENT",syscall:`${t} ${e.command}`,path:e.command,spawnargs:e.args})}function hookChildProcess(e,i){if(!t){return}const s=e.emit;e.emit=function(t,r){if(t==="exit"){const t=verifyENOENT(r,i,"spawn");if(t){return s.call(e,"error",t)}}return s.apply(e,arguments)}}function verifyENOENT(e,i){if(t&&e===1&&!i.file){return notFoundError(i.original,"spawn")}return null}function verifyENOENTSync(e,i){if(t&&e===1&&!i.file){return notFoundError(i.original,"spawnSync")}return null}e.exports={hookChildProcess:hookChildProcess,verifyENOENT:verifyENOENT,verifyENOENTSync:verifyENOENTSync,notFoundError:notFoundError}},66855:(e,t,i)=>{"use strict";const s=i(71017);const r=i(38560);const o=i(87274);const l=i(34274);const c=i(41252);const u=i(85911);const m=process.platform==="win32";const g=/\.(?:com|exe)$/i;const v=/node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;const _=r((()=>u.satisfies(process.version,"^4.8.0 || ^5.7.0 || >= 6.0.0",true)))||false;function detectShebang(e){e.file=o(e);const t=e.file&&c(e.file);if(t){e.args.unshift(e.file);e.command=t;return o(e)}return e.file}function parseNonShell(e){if(!m){return e}const t=detectShebang(e);const i=!g.test(t);if(e.options.forceShell||i){const i=v.test(t);e.command=s.normalize(e.command);e.command=l.command(e.command);e.args=e.args.map((e=>l.argument(e,i)));const r=[e.command].concat(e.args).join(" ");e.args=["/d","/s","/c",`"${r}"`];e.command=process.env.comspec||"cmd.exe";e.options.windowsVerbatimArguments=true}return e}function parseShell(e){if(_){return e}const t=[e.command].concat(e.args).join(" ");if(m){e.command=typeof e.options.shell==="string"?e.options.shell:process.env.comspec||"cmd.exe";e.args=["/d","/s","/c",`"${t}"`];e.options.windowsVerbatimArguments=true}else{if(typeof e.options.shell==="string"){e.command=e.options.shell}else if(process.platform==="android"){e.command="/system/bin/sh"}else{e.command="/bin/sh"}e.args=["-c",t]}return e}function parse(e,t,i){if(t&&!Array.isArray(t)){i=t;t=null}t=t?t.slice(0):[];i=Object.assign({},i);const s={command:e,args:t,options:i,file:undefined,original:{command:e,args:t}};return i.shell?parseShell(s):parseNonShell(s)}e.exports=parse},34274:e=>{"use strict";const t=/([()\][%!^"`<>&|;, *?])/g;function escapeCommand(e){e=e.replace(t,"^$1");return e}function escapeArgument(e,i){e=`${e}`;e=e.replace(/(\\*)"/g,'$1$1\\"');e=e.replace(/(\\*)$/,"$1$1");e=`"${e}"`;e=e.replace(t,"^$1");if(i){e=e.replace(t,"^$1")}return e}e.exports.command=escapeCommand;e.exports.argument=escapeArgument},41252:(e,t,i)=>{"use strict";const s=i(57147);const r=i(67032);function readShebang(e){const t=150;let i;if(Buffer.alloc){i=Buffer.alloc(t)}else{i=new Buffer(t);i.fill(0)}let o;try{o=s.openSync(e,"r");s.readSync(o,i,0,t,0);s.closeSync(o)}catch(e){}return r(i.toString())}e.exports=readShebang},87274:(e,t,i)=>{"use strict";const s=i(71017);const r=i(34207);const o=i(20539)();function resolveCommandAttempt(e,t){const i=process.cwd();const l=e.options.cwd!=null;if(l){try{process.chdir(e.options.cwd)}catch(e){}}let c;try{c=r.sync(e.command,{path:(e.options.env||process.env)[o],pathExt:t?s.delimiter:undefined})}catch(e){}finally{process.chdir(i)}if(c){c=s.resolve(l?e.options.cwd:"",c)}return c}function resolveCommand(e){return resolveCommandAttempt(e)||resolveCommandAttempt(e,true)}e.exports=resolveCommand},18611:(e,t,i)=>{var s=i(12781).Stream;var r=i(73837);e.exports=DelayedStream;function DelayedStream(){this.source=null;this.dataSize=0;this.maxDataSize=1024*1024;this.pauseStream=true;this._maxDataSizeExceeded=false;this._released=false;this._bufferedEvents=[]}r.inherits(DelayedStream,s);DelayedStream.create=function(e,t){var i=new this;t=t||{};for(var s in t){i[s]=t[s]}i.source=e;var r=e.emit;e.emit=function(){i._handleEmit(arguments);return r.apply(e,arguments)};e.on("error",(function(){}));if(i.pauseStream){e.pause()}return i};Object.defineProperty(DelayedStream.prototype,"readable",{configurable:true,enumerable:true,get:function(){return this.source.readable}});DelayedStream.prototype.setEncoding=function(){return this.source.setEncoding.apply(this.source,arguments)};DelayedStream.prototype.resume=function(){if(!this._released){this.release()}this.source.resume()};DelayedStream.prototype.pause=function(){this.source.pause()};DelayedStream.prototype.release=function(){this._released=true;this._bufferedEvents.forEach(function(e){this.emit.apply(this,e)}.bind(this));this._bufferedEvents=[]};DelayedStream.prototype.pipe=function(){var e=s.prototype.pipe.apply(this,arguments);this.resume();return e};DelayedStream.prototype._handleEmit=function(e){if(this._released){this.emit.apply(this,e);return}if(e[0]==="data"){this.dataSize+=e[1].length;this._checkIfMaxDataSizeExceeded()}this._bufferedEvents.push(e)};DelayedStream.prototype._checkIfMaxDataSizeExceeded=function(){if(this._maxDataSizeExceeded){return}if(this.dataSize<=this.maxDataSize){return}this._maxDataSizeExceeded=true;var e="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this.emit("error",new Error(e))}},58932:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});class Deprecation extends Error{constructor(e){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="Deprecation"}}t.Deprecation=Deprecation},45429:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},38726:function(e,t,i){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,i,s){if(s===undefined)s=i;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[i]}})}:function(e,t,i,s){if(s===undefined)s=i;e[s]=t[i]});var r=this&&this.__exportStar||function(e,t){for(var i in e)if(i!=="default"&&!Object.prototype.hasOwnProperty.call(t,i))s(t,e,i)};Object.defineProperty(t,"__esModule",{value:true});t.GatewayDispatchEvents=t.GatewayIntentBits=t.GatewayCloseCodes=t.GatewayOpcodes=t.GatewayVersion=void 0;r(i(45429),t);t.GatewayVersion="9";var o;(function(e){e[e["Dispatch"]=0]="Dispatch";e[e["Heartbeat"]=1]="Heartbeat";e[e["Identify"]=2]="Identify";e[e["PresenceUpdate"]=3]="PresenceUpdate";e[e["VoiceStateUpdate"]=4]="VoiceStateUpdate";e[e["Resume"]=6]="Resume";e[e["Reconnect"]=7]="Reconnect";e[e["RequestGuildMembers"]=8]="RequestGuildMembers";e[e["InvalidSession"]=9]="InvalidSession";e[e["Hello"]=10]="Hello";e[e["HeartbeatAck"]=11]="HeartbeatAck"})(o=t.GatewayOpcodes||(t.GatewayOpcodes={}));var l;(function(e){e[e["UnknownError"]=4e3]="UnknownError";e[e["UnknownOpcode"]=4001]="UnknownOpcode";e[e["DecodeError"]=4002]="DecodeError";e[e["NotAuthenticated"]=4003]="NotAuthenticated";e[e["AuthenticationFailed"]=4004]="AuthenticationFailed";e[e["AlreadyAuthenticated"]=4005]="AlreadyAuthenticated";e[e["InvalidSeq"]=4007]="InvalidSeq";e[e["RateLimited"]=4008]="RateLimited";e[e["SessionTimedOut"]=4009]="SessionTimedOut";e[e["InvalidShard"]=4010]="InvalidShard";e[e["ShardingRequired"]=4011]="ShardingRequired";e[e["InvalidAPIVersion"]=4012]="InvalidAPIVersion";e[e["InvalidIntents"]=4013]="InvalidIntents";e[e["DisallowedIntents"]=4014]="DisallowedIntents"})(l=t.GatewayCloseCodes||(t.GatewayCloseCodes={}));var c;(function(e){e[e["Guilds"]=1]="Guilds";e[e["GuildMembers"]=2]="GuildMembers";e[e["GuildBans"]=4]="GuildBans";e[e["GuildEmojisAndStickers"]=8]="GuildEmojisAndStickers";e[e["GuildIntegrations"]=16]="GuildIntegrations";e[e["GuildWebhooks"]=32]="GuildWebhooks";e[e["GuildInvites"]=64]="GuildInvites";e[e["GuildVoiceStates"]=128]="GuildVoiceStates";e[e["GuildPresences"]=256]="GuildPresences";e[e["GuildMessages"]=512]="GuildMessages";e[e["GuildMessageReactions"]=1024]="GuildMessageReactions";e[e["GuildMessageTyping"]=2048]="GuildMessageTyping";e[e["DirectMessages"]=4096]="DirectMessages";e[e["DirectMessageReactions"]=8192]="DirectMessageReactions";e[e["DirectMessageTyping"]=16384]="DirectMessageTyping";e[e["GuildScheduledEvents"]=65536]="GuildScheduledEvents"})(c=t.GatewayIntentBits||(t.GatewayIntentBits={}));var u;(function(e){e["ChannelCreate"]="CHANNEL_CREATE";e["ChannelDelete"]="CHANNEL_DELETE";e["ChannelPinsUpdate"]="CHANNEL_PINS_UPDATE";e["ChannelUpdate"]="CHANNEL_UPDATE";e["GuildBanAdd"]="GUILD_BAN_ADD";e["GuildBanRemove"]="GUILD_BAN_REMOVE";e["GuildCreate"]="GUILD_CREATE";e["GuildDelete"]="GUILD_DELETE";e["GuildEmojisUpdate"]="GUILD_EMOJIS_UPDATE";e["GuildIntegrationsUpdate"]="GUILD_INTEGRATIONS_UPDATE";e["GuildMemberAdd"]="GUILD_MEMBER_ADD";e["GuildMemberRemove"]="GUILD_MEMBER_REMOVE";e["GuildMembersChunk"]="GUILD_MEMBERS_CHUNK";e["GuildMemberUpdate"]="GUILD_MEMBER_UPDATE";e["GuildRoleCreate"]="GUILD_ROLE_CREATE";e["GuildRoleDelete"]="GUILD_ROLE_DELETE";e["GuildRoleUpdate"]="GUILD_ROLE_UPDATE";e["GuildStickersUpdate"]="GUILD_STICKERS_UPDATE";e["GuildUpdate"]="GUILD_UPDATE";e["IntegrationCreate"]="INTEGRATION_CREATE";e["IntegrationDelete"]="INTEGRATION_DELETE";e["IntegrationUpdate"]="INTEGRATION_UPDATE";e["InteractionCreate"]="INTERACTION_CREATE";e["InviteCreate"]="INVITE_CREATE";e["InviteDelete"]="INVITE_DELETE";e["MessageCreate"]="MESSAGE_CREATE";e["MessageDelete"]="MESSAGE_DELETE";e["MessageDeleteBulk"]="MESSAGE_DELETE_BULK";e["MessageReactionAdd"]="MESSAGE_REACTION_ADD";e["MessageReactionRemove"]="MESSAGE_REACTION_REMOVE";e["MessageReactionRemoveAll"]="MESSAGE_REACTION_REMOVE_ALL";e["MessageReactionRemoveEmoji"]="MESSAGE_REACTION_REMOVE_EMOJI";e["MessageUpdate"]="MESSAGE_UPDATE";e["PresenceUpdate"]="PRESENCE_UPDATE";e["StageInstanceCreate"]="STAGE_INSTANCE_CREATE";e["StageInstanceDelete"]="STAGE_INSTANCE_DELETE";e["StageInstanceUpdate"]="STAGE_INSTANCE_UPDATE";e["Ready"]="READY";e["Resumed"]="RESUMED";e["ThreadCreate"]="THREAD_CREATE";e["ThreadDelete"]="THREAD_DELETE";e["ThreadListSync"]="THREAD_LIST_SYNC";e["ThreadMembersUpdate"]="THREAD_MEMBERS_UPDATE";e["ThreadMemberUpdate"]="THREAD_MEMBER_UPDATE";e["ThreadUpdate"]="THREAD_UPDATE";e["TypingStart"]="TYPING_START";e["UserUpdate"]="USER_UPDATE";e["VoiceServerUpdate"]="VOICE_SERVER_UPDATE";e["VoiceStateUpdate"]="VOICE_STATE_UPDATE";e["WebhooksUpdate"]="WEBHOOKS_UPDATE";e["GuildScheduledEventCreate"]="GUILD_SCHEDULED_EVENT_CREATE";e["GuildScheduledEventUpdate"]="GUILD_SCHEDULED_EVENT_UPDATE";e["GuildScheduledEventDelete"]="GUILD_SCHEDULED_EVENT_DELETE";e["GuildScheduledEventUserAdd"]="GUILD_SCHEDULED_EVENT_USER_ADD";e["GuildScheduledEventUserRemove"]="GUILD_SCHEDULED_EVENT_USER_REMOVE"})(u=t.GatewayDispatchEvents||(t.GatewayDispatchEvents={}))},60279:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.FormattingPatterns=void 0;t.FormattingPatterns={User:/<@(?<id>\d{17,20})>/,UserWithNickname:/<@!(?<id>\d{17,20})>/,UserWithOptionalNickname:/<@!?(?<id>\d{17,20})>/,Channel:/<#(?<id>\d{17,20})>/,Role:/<@&(?<id>\d{17,20})>/,Emoji:/<(?<animated>a)?:(?<name>\w{2,32}):(?<id>\d{17,20})>/,AnimatedEmoji:/<(?<animated>a):(?<name>\w{2,32}):(?<id>\d{17,20})>/,StaticEmoji:/<:(?<name>\w{2,32}):(?<id>\d{17,20})>/,Timestamp:/<t:(?<timestamp>-?\d{1,13})(:(?<style>[tTdDfFR]))?>/,DefaultStyledTimestamp:/<t:(?<timestamp>-?\d{1,13})>/,StyledTimestamp:/<t:(?<timestamp>-?\d{1,13}):(?<style>[tTdDfFR])>/};Object.freeze(t.FormattingPatterns)},48053:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},21818:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},6320:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},77201:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},96504:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},76062:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},50954:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ApplicationCommandOptionType=void 0;var i;(function(e){e[e["Subcommand"]=1]="Subcommand";e[e["SubcommandGroup"]=2]="SubcommandGroup";e[e["String"]=3]="String";e[e["Integer"]=4]="Integer";e[e["Boolean"]=5]="Boolean";e[e["User"]=6]="User";e[e["Channel"]=7]="Channel";e[e["Role"]=8]="Role";e[e["Mentionable"]=9]="Mentionable";e[e["Number"]=10]="Number"})(i=t.ApplicationCommandOptionType||(t.ApplicationCommandOptionType={}))},46651:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},96055:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},52086:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},59212:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},29507:function(e,t,i){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,i,s){if(s===undefined)s=i;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[i]}})}:function(e,t,i,s){if(s===undefined)s=i;e[s]=t[i]});var r=this&&this.__exportStar||function(e,t){for(var i in e)if(i!=="default"&&!Object.prototype.hasOwnProperty.call(t,i))s(t,e,i)};Object.defineProperty(t,"__esModule",{value:true});r(i(46651),t);r(i(6320),t);r(i(48053),t);r(i(59212),t);r(i(21818),t);r(i(76062),t);r(i(77201),t);r(i(96504),t);r(i(96055),t);r(i(52086),t);r(i(50954),t)},97733:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},91249:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ApplicationCommandPermissionType=void 0;var i;(function(e){e[e["Role"]=1]="Role";e[e["User"]=2]="User"})(i=t.ApplicationCommandPermissionType||(t.ApplicationCommandPermissionType={}))},35458:function(e,t,i){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,i,s){if(s===undefined)s=i;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[i]}})}:function(e,t,i,s){if(s===undefined)s=i;e[s]=t[i]});var r=this&&this.__exportStar||function(e,t){for(var i in e)if(i!=="default"&&!Object.prototype.hasOwnProperty.call(t,i))s(t,e,i)};Object.defineProperty(t,"__esModule",{value:true});t.ApplicationCommandType=void 0;r(i(29507),t);r(i(97733),t);r(i(91249),t);var o;(function(e){e[e["ChatInput"]=1]="ChatInput";e[e["User"]=2]="User";e[e["Message"]=3]="Message"})(o=t.ApplicationCommandType||(t.ApplicationCommandType={}))},6482:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},84144:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},22329:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},63906:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.InteractionResponseType=t.InteractionType=void 0;var i;(function(e){e[e["Ping"]=1]="Ping";e[e["ApplicationCommand"]=2]="ApplicationCommand";e[e["MessageComponent"]=3]="MessageComponent";e[e["ApplicationCommandAutocomplete"]=4]="ApplicationCommandAutocomplete"})(i=t.InteractionType||(t.InteractionType={}));var s;(function(e){e[e["Pong"]=1]="Pong";e[e["ChannelMessageWithSource"]=4]="ChannelMessageWithSource";e[e["DeferredChannelMessageWithSource"]=5]="DeferredChannelMessageWithSource";e[e["DeferredMessageUpdate"]=6]="DeferredMessageUpdate";e[e["UpdateMessage"]=7]="UpdateMessage";e[e["ApplicationCommandAutocompleteResult"]=8]="ApplicationCommandAutocompleteResult"})(s=t.InteractionResponseType||(t.InteractionResponseType={}))},7578:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ApplicationFlags=void 0;var i;(function(e){e[e["EmbeddedReleased"]=2]="EmbeddedReleased";e[e["ManagedEmoji"]=4]="ManagedEmoji";e[e["GroupDMCreate"]=16]="GroupDMCreate";e[e["RPCHasConnected"]=2048]="RPCHasConnected";e[e["GatewayPresence"]=4096]="GatewayPresence";e[e["GatewayPresenceLimited"]=8192]="GatewayPresenceLimited";e[e["GatewayGuildMembers"]=16384]="GatewayGuildMembers";e[e["GatewayGuildMembersLimited"]=32768]="GatewayGuildMembersLimited";e[e["VerificationPendingGuildLimit"]=65536]="VerificationPendingGuildLimit";e[e["Embedded"]=131072]="Embedded";e[e["GatewayMessageContent"]=262144]="GatewayMessageContent";e[e["GatewayMessageContentLimited"]=524288]="GatewayMessageContentLimited";e[e["EmbeddedFirstParty"]=1048576]="EmbeddedFirstParty"})(i=t.ApplicationFlags||(t.ApplicationFlags={}))},10827:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.AuditLogOptionsType=t.AuditLogEvent=void 0;var i;(function(e){e[e["GuildUpdate"]=1]="GuildUpdate";e[e["ChannelCreate"]=10]="ChannelCreate";e[e["ChannelUpdate"]=11]="ChannelUpdate";e[e["ChannelDelete"]=12]="ChannelDelete";e[e["ChannelOverwriteCreate"]=13]="ChannelOverwriteCreate";e[e["ChannelOverwriteUpdate"]=14]="ChannelOverwriteUpdate";e[e["ChannelOverwriteDelete"]=15]="ChannelOverwriteDelete";e[e["MemberKick"]=20]="MemberKick";e[e["MemberPrune"]=21]="MemberPrune";e[e["MemberBanAdd"]=22]="MemberBanAdd";e[e["MemberBanRemove"]=23]="MemberBanRemove";e[e["MemberUpdate"]=24]="MemberUpdate";e[e["MemberRoleUpdate"]=25]="MemberRoleUpdate";e[e["MemberMove"]=26]="MemberMove";e[e["MemberDisconnect"]=27]="MemberDisconnect";e[e["BotAdd"]=28]="BotAdd";e[e["RoleCreate"]=30]="RoleCreate";e[e["RoleUpdate"]=31]="RoleUpdate";e[e["RoleDelete"]=32]="RoleDelete";e[e["InviteCreate"]=40]="InviteCreate";e[e["InviteUpdate"]=41]="InviteUpdate";e[e["InviteDelete"]=42]="InviteDelete";e[e["WebhookCreate"]=50]="WebhookCreate";e[e["WebhookUpdate"]=51]="WebhookUpdate";e[e["WebhookDelete"]=52]="WebhookDelete";e[e["EmojiCreate"]=60]="EmojiCreate";e[e["EmojiUpdate"]=61]="EmojiUpdate";e[e["EmojiDelete"]=62]="EmojiDelete";e[e["MessageDelete"]=72]="MessageDelete";e[e["MessageBulkDelete"]=73]="MessageBulkDelete";e[e["MessagePin"]=74]="MessagePin";e[e["MessageUnpin"]=75]="MessageUnpin";e[e["IntegrationCreate"]=80]="IntegrationCreate";e[e["IntegrationUpdate"]=81]="IntegrationUpdate";e[e["IntegrationDelete"]=82]="IntegrationDelete";e[e["StageInstanceCreate"]=83]="StageInstanceCreate";e[e["StageInstanceUpdate"]=84]="StageInstanceUpdate";e[e["StageInstanceDelete"]=85]="StageInstanceDelete";e[e["StickerCreate"]=90]="StickerCreate";e[e["StickerUpdate"]=91]="StickerUpdate";e[e["StickerDelete"]=92]="StickerDelete";e[e["GuildScheduledEventCreate"]=100]="GuildScheduledEventCreate";e[e["GuildScheduledEventUpdate"]=101]="GuildScheduledEventUpdate";e[e["GuildScheduledEventDelete"]=102]="GuildScheduledEventDelete";e[e["ThreadCreate"]=110]="ThreadCreate";e[e["ThreadUpdate"]=111]="ThreadUpdate";e[e["ThreadDelete"]=112]="ThreadDelete"})(i=t.AuditLogEvent||(t.AuditLogEvent={}));var s;(function(e){e["Role"]="0";e["Member"]="1"})(s=t.AuditLogOptionsType||(t.AuditLogOptionsType={}))},63138:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ButtonStyle=t.ComponentType=t.AllowedMentionsTypes=t.EmbedType=t.ThreadMemberFlags=t.ThreadAutoArchiveDuration=t.OverwriteType=t.MessageFlags=t.MessageActivityType=t.MessageType=t.VideoQualityMode=t.ChannelType=void 0;var i;(function(e){e[e["GuildText"]=0]="GuildText";e[e["DM"]=1]="DM";e[e["GuildVoice"]=2]="GuildVoice";e[e["GroupDM"]=3]="GroupDM";e[e["GuildCategory"]=4]="GuildCategory";e[e["GuildNews"]=5]="GuildNews";e[e["GuildStore"]=6]="GuildStore";e[e["GuildNewsThread"]=10]="GuildNewsThread";e[e["GuildPublicThread"]=11]="GuildPublicThread";e[e["GuildPrivateThread"]=12]="GuildPrivateThread";e[e["GuildStageVoice"]=13]="GuildStageVoice"})(i=t.ChannelType||(t.ChannelType={}));var s;(function(e){e[e["Auto"]=1]="Auto";e[e["Full"]=2]="Full"})(s=t.VideoQualityMode||(t.VideoQualityMode={}));var r;(function(e){e[e["Default"]=0]="Default";e[e["RecipientAdd"]=1]="RecipientAdd";e[e["RecipientRemove"]=2]="RecipientRemove";e[e["Call"]=3]="Call";e[e["ChannelNameChange"]=4]="ChannelNameChange";e[e["ChannelIconChange"]=5]="ChannelIconChange";e[e["ChannelPinnedMessage"]=6]="ChannelPinnedMessage";e[e["GuildMemberJoin"]=7]="GuildMemberJoin";e[e["UserPremiumGuildSubscription"]=8]="UserPremiumGuildSubscription";e[e["UserPremiumGuildSubscriptionTier1"]=9]="UserPremiumGuildSubscriptionTier1";e[e["UserPremiumGuildSubscriptionTier2"]=10]="UserPremiumGuildSubscriptionTier2";e[e["UserPremiumGuildSubscriptionTier3"]=11]="UserPremiumGuildSubscriptionTier3";e[e["ChannelFollowAdd"]=12]="ChannelFollowAdd";e[e["GuildDiscoveryDisqualified"]=14]="GuildDiscoveryDisqualified";e[e["GuildDiscoveryRequalified"]=15]="GuildDiscoveryRequalified";e[e["GuildDiscoveryGracePeriodInitialWarning"]=16]="GuildDiscoveryGracePeriodInitialWarning";e[e["GuildDiscoveryGracePeriodFinalWarning"]=17]="GuildDiscoveryGracePeriodFinalWarning";e[e["ThreadCreated"]=18]="ThreadCreated";e[e["Reply"]=19]="Reply";e[e["ChatInputCommand"]=20]="ChatInputCommand";e[e["ThreadStarterMessage"]=21]="ThreadStarterMessage";e[e["GuildInviteReminder"]=22]="GuildInviteReminder";e[e["ContextMenuCommand"]=23]="ContextMenuCommand"})(r=t.MessageType||(t.MessageType={}));var o;(function(e){e[e["Join"]=1]="Join";e[e["Spectate"]=2]="Spectate";e[e["Listen"]=3]="Listen";e[e["JoinRequest"]=5]="JoinRequest"})(o=t.MessageActivityType||(t.MessageActivityType={}));var l;(function(e){e[e["Crossposted"]=1]="Crossposted";e[e["IsCrosspost"]=2]="IsCrosspost";e[e["SuppressEmbeds"]=4]="SuppressEmbeds";e[e["SourceMessageDeleted"]=8]="SourceMessageDeleted";e[e["Urgent"]=16]="Urgent";e[e["HasThread"]=32]="HasThread";e[e["Ephemeral"]=64]="Ephemeral";e[e["Loading"]=128]="Loading"})(l=t.MessageFlags||(t.MessageFlags={}));var c;(function(e){e[e["Role"]=0]="Role";e[e["Member"]=1]="Member"})(c=t.OverwriteType||(t.OverwriteType={}));var u;(function(e){e[e["OneHour"]=60]="OneHour";e[e["OneDay"]=1440]="OneDay";e[e["ThreeDays"]=4320]="ThreeDays";e[e["OneWeek"]=10080]="OneWeek"})(u=t.ThreadAutoArchiveDuration||(t.ThreadAutoArchiveDuration={}));var m;(function(e){})(m=t.ThreadMemberFlags||(t.ThreadMemberFlags={}));var g;(function(e){e["Rich"]="rich";e["Image"]="image";e["Video"]="video";e["GIFV"]="gifv";e["Article"]="article";e["Link"]="link"})(g=t.EmbedType||(t.EmbedType={}));var v;(function(e){e["Everyone"]="everyone";e["Role"]="roles";e["User"]="users"})(v=t.AllowedMentionsTypes||(t.AllowedMentionsTypes={}));var _;(function(e){e[e["ActionRow"]=1]="ActionRow";e[e["Button"]=2]="Button";e[e["SelectMenu"]=3]="SelectMenu"})(_=t.ComponentType||(t.ComponentType={}));var T;(function(e){e[e["Primary"]=1]="Primary";e[e["Secondary"]=2]="Secondary";e[e["Success"]=3]="Success";e[e["Danger"]=4]="Danger";e[e["Link"]=5]="Link"})(T=t.ButtonStyle||(t.ButtonStyle={}))},56705:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},85022:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ActivityFlags=t.ActivityType=t.ActivityPlatform=t.PresenceUpdateStatus=void 0;var i;(function(e){e["Online"]="online";e["DoNotDisturb"]="dnd";e["Idle"]="idle";e["Invisible"]="invisible";e["Offline"]="offline"})(i=t.PresenceUpdateStatus||(t.PresenceUpdateStatus={}));var s;(function(e){e["Desktop"]="desktop";e["Samsung"]="samsung";e["Xbox"]="xbox"})(s=t.ActivityPlatform||(t.ActivityPlatform={}));var r;(function(e){e[e["Game"]=0]="Game";e[e["Streaming"]=1]="Streaming";e[e["Listening"]=2]="Listening";e[e["Watching"]=3]="Watching";e[e["Custom"]=4]="Custom";e[e["Competing"]=5]="Competing"})(r=t.ActivityType||(t.ActivityType={}));var o;(function(e){e[e["Instance"]=1]="Instance";e[e["Join"]=2]="Join";e[e["Spectate"]=4]="Spectate";e[e["JoinRequest"]=8]="JoinRequest";e[e["Sync"]=16]="Sync";e[e["Play"]=32]="Play";e[e["PartyPrivacyFriends"]=64]="PartyPrivacyFriends";e[e["PartyPrivacyVoiceChannel"]=128]="PartyPrivacyVoiceChannel";e[e["Embedded"]=256]="Embedded"})(o=t.ActivityFlags||(t.ActivityFlags={}))},68150:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.MembershipScreeningFieldType=t.GuildWidgetStyle=t.IntegrationExpireBehavior=t.GuildFeature=t.GuildSystemChannelFlags=t.GuildPremiumTier=t.GuildVerificationLevel=t.GuildNSFWLevel=t.GuildMFALevel=t.GuildExplicitContentFilter=t.GuildDefaultMessageNotifications=void 0;var i;(function(e){e[e["AllMessages"]=0]="AllMessages";e[e["OnlyMentions"]=1]="OnlyMentions"})(i=t.GuildDefaultMessageNotifications||(t.GuildDefaultMessageNotifications={}));var s;(function(e){e[e["Disabled"]=0]="Disabled";e[e["MembersWithoutRoles"]=1]="MembersWithoutRoles";e[e["AllMembers"]=2]="AllMembers"})(s=t.GuildExplicitContentFilter||(t.GuildExplicitContentFilter={}));var r;(function(e){e[e["None"]=0]="None";e[e["Elevated"]=1]="Elevated"})(r=t.GuildMFALevel||(t.GuildMFALevel={}));var o;(function(e){e[e["Default"]=0]="Default";e[e["Explicit"]=1]="Explicit";e[e["Safe"]=2]="Safe";e[e["AgeRestricted"]=3]="AgeRestricted"})(o=t.GuildNSFWLevel||(t.GuildNSFWLevel={}));var l;(function(e){e[e["None"]=0]="None";e[e["Low"]=1]="Low";e[e["Medium"]=2]="Medium";e[e["High"]=3]="High";e[e["VeryHigh"]=4]="VeryHigh"})(l=t.GuildVerificationLevel||(t.GuildVerificationLevel={}));var c;(function(e){e[e["None"]=0]="None";e[e["Tier1"]=1]="Tier1";e[e["Tier2"]=2]="Tier2";e[e["Tier3"]=3]="Tier3"})(c=t.GuildPremiumTier||(t.GuildPremiumTier={}));var u;(function(e){e[e["SuppressJoinNotifications"]=1]="SuppressJoinNotifications";e[e["SuppressPremiumSubscriptions"]=2]="SuppressPremiumSubscriptions";e[e["SuppressGuildReminderNotifications"]=4]="SuppressGuildReminderNotifications";e[e["SuppressJoinNotificationReplies"]=8]="SuppressJoinNotificationReplies"})(u=t.GuildSystemChannelFlags||(t.GuildSystemChannelFlags={}));var m;(function(e){e["AnimatedIcon"]="ANIMATED_ICON";e["Banner"]="BANNER";e["Commerce"]="COMMERCE";e["Community"]="COMMUNITY";e["Discoverable"]="DISCOVERABLE";e["Featurable"]="FEATURABLE";e["InviteSplash"]="INVITE_SPLASH";e["MemberVerificationGateEnabled"]="MEMBER_VERIFICATION_GATE_ENABLED";e["MonetizationEnabled"]="MONETIZATION_ENABLED";e["MoreStickers"]="MORE_STICKERS";e["News"]="NEWS";e["Partnered"]="PARTNERED";e["PreviewEnabled"]="PREVIEW_ENABLED";e["PrivateThreads"]="PRIVATE_THREADS";e["RelayEnabled"]="RELAY_ENABLED";e["RoleIcons"]="ROLE_ICONS";e["SevenDayThreadArchive"]="SEVEN_DAY_THREAD_ARCHIVE";e["ThreeDayThreadArchive"]="THREE_DAY_THREAD_ARCHIVE";e["TicketedEventsEnabled"]="TICKETED_EVENTS_ENABLED";e["VanityURL"]="VANITY_URL";e["Verified"]="VERIFIED";e["VIPRegions"]="VIP_REGIONS";e["WelcomeScreenEnabled"]="WELCOME_SCREEN_ENABLED"})(m=t.GuildFeature||(t.GuildFeature={}));var g;(function(e){e[e["RemoveRole"]=0]="RemoveRole";e[e["Kick"]=1]="Kick"})(g=t.IntegrationExpireBehavior||(t.IntegrationExpireBehavior={}));var v;(function(e){e["Shield"]="shield";e["Banner1"]="banner1";e["Banner2"]="banner2";e["Banner3"]="banner3";e["Banner4"]="banner4"})(v=t.GuildWidgetStyle||(t.GuildWidgetStyle={}));var _;(function(e){e["Terms"]="TERMS"})(_=t.MembershipScreeningFieldType||(t.MembershipScreeningFieldType={}))},57332:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.GuildScheduledEventPrivacyLevel=t.GuildScheduledEventStatus=t.GuildScheduledEventEntityType=void 0;var i;(function(e){e[e["StageInstance"]=1]="StageInstance";e[e["Voice"]=2]="Voice";e[e["External"]=3]="External"})(i=t.GuildScheduledEventEntityType||(t.GuildScheduledEventEntityType={}));var s;(function(e){e[e["Scheduled"]=1]="Scheduled";e[e["Active"]=2]="Active";e[e["Completed"]=3]="Completed";e[e["Canceled"]=4]="Canceled"})(s=t.GuildScheduledEventStatus||(t.GuildScheduledEventStatus={}));var r;(function(e){e[e["GuildOnly"]=2]="GuildOnly"})(r=t.GuildScheduledEventPrivacyLevel||(t.GuildScheduledEventPrivacyLevel={}))},46763:function(e,t,i){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,i,s){if(s===undefined)s=i;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[i]}})}:function(e,t,i,s){if(s===undefined)s=i;e[s]=t[i]});var r=this&&this.__exportStar||function(e,t){for(var i in e)if(i!=="default"&&!Object.prototype.hasOwnProperty.call(t,i))s(t,e,i)};Object.defineProperty(t,"__esModule",{value:true});r(i(7578),t);r(i(10827),t);r(i(63138),t);r(i(56705),t);r(i(85022),t);r(i(68150),t);r(i(57332),t);r(i(5092),t);r(i(36277),t);r(i(84220),t);r(i(23364),t);r(i(36308),t);r(i(61659),t);r(i(5293),t);r(i(78719),t);r(i(48579),t);r(i(69297),t);r(i(2698),t)},5092:function(e,t,i){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,i,s){if(s===undefined)s=i;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[i]}})}:function(e,t,i,s){if(s===undefined)s=i;e[s]=t[i]});var r=this&&this.__exportStar||function(e,t){for(var i in e)if(i!=="default"&&!Object.prototype.hasOwnProperty.call(t,i))s(t,e,i)};Object.defineProperty(t,"__esModule",{value:true});r(i(6482),t);r(i(84144),t);r(i(22329),t);r(i(63906),t);r(i(35458),t)},36277:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.InviteTargetType=void 0;var i;(function(e){e[e["Stream"]=1]="Stream";e[e["EmbeddedApplication"]=2]="EmbeddedApplication"})(i=t.InviteTargetType||(t.InviteTargetType={}))},84220:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.OAuth2Scopes=void 0;var i;(function(e){e["Bot"]="bot";e["Connections"]="connections";e["Email"]="email";e["Identify"]="identify";e["Guilds"]="guilds";e["GuildsJoin"]="guilds.join";e["GuildsMembersRead"]="guilds.members.read";e["GroupDMJoins"]="gdm.join";e["MessagesRead"]="messages.read";e["RPC"]="rpc";e["RPCNotificationsRead"]="rpc.notifications.read";e["WebhookIncoming"]="webhook.incoming";e["ApplicationsBuildsUpload"]="applications.builds.upload";e["ApplicationsBuildsRead"]="applications.builds.read";e["ApplicationsStoreUpdate"]="applications.store.update";e["ApplicationsEntitlements"]="applications.entitlements";e["RelationshipsRead"]="relationships.read";e["ActivitiesRead"]="activities.read";e["ActivitiesWrite"]="activities.write";e["ApplicationsCommands"]="applications.commands";e["ApplicationsCommandsUpdate"]="applications.commands.update"})(i=t.OAuth2Scopes||(t.OAuth2Scopes={}))},23364:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.PermissionFlagsBits=void 0;t.PermissionFlagsBits={CreateInstantInvite:1n<<0n,KickMembers:1n<<1n,BanMembers:1n<<2n,Administrator:1n<<3n,ManageChannels:1n<<4n,ManageGuild:1n<<5n,AddReactions:1n<<6n,ViewAuditLog:1n<<7n,PrioritySpeaker:1n<<8n,Stream:1n<<9n,ViewChannel:1n<<10n,SendMessages:1n<<11n,SendTTSMessages:1n<<12n,ManageMessages:1n<<13n,EmbedLinks:1n<<14n,AttachFiles:1n<<15n,ReadMessageHistory:1n<<16n,MentionEveryone:1n<<17n,UseExternalEmojis:1n<<18n,ViewGuildInsights:1n<<19n,Connect:1n<<20n,Speak:1n<<21n,MuteMembers:1n<<22n,DeafenMembers:1n<<23n,MoveMembers:1n<<24n,UseVAD:1n<<25n,ChangeNickname:1n<<26n,ManageNicknames:1n<<27n,ManageRoles:1n<<28n,ManageWebhooks:1n<<29n,ManageEmojisAndStickers:1n<<30n,UseApplicationCommands:1n<<31n,RequestToSpeak:1n<<32n,ManageEvents:1n<<33n,ManageThreads:1n<<34n,CreatePublicThreads:1n<<35n,CreatePrivateThreads:1n<<36n,UseExternalStickers:1n<<37n,SendMessagesInThreads:1n<<38n,StartEmbeddedActivities:1n<<39n,ModerateMembers:1n<<40n};Object.freeze(t.PermissionFlagsBits)},36308:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.StageInstancePrivacyLevel=void 0;var i;(function(e){e[e["Public"]=1]="Public";e[e["GuildOnly"]=2]="GuildOnly"})(i=t.StageInstancePrivacyLevel||(t.StageInstancePrivacyLevel={}))},61659:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.StickerFormatType=t.StickerType=void 0;var i;(function(e){e[e["Standard"]=1]="Standard";e[e["Guild"]=2]="Guild"})(i=t.StickerType||(t.StickerType={}));var s;(function(e){e[e["PNG"]=1]="PNG";e[e["APNG"]=2]="APNG";e[e["Lottie"]=3]="Lottie"})(s=t.StickerFormatType||(t.StickerFormatType={}))},5293:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.TeamMemberMembershipState=void 0;var i;(function(e){e[e["Invited"]=1]="Invited";e[e["Accepted"]=2]="Accepted"})(i=t.TeamMemberMembershipState||(t.TeamMemberMembershipState={}))},78719:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},48579:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.ConnectionVisibility=t.UserPremiumType=t.UserFlags=void 0;var i;(function(e){e[e["None"]=0]="None";e[e["Staff"]=1]="Staff";e[e["Partner"]=2]="Partner";e[e["Hypesquad"]=4]="Hypesquad";e[e["BugHunterLevel1"]=8]="BugHunterLevel1";e[e["HypeSquadOnlineHouse1"]=64]="HypeSquadOnlineHouse1";e[e["HypeSquadOnlineHouse2"]=128]="HypeSquadOnlineHouse2";e[e["HypeSquadOnlineHouse3"]=256]="HypeSquadOnlineHouse3";e[e["PremiumEarlySupporter"]=512]="PremiumEarlySupporter";e[e["TeamPseudoUser"]=1024]="TeamPseudoUser";e[e["BugHunterLevel2"]=16384]="BugHunterLevel2";e[e["VerifiedBot"]=65536]="VerifiedBot";e[e["VerifiedDeveloper"]=131072]="VerifiedDeveloper";e[e["CertifiedModerator"]=262144]="CertifiedModerator";e[e["BotHTTPInteractions"]=524288]="BotHTTPInteractions"})(i=t.UserFlags||(t.UserFlags={}));var s;(function(e){e[e["None"]=0]="None";e[e["NitroClassic"]=1]="NitroClassic";e[e["Nitro"]=2]="Nitro"})(s=t.UserPremiumType||(t.UserPremiumType={}));var r;(function(e){e[e["None"]=0]="None";e[e["Everyone"]=1]="Everyone"})(r=t.ConnectionVisibility||(t.ConnectionVisibility={}))},69297:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},2698:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.WebhookType=void 0;var i;(function(e){e[e["Incoming"]=1]="Incoming";e[e["ChannelFollower"]=2]="ChannelFollower";e[e["Application"]=3]="Application"})(i=t.WebhookType||(t.WebhookType={}))},43138:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.RESTJSONErrorCodes=void 0;var i;(function(e){e[e["GeneralError"]=0]="GeneralError";e[e["UnknownAccount"]=10001]="UnknownAccount";e[e["UnknownApplication"]=10002]="UnknownApplication";e[e["UnknownChannel"]=10003]="UnknownChannel";e[e["UnknownGuild"]=10004]="UnknownGuild";e[e["UnknownIntegration"]=10005]="UnknownIntegration";e[e["UnknownInvite"]=10006]="UnknownInvite";e[e["UnknownMember"]=10007]="UnknownMember";e[e["UnknownMessage"]=10008]="UnknownMessage";e[e["UnknownPermissionOverwrite"]=10009]="UnknownPermissionOverwrite";e[e["UnknownProvider"]=10010]="UnknownProvider";e[e["UnknownRole"]=10011]="UnknownRole";e[e["UnknownToken"]=10012]="UnknownToken";e[e["UnknownUser"]=10013]="UnknownUser";e[e["UnknownEmoji"]=10014]="UnknownEmoji";e[e["UnknownWebhook"]=10015]="UnknownWebhook";e[e["UnknownWebhookService"]=10016]="UnknownWebhookService";e[e["UnknownSession"]=10020]="UnknownSession";e[e["UnknownBan"]=10026]="UnknownBan";e[e["UnknownSKU"]=10027]="UnknownSKU";e[e["UnknownStoreListing"]=10028]="UnknownStoreListing";e[e["UnknownEntitlement"]=10029]="UnknownEntitlement";e[e["UnknownBuild"]=10030]="UnknownBuild";e[e["UnknownLobby"]=10031]="UnknownLobby";e[e["UnknownBranch"]=10032]="UnknownBranch";e[e["UnknownStoreDirectoryLayout"]=10033]="UnknownStoreDirectoryLayout";e[e["UnknownRedistributable"]=10036]="UnknownRedistributable";e[e["UnknownGiftCode"]=10038]="UnknownGiftCode";e[e["UnknownStream"]=10049]="UnknownStream";e[e["UnknownPremiumServerSubscribeCooldown"]=10050]="UnknownPremiumServerSubscribeCooldown";e[e["UnknownGuildTemplate"]=10057]="UnknownGuildTemplate";e[e["UnknownDiscoverableServerCategory"]=10059]="UnknownDiscoverableServerCategory";e[e["UnknownSticker"]=10060]="UnknownSticker";e[e["UnknownInteraction"]=10062]="UnknownInteraction";e[e["UnknownApplicationCommand"]=10063]="UnknownApplicationCommand";e[e["UnknownApplicationCommandPermissions"]=10066]="UnknownApplicationCommandPermissions";e[e["UnknownStageInstance"]=10067]="UnknownStageInstance";e[e["UnknownGuildMemberVerificationForm"]=10068]="UnknownGuildMemberVerificationForm";e[e["UnknownGuildWelcomeScreen"]=10069]="UnknownGuildWelcomeScreen";e[e["UnknownGuildScheduledEvent"]=10070]="UnknownGuildScheduledEvent";e[e["UnknownGuildScheduledEventUser"]=10071]="UnknownGuildScheduledEventUser";e[e["BotsCannotUseThisEndpoint"]=20001]="BotsCannotUseThisEndpoint";e[e["OnlyBotsCanUseThisEndpoint"]=20002]="OnlyBotsCanUseThisEndpoint";e[e["ExplicitContentCannotBeSentToTheDesiredRecipient"]=20009]="ExplicitContentCannotBeSentToTheDesiredRecipient";e[e["NotAuthorizedToPerformThisActionOnThisApplication"]=20012]="NotAuthorizedToPerformThisActionOnThisApplication";e[e["ActionCannotBePerformedDueToSlowmodeRateLimit"]=20016]="ActionCannotBePerformedDueToSlowmodeRateLimit";e[e["TheMazeIsntMeantForYou"]=20017]="TheMazeIsntMeantForYou";e[e["OnlyTheOwnerOfThisAccountCanPerformThisAction"]=20018]="OnlyTheOwnerOfThisAccountCanPerformThisAction";e[e["AnnouncementEditLimitExceeded"]=20022]="AnnouncementEditLimitExceeded";e[e["ChannelSendRateLimit"]=20028]="ChannelSendRateLimit";e[e["ServerSendRateLimit"]=20029]="ServerSendRateLimit";e[e["StageTopicServerNameServerDescriptionOrChannelNamesContainDisallowedWords"]=20031]="StageTopicServerNameServerDescriptionOrChannelNamesContainDisallowedWords";e[e["GuildPremiumSubscriptionLevelTooLow"]=20035]="GuildPremiumSubscriptionLevelTooLow";e[e["MaximumNumberOfGuildsReached"]=30001]="MaximumNumberOfGuildsReached";e[e["MaximumNumberOfFriendsReached"]=30002]="MaximumNumberOfFriendsReached";e[e["MaximumNumberOfPinsReachedForTheChannel"]=30003]="MaximumNumberOfPinsReachedForTheChannel";e[e["MaximumNumberOfRecipientsReached"]=30004]="MaximumNumberOfRecipientsReached";e[e["MaximumNumberOfGuildRolesReached"]=30005]="MaximumNumberOfGuildRolesReached";e[e["MaximumNumberOfWebhooksReached"]=30007]="MaximumNumberOfWebhooksReached";e[e["MaximumNumberOfEmojisReached"]=30008]="MaximumNumberOfEmojisReached";e[e["MaximumNumberOfReactionsReached"]=30010]="MaximumNumberOfReactionsReached";e[e["MaximumNumberOfGuildChannelsReached"]=30013]="MaximumNumberOfGuildChannelsReached";e[e["MaximumNumberOfAttachmentsInAMessageReached"]=30015]="MaximumNumberOfAttachmentsInAMessageReached";e[e["MaximumNumberOfInvitesReached"]=30016]="MaximumNumberOfInvitesReached";e[e["MaximumNumberOfAnimatedEmojisReached"]=30018]="MaximumNumberOfAnimatedEmojisReached";e[e["MaximumNumberOfServerMembersReached"]=30019]="MaximumNumberOfServerMembersReached";e[e["MaximumNumberOfServerCategoriesReached"]=30030]="MaximumNumberOfServerCategoriesReached";e[e["GuildAlreadyHasTemplate"]=30031]="GuildAlreadyHasTemplate";e[e["MaximumThreadParticipants"]=30033]="MaximumThreadParticipants";e[e["MaximumNumberOfNonGuildMemberBansHasBeenExceeded"]=30035]="MaximumNumberOfNonGuildMemberBansHasBeenExceeded";e[e["MaximumNumberOfBanFetchesHasBeenReached"]=30037]="MaximumNumberOfBanFetchesHasBeenReached";e[e["MaximumNumberOfUncompletedGuildScheduledEventsReached"]=30038]="MaximumNumberOfUncompletedGuildScheduledEventsReached";e[e["MaximumNumberOfStickersReached"]=30039]="MaximumNumberOfStickersReached";e[e["MaximumNumberOfPruneRequestsHasBeenReached"]=30040]="MaximumNumberOfPruneRequestsHasBeenReached";e[e["Unauthorized"]=40001]="Unauthorized";e[e["VerifyYourAccount"]=40002]="VerifyYourAccount";e[e["OpeningDirectMessagesTooFast"]=40003]="OpeningDirectMessagesTooFast";e[e["RequestEntityTooLarge"]=40005]="RequestEntityTooLarge";e[e["FeatureTemporarilyDisabledServerSide"]=40006]="FeatureTemporarilyDisabledServerSide";e[e["UserBannedFromThisGuild"]=40007]="UserBannedFromThisGuild";e[e["TargetUserIsNotConnectedToVoice"]=40032]="TargetUserIsNotConnectedToVoice";e[e["ThisMessageWasAlreadyCrossposted"]=40033]="ThisMessageWasAlreadyCrossposted";e[e["ApplicationCommandWithThatNameAlreadyExists"]=40041]="ApplicationCommandWithThatNameAlreadyExists";e[e["MissingAccess"]=50001]="MissingAccess";e[e["InvalidAccountType"]=50002]="InvalidAccountType";e[e["CannotExecuteActionOnDMChannel"]=50003]="CannotExecuteActionOnDMChannel";e[e["GuildWidgetDisabled"]=50004]="GuildWidgetDisabled";e[e["CannotEditMessageAuthoredByAnotherUser"]=50005]="CannotEditMessageAuthoredByAnotherUser";e[e["CannotSendAnEmptyMessage"]=50006]="CannotSendAnEmptyMessage";e[e["CannotSendMessagesToThisUser"]=50007]="CannotSendMessagesToThisUser";e[e["CannotSendMessagesInVoiceChannel"]=50008]="CannotSendMessagesInVoiceChannel";e[e["ChannelVerificationLevelTooHighForYouToGainAccess"]=50009]="ChannelVerificationLevelTooHighForYouToGainAccess";e[e["OAuth2ApplicationDoesNotHaveBot"]=50010]="OAuth2ApplicationDoesNotHaveBot";e[e["OAuth2ApplicationLimitReached"]=50011]="OAuth2ApplicationLimitReached";e[e["InvalidOAuth2State"]=50012]="InvalidOAuth2State";e[e["MissingPermissions"]=50013]="MissingPermissions";e[e["InvalidToken"]=50014]="InvalidToken";e[e["NoteWasTooLong"]=50015]="NoteWasTooLong";e[e["ProvidedTooFewOrTooManyMessagesToDelete"]=50016]="ProvidedTooFewOrTooManyMessagesToDelete";e[e["MessageCanOnlyBePinnedInTheChannelItWasSentIn"]=50019]="MessageCanOnlyBePinnedInTheChannelItWasSentIn";e[e["InviteCodeInvalidOrTaken"]=50020]="InviteCodeInvalidOrTaken";e[e["CannotExecuteActionOnSystemMessage"]=50021]="CannotExecuteActionOnSystemMessage";e[e["CannotExecuteActionOnThisChannelType"]=50024]="CannotExecuteActionOnThisChannelType";e[e["InvalidOAuth2AccessToken"]=50025]="InvalidOAuth2AccessToken";e[e["MissingRequiredOAuth2Scope"]=50026]="MissingRequiredOAuth2Scope";e[e["InvalidWebhookToken"]=50027]="InvalidWebhookToken";e[e["InvalidRole"]=50028]="InvalidRole";e[e["InvalidRecipients"]=50033]="InvalidRecipients";e[e["OneOfTheMessagesProvidedWasTooOldForBulkDelete"]=50034]="OneOfTheMessagesProvidedWasTooOldForBulkDelete";e[e["InvalidFormBodyOrContentType"]=50035]="InvalidFormBodyOrContentType";e[e["InviteAcceptedToGuildWithoutTheBotBeingIn"]=50036]="InviteAcceptedToGuildWithoutTheBotBeingIn";e[e["InvalidAPIVersion"]=50041]="InvalidAPIVersion";e[e["FileUploadedExceedsMaximumSize"]=50045]="FileUploadedExceedsMaximumSize";e[e["InvalidFileUploaded"]=50046]="InvalidFileUploaded";e[e["CannotSelfRedeemThisGift"]=50054]="CannotSelfRedeemThisGift";e[e["InvalidGuild"]=50055]="InvalidGuild";e[e["PaymentSourceRequiredToRedeemGift"]=50070]="PaymentSourceRequiredToRedeemGift";e[e["CannotDeleteChannelRequiredForCommunityGuilds"]=50074]="CannotDeleteChannelRequiredForCommunityGuilds";e[e["InvalidStickerSent"]=50081]="InvalidStickerSent";e[e["InvalidActionOnArchivedThread"]=50083]="InvalidActionOnArchivedThread";e[e["InvalidThreadNotificationSettings"]=50084]="InvalidThreadNotificationSettings";e[e["ParameterEarlierThanCreation"]=50085]="ParameterEarlierThanCreation";e[e["ServerNotAvailableInYourLocation"]=50095]="ServerNotAvailableInYourLocation";e[e["ServerNeedsMonetizationEnabledToPerformThisAction"]=50097]="ServerNeedsMonetizationEnabledToPerformThisAction";e[e["ServerNeedsMoreBoostsToPerformThisAction"]=50101]="ServerNeedsMoreBoostsToPerformThisAction";e[e["RequestBodyContainsInvalidJSON"]=50109]="RequestBodyContainsInvalidJSON";e[e["TwoFactorAuthenticationIsRequired"]=60003]="TwoFactorAuthenticationIsRequired";e[e["NoUsersWithDiscordTagExist"]=80004]="NoUsersWithDiscordTagExist";e[e["ReactionWasBlocked"]=90001]="ReactionWasBlocked";e[e["APIResourceOverloaded"]=13e4]="APIResourceOverloaded";e[e["TheStageIsAlreadyOpen"]=150006]="TheStageIsAlreadyOpen";e[e["CannotReplyWithoutPermissionToReadMessageHistory"]=160002]="CannotReplyWithoutPermissionToReadMessageHistory";e[e["ThreadAlreadyCreatedForMessage"]=160004]="ThreadAlreadyCreatedForMessage";e[e["ThreadLocked"]=160005]="ThreadLocked";e[e["MaximumActiveThreads"]=160006]="MaximumActiveThreads";e[e["MaximumActiveAnnouncementThreads"]=160007]="MaximumActiveAnnouncementThreads";e[e["InvalidJSONForUploadedLottieFile"]=170001]="InvalidJSONForUploadedLottieFile";e[e["UploadedLottiesCannotContainRasterizedImages"]=170002]="UploadedLottiesCannotContainRasterizedImages";e[e["StickerMaximumFramerateExceeded"]=170003]="StickerMaximumFramerateExceeded";e[e["StickerFrameCountExceedsMaximumOf1000Frames"]=170004]="StickerFrameCountExceedsMaximumOf1000Frames";e[e["LottieAnimationMaximumDimensionsExceeded"]=170005]="LottieAnimationMaximumDimensionsExceeded";e[e["StickerFramerateIsTooSmallOrTooLarge"]=170006]="StickerFramerateIsTooSmallOrTooLarge";e[e["StickerAnimationDurationExceedsMaximumOf5Seconds"]=170007]="StickerAnimationDurationExceedsMaximumOf5Seconds";e[e["CannotUpdateAFinishedEvent"]=18e4]="CannotUpdateAFinishedEvent";e[e["FailedToCreateStageNeededForStageEvent"]=180002]="FailedToCreateStageNeededForStageEvent"})(i=t.RESTJSONErrorCodes||(t.RESTJSONErrorCodes={}))},34823:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},65202:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},58342:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},59918:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},26604:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},76686:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},84118:function(e,t,i){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,i,s){if(s===undefined)s=i;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[i]}})}:function(e,t,i,s){if(s===undefined)s=i;e[s]=t[i]});var r=this&&this.__exportStar||function(e,t){for(var i in e)if(i!=="default"&&!Object.prototype.hasOwnProperty.call(t,i))s(t,e,i)};Object.defineProperty(t,"__esModule",{value:true});t.OAuth2Routes=t.RouteBases=t.Routes=t.APIVersion=void 0;r(i(43138),t);r(i(34823),t);r(i(65202),t);r(i(58342),t);r(i(59918),t);r(i(26604),t);r(i(76686),t);r(i(81822),t);r(i(70349),t);r(i(31186),t);r(i(57742),t);r(i(10106),t);r(i(50706),t);r(i(90117),t);r(i(19925),t);r(i(8040),t);t.APIVersion="9";t.Routes={guildAuditLog(e){return`/guilds/${e}/audit-logs`},channel(e){return`/channels/${e}`},channelMessages(e){return`/channels/${e}/messages`},channelMessage(e,t){return`/channels/${e}/messages/${t}`},channelMessageCrosspost(e,t){return`/channels/${e}/messages/${t}/crosspost`},channelMessageOwnReaction(e,t,i){return`/channels/${e}/messages/${t}/reactions/${i}/@me`},channelMessageUserReaction(e,t,i,s){return`/channels/${e}/messages/${t}/reactions/${i}/${s}`},channelMessageReaction(e,t,i){return`/channels/${e}/messages/${t}/reactions/${i}`},channelMessageAllReactions(e,t){return`/channels/${e}/messages/${t}/reactions`},channelBulkDelete(e){return`/channels/${e}/messages/bulk-delete`},channelPermission(e,t){return`/channels/${e}/permissions/${t}`},channelInvites(e){return`/channels/${e}/invites`},channelFollowers(e){return`/channels/${e}/followers`},channelTyping(e){return`/channels/${e}/typing`},channelPins(e){return`/channels/${e}/pins`},channelPin(e,t){return`/channels/${e}/pins/${t}`},channelRecipient(e,t){return`/channels/${e}/recipients/${t}`},guildEmojis(e){return`/guilds/${e}/emojis`},guildEmoji(e,t){return`/guilds/${e}/emojis/${t}`},guilds(){return"/guilds"},guild(e){return`/guilds/${e}`},guildPreview(e){return`/guilds/${e}/preview`},guildChannels(e){return`/guilds/${e}/channels`},guildMember(e,t){return`/guilds/${e}/members/${t}`},guildMembers(e){return`/guilds/${e}/members`},guildMembersSearch(e){return`/guilds/${e}/members/search`},guildCurrentMemberNickname(e){return`/guilds/${e}/members/@me/nick`},guildMemberRole(e,t,i){return`/guilds/${e}/members/${t}/roles/${i}`},guildBans(e){return`/guilds/${e}/bans`},guildBan(e,t){return`/guilds/${e}/bans/${t}`},guildRoles(e){return`/guilds/${e}/roles`},guildRole(e,t){return`/guilds/${e}/roles/${t}`},guildPrune(e){return`/guilds/${e}/prune`},guildVoiceRegions(e){return`/guilds/${e}/regions`},guildInvites(e){return`/guilds/${e}/invites`},guildIntegrations(e){return`/guilds/${e}/integrations`},guildIntegration(e,t){return`/guilds/${e}/integrations/${t}`},guildWidgetSettings(e){return`/guilds/${e}/widget`},guildWidgetJSON(e){return`/guilds/${e}/widget.json`},guildVanityUrl(e){return`/guilds/${e}/vanity-url`},guildWidgetImage(e){return`/guilds/${e}/widget.png`},invite(e){return`/invites/${e}`},template(e){return`/guilds/templates/${e}`},guildTemplates(e){return`/guilds/${e}/templates`},guildTemplate(e,t){return`/guilds/${e}/templates/${t}`},threads(e,t){const i=["","channels",e];if(t)i.push("messages",t);i.push("threads");return i.join("/")},guildActiveThreads(e){return`/guilds/${e}/threads/active`},channelThreads(e,t){const i=["","channels",e,"threads"];if(t)i.push("archived",t);else i.push("active");return i.join("/")},channelJoinedArchivedThreads(e){return`/channels/${e}/users/@me/threads/archived/private`},threadMembers(e,t){const i=["","channels",e,"thread-members"];if(t)i.push(t);return i.join("/")},user(e="@me"){return`/users/${e}`},userGuilds(){return`/users/@me/guilds`},userGuildMember(e){return`/users/@me/guilds/${e}/member`},userGuild(e){return`/users/@me/guilds/${e}`},userChannels(){return`/users/@me/channels`},userConnections(){return`/users/@me/connections`},voiceRegions(){return`/voice/regions`},channelWebhooks(e){return`/channels/${e}/webhooks`},guildWebhooks(e){return`/guilds/${e}/webhooks`},webhook(e,t){const i=["","webhooks",e];if(t)i.push(t);return i.join("/")},webhookMessage(e,t,i="@original"){return`/webhooks/${e}/${t}/messages/${i}`},webhookPlatform(e,t,i){return`/webhooks/${e}/${t}/${i}`},gateway(){return`/gateway`},gatewayBot(){return`/gateway/bot`},oauth2CurrentApplication(){return`/oauth2/applications/@me`},oauth2CurrentAuthorization(){return`/oauth2/@me`},oauth2Authorization(){return`/oauth2/authorize`},oauth2TokenExchange(){return`/oauth2/token`},oauth2TokenRevocation(){return`/oauth2/token/revoke`},applicationCommands(e){return`/applications/${e}/commands`},applicationCommand(e,t){return`/applications/${e}/commands/${t}`},applicationGuildCommands(e,t){return`/applications/${e}/guilds/${t}/commands`},applicationGuildCommand(e,t,i){return`/applications/${e}/guilds/${t}/commands/${i}`},interactionCallback(e,t){return`/interactions/${e}/${t}/callback`},guildMemberVerification(e){return`/guilds/${e}/member-verification`},guildVoiceState(e,t="@me"){return`/guilds/${e}/voice-states/${t}`},guildApplicationCommandsPermissions(e,t){return`/applications/${e}/guilds/${t}/commands/permissions`},applicationCommandPermissions(e,t,i){return`/applications/${e}/guilds/${t}/commands/${i}/permissions`},guildWelcomeScreen(e){return`/guilds/${e}/welcome-screen`},stageInstances(){return`/stage-instances`},stageInstance(e){return`/stage-instances/${e}`},sticker(e){return`/stickers/${e}`},nitroStickerPacks(){return"/sticker-packs"},guildStickers(e){return`/guilds/${e}/stickers`},guildSticker(e,t){return`/guilds/${e}/stickers/${t}`},guildScheduledEvents(e){return`/guilds/${e}/scheduled-events`},guildScheduledEvent(e,t){return`/guilds/${e}/scheduled-events/${t}`},guildScheduledEventUsers(e,t){return`/guilds/${e}/scheduled-events/${t}/users`}};t.RouteBases={api:`https://discord.com/api/v${t.APIVersion}`,cdn:"https://cdn.discordapp.com",invite:"https://discord.gg",template:"https://discord.new",gift:"https://discord.gift"};Object.freeze(t.RouteBases);t.OAuth2Routes={authorizationURL:`${t.RouteBases.api}${t.Routes.oauth2Authorization()}`,tokenURL:`${t.RouteBases.api}${t.Routes.oauth2TokenExchange()}`,tokenRevocationURL:`${t.RouteBases.api}${t.Routes.oauth2TokenRevocation()}`};Object.freeze(t.OAuth2Routes)},81822:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},70349:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},31186:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},57742:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},10106:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},50706:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},90117:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},19925:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},8040:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},51435:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.RPCCloseEventCodes=t.RPCErrorCodes=void 0;var i;(function(e){e[e["UnknownError"]=1e3]="UnknownError";e[e["InvalidPayload"]=4e3]="InvalidPayload";e[e["InvalidCommand"]=4002]="InvalidCommand";e[e["InvalidGuild"]=4003]="InvalidGuild";e[e["InvalidEvent"]=4004]="InvalidEvent";e[e["InvalidChannel"]=4005]="InvalidChannel";e[e["InvalidPermissions"]=4006]="InvalidPermissions";e[e["InvalidClientId"]=4007]="InvalidClientId";e[e["InvalidOrigin"]=4008]="InvalidOrigin";e[e["InvalidToken"]=4009]="InvalidToken";e[e["InvalidUser"]=4010]="InvalidUser";e[e["OAuth2Error"]=5e3]="OAuth2Error";e[e["SelectChannelTimedOut"]=5001]="SelectChannelTimedOut";e[e["GetGuildTimedOut"]=5002]="GetGuildTimedOut";e[e["SelectVoiceForceRequired"]=5003]="SelectVoiceForceRequired";e[e["CaptureShortcutAlreadyListening"]=5004]="CaptureShortcutAlreadyListening"})(i=t.RPCErrorCodes||(t.RPCErrorCodes={}));var s;(function(e){e[e["InvalidClientId"]=4e3]="InvalidClientId";e[e["InvalidOrigin"]=4001]="InvalidOrigin";e[e["RateLimited"]=4002]="RateLimited";e[e["TokenRevoked"]=4003]="TokenRevoked";e[e["InvalidVersion"]=4004]="InvalidVersion";e[e["InvalidEncoding"]=4005]="InvalidEncoding"})(s=t.RPCCloseEventCodes||(t.RPCCloseEventCodes={}))},47526:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.isInteractionButton=t.isLinkButton=t.isMessageComponentGuildInteraction=t.isMessageComponentDMInteraction=t.isApplicationCommandGuildInteraction=t.isApplicationCommandDMInteraction=t.isGuildInteraction=t.isDMInteraction=void 0;i(46763);function isDMInteraction(e){return Reflect.has(e,"user")}t.isDMInteraction=isDMInteraction;function isGuildInteraction(e){return Reflect.has(e,"guild_id")}t.isGuildInteraction=isGuildInteraction;function isApplicationCommandDMInteraction(e){return isDMInteraction(e)}t.isApplicationCommandDMInteraction=isApplicationCommandDMInteraction;function isApplicationCommandGuildInteraction(e){return isGuildInteraction(e)}t.isApplicationCommandGuildInteraction=isApplicationCommandGuildInteraction;function isMessageComponentDMInteraction(e){return isDMInteraction(e)}t.isMessageComponentDMInteraction=isMessageComponentDMInteraction;function isMessageComponentGuildInteraction(e){return isGuildInteraction(e)}t.isMessageComponentGuildInteraction=isMessageComponentGuildInteraction;function isLinkButton(e){return e.style===5}t.isLinkButton=isLinkButton;function isInteractionButton(e){return e.style!==5}t.isInteractionButton=isInteractionButton},69787:function(e,t,i){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,i,s){if(s===undefined)s=i;Object.defineProperty(e,s,{enumerable:true,get:function(){return t[i]}})}:function(e,t,i,s){if(s===undefined)s=i;e[s]=t[i]});var r=this&&this.__exportStar||function(e,t){for(var i in e)if(i!=="default"&&!Object.prototype.hasOwnProperty.call(t,i))s(t,e,i)};Object.defineProperty(t,"__esModule",{value:true});t.Utils=void 0;r(i(60279),t);r(i(38726),t);r(i(46763),t);r(i(84118),t);r(i(51435),t);t.Utils=i(47526)},86908:(e,t,i)=>{"use strict";let s;const{Buffer:r}=i(72254);try{s=i(6832);if(!s.pack)s=null}catch{}t.WebSocket=i(88867);const o=new TextDecoder;t.encoding=s?"etf":"json";t.pack=s?s.pack:JSON.stringify;t.unpack=(e,i)=>{if(t.encoding==="json"||i==="json"){if(typeof e!=="string"){e=o.decode(e)}return JSON.parse(e)}if(!r.isBuffer(e))e=r.from(new Uint8Array(e));return s.unpack(e)};t.create=(e,i={},...s)=>{const[r,o]=e.split("?");i.encoding=t.encoding;i=new URLSearchParams(i);if(o)new URLSearchParams(o).forEach(((e,t)=>i.set(t,e)));const l=new t.WebSocket(`${r}?${i}`,...s);return l};for(const e of["CONNECTING","OPEN","CLOSING","CLOSED"])t[e]=t.WebSocket[e]},7149:(e,t,i)=>{"use strict";const s=i(15673);const r=i(97919);const o=i(71008);const l=i(28270);class BaseClient extends s{constructor(e={}){super();this.options=l.mergeDefault(o.createDefault(),e);this.rest=new r(this)}get api(){return this.rest.api}destroy(){if(this.rest.sweepInterval)clearInterval(this.rest.sweepInterval)}incrementMaxListeners(){const e=this.getMaxListeners();if(e!==0){this.setMaxListeners(e+1)}}decrementMaxListeners(){const e=this.getMaxListeners();if(e!==0){this.setMaxListeners(e-1)}}toJSON(...e){return l.flatten(this,{domain:false},...e)}}e.exports=BaseClient},64438:(module,__unused_webpack_exports,__nccwpck_require__)=>{"use strict";const process=__nccwpck_require__(97742);const{setInterval:setInterval}=__nccwpck_require__(92332);const{Collection:Collection}=__nccwpck_require__(38861);const BaseClient=__nccwpck_require__(7149);const ActionsManager=__nccwpck_require__(17057);const ClientVoiceManager=__nccwpck_require__(84806);const WebSocketManager=__nccwpck_require__(13741);const{Error:Error,TypeError:TypeError,RangeError:RangeError}=__nccwpck_require__(94436);const BaseGuildEmojiManager=__nccwpck_require__(50701);const ChannelManager=__nccwpck_require__(13552);const GuildManager=__nccwpck_require__(91342);const UserManager=__nccwpck_require__(72672);const ShardClientUtil=__nccwpck_require__(79320);const ClientPresence=__nccwpck_require__(78282);const GuildPreview=__nccwpck_require__(11553);const GuildTemplate=__nccwpck_require__(20999);const Invite=__nccwpck_require__(93979);const{Sticker:Sticker}=__nccwpck_require__(27149);const StickerPack=__nccwpck_require__(96958);const VoiceRegion=__nccwpck_require__(87193);const Webhook=__nccwpck_require__(95600);const Widget=__nccwpck_require__(24528);const{Events:Events,InviteScopes:InviteScopes,Status:Status}=__nccwpck_require__(98422);const DataResolver=__nccwpck_require__(73642);const Intents=__nccwpck_require__(9453);const Options=__nccwpck_require__(71008);const Permissions=__nccwpck_require__(97234);const Sweepers=__nccwpck_require__(13813);class Client extends BaseClient{constructor(e){super(e);const t=__nccwpck_require__(24086).workerData??process.env;const i=Options.createDefault();if(this.options.shards===i.shards){if("SHARDS"in t){this.options.shards=JSON.parse(t.SHARDS)}}if(this.options.shardCount===i.shardCount){if("SHARD_COUNT"in t){this.options.shardCount=Number(t.SHARD_COUNT)}else if(Array.isArray(this.options.shards)){this.options.shardCount=this.options.shards.length}}const s=typeof this.options.shards;if(s==="undefined"&&typeof this.options.shardCount==="number"){this.options.shards=Array.from({length:this.options.shardCount},((e,t)=>t))}if(s==="number")this.options.shards=[this.options.shards];if(Array.isArray(this.options.shards)){this.options.shards=[...new Set(this.options.shards.filter((e=>!isNaN(e)&&e>=0&&e<Infinity&&e===(e|0))))]}this._validateOptions();this._cleanups=new Set;this._finalizers=new FinalizationRegistry(this._finalize.bind(this));this.ws=new WebSocketManager(this);this.actions=new ActionsManager(this);this.voice=new ClientVoiceManager(this);this.shard=process.env.SHARDING_MANAGER?ShardClientUtil.singleton(this,process.env.SHARDING_MANAGER_MODE):null;this.users=new UserManager(this);this.guilds=new GuildManager(this);this.channels=new ChannelManager(this);this.sweepers=new Sweepers(this,this.options.sweepers);this.presence=new ClientPresence(this,this.options.presence);Object.defineProperty(this,"token",{writable:true});if(!this.token&&"DISCORD_TOKEN"in process.env){this.token=process.env.DISCORD_TOKEN}else{this.token=null}this.user=null;this.application=null;this.readyAt=null;if(this.options.messageSweepInterval>0){process.emitWarning("The message sweeping client options are deprecated, use the global sweepers instead.","DeprecationWarning");this.sweepMessageInterval=setInterval(this.sweepMessages.bind(this),this.options.messageSweepInterval*1e3).unref()}}get emojis(){const e=new BaseGuildEmojiManager(this);for(const t of this.guilds.cache.values()){if(t.available)for(const i of t.emojis.cache.values())e.cache.set(i.id,i)}return e}get readyTimestamp(){return this.readyAt?.getTime()??null}get uptime(){return this.readyAt?Date.now()-this.readyAt:null}async login(e=this.token){if(!e||typeof e!=="string")throw new Error("TOKEN_INVALID");this.token=e=e.replace(/^(Bot|Bearer)\s*/i,"");this.emit(Events.DEBUG,`Provided token: ${e.split(".").map(((e,t)=>t>1?e.replace(/./g,"*"):e)).join(".")}`);if(this.options.presence){this.options.ws.presence=this.presence._parse(this.options.presence)}this.emit(Events.DEBUG,"Preparing to connect to the gateway...");try{await this.ws.connect();return this.token}catch(e){this.destroy();throw e}}isReady(){return this.ws.status===Status.READY}destroy(){super.destroy();for(const e of this._cleanups)e();this._cleanups.clear();if(this.sweepMessageInterval)clearInterval(this.sweepMessageInterval);this.sweepers.destroy();this.ws.destroy();this.token=null}async fetchInvite(e,t){const i=DataResolver.resolveInviteCode(e);const s=await this.api.invites(i).get({query:{with_counts:true,with_expiration:true,guild_scheduled_event_id:t?.guildScheduledEventId}});return new Invite(this,s)}async fetchGuildTemplate(e){const t=DataResolver.resolveGuildTemplateCode(e);const i=await this.api.guilds.templates(t).get();return new GuildTemplate(this,i)}async fetchWebhook(e,t){const i=await this.api.webhooks(e,t).get();return new Webhook(this,{token:t,...i})}async fetchVoiceRegions(){const e=await this.api.voice.regions.get();const t=new Collection;for(const i of e)t.set(i.id,new VoiceRegion(i));return t}async fetchSticker(e){const t=await this.api.stickers(e).get();return new Sticker(this,t)}async fetchPremiumStickerPacks(){const e=await this.api("sticker-packs").get();return new Collection(e.sticker_packs.map((e=>[e.id,new StickerPack(this,e)])))}_finalize({cleanup:e,message:t,name:i}){try{e();this._cleanups.delete(e);if(t){this.emit(Events.DEBUG,t)}}catch{this.emit(Events.DEBUG,`Garbage collection failed on ${i??"an unknown item"}.`)}}sweepMessages(e=this.options.messageCacheLifetime){if(typeof e!=="number"||isNaN(e)){throw new TypeError("INVALID_TYPE","lifetime","number")}if(e<=0){this.emit(Events.DEBUG,"Didn't sweep messages - lifetime is unlimited");return-1}const t=this.sweepers.sweepMessages(Sweepers.outdatedMessageSweepFilter(e)());this.emit(Events.DEBUG,`Swept ${t} messages older than ${e} seconds`);return t}async fetchGuildPreview(e){const t=this.guilds.resolveId(e);if(!t)throw new TypeError("INVALID_TYPE","guild","GuildResolvable");const i=await this.api.guilds(t).preview.get();return new GuildPreview(this,i)}async fetchGuildWidget(e){const t=this.guilds.resolveId(e);if(!t)throw new TypeError("INVALID_TYPE","guild","GuildResolvable");const i=await this.api.guilds(t,"widget.json").get();return new Widget(this,i)}generateInvite(e={}){if(typeof e!=="object")throw new TypeError("INVALID_TYPE","options","object",true);if(!this.application)throw new Error("CLIENT_NOT_READY","generate an invite link");const t=new URLSearchParams({client_id:this.application.id});const{scopes:i}=e;if(typeof i==="undefined"){throw new TypeError("INVITE_MISSING_SCOPES")}if(!Array.isArray(i)){throw new TypeError("INVALID_TYPE","scopes","Array of Invite Scopes",true)}if(!i.some((e=>["bot","applications.commands"].includes(e)))){throw new TypeError("INVITE_MISSING_SCOPES")}const s=i.find((e=>!InviteScopes.includes(e)));if(s){throw new TypeError("INVALID_ELEMENT","Array","scopes",s)}t.set("scope",i.join(" "));if(e.permissions){const i=Permissions.resolve(e.permissions);if(i)t.set("permissions",i)}if(e.disableGuildSelect){t.set("disable_guild_select",true)}if(e.guild){const i=this.guilds.resolveId(e.guild);if(!i)throw new TypeError("INVALID_TYPE","options.guild","GuildResolvable");t.set("guild_id",i)}return`${this.options.http.api}${this.api.oauth2.authorize}?${t}`}toJSON(){return super.toJSON({readyAt:false})}_eval(script){return eval(script)}_validateOptions(e=this.options){if(typeof e.intents==="undefined"){throw new TypeError("CLIENT_MISSING_INTENTS")}else{e.intents=Intents.resolve(e.intents)}if(typeof e.shardCount!=="number"||isNaN(e.shardCount)||e.shardCount<1){throw new TypeError("CLIENT_INVALID_OPTION","shardCount","a number greater than or equal to 1")}if(e.shards&&!(e.shards==="auto"||Array.isArray(e.shards))){throw new TypeError("CLIENT_INVALID_OPTION","shards","'auto', a number or array of numbers")}if(e.shards&&!e.shards.length)throw new RangeError("CLIENT_INVALID_PROVIDED_SHARDS");if(typeof e.makeCache!=="function"){throw new TypeError("CLIENT_INVALID_OPTION","makeCache","a function")}if(typeof e.messageCacheLifetime!=="number"||isNaN(e.messageCacheLifetime)){throw new TypeError("CLIENT_INVALID_OPTION","The messageCacheLifetime","a number")}if(typeof e.messageSweepInterval!=="number"||isNaN(e.messageSweepInterval)){throw new TypeError("CLIENT_INVALID_OPTION","messageSweepInterval","a number")}if(typeof e.sweepers!=="object"||e.sweepers===null){throw new TypeError("CLIENT_INVALID_OPTION","sweepers","an object")}if(typeof e.invalidRequestWarningInterval!=="number"||isNaN(e.invalidRequestWarningInterval)){throw new TypeError("CLIENT_INVALID_OPTION","invalidRequestWarningInterval","a number")}if(!Array.isArray(e.partials)){throw new TypeError("CLIENT_INVALID_OPTION","partials","an Array")}if(typeof e.waitGuildTimeout!=="number"||isNaN(e.waitGuildTimeout)){throw new TypeError("CLIENT_INVALID_OPTION","waitGuildTimeout","a number")}if(typeof e.restWsBridgeTimeout!=="number"||isNaN(e.restWsBridgeTimeout)){throw new TypeError("CLIENT_INVALID_OPTION","restWsBridgeTimeout","a number")}if(typeof e.restRequestTimeout!=="number"||isNaN(e.restRequestTimeout)){throw new TypeError("CLIENT_INVALID_OPTION","restRequestTimeout","a number")}if(typeof e.restGlobalRateLimit!=="number"||isNaN(e.restGlobalRateLimit)){throw new TypeError("CLIENT_INVALID_OPTION","restGlobalRateLimit","a number")}if(typeof e.restSweepInterval!=="number"||isNaN(e.restSweepInterval)){throw new TypeError("CLIENT_INVALID_OPTION","restSweepInterval","a number")}if(typeof e.retryLimit!=="number"||isNaN(e.retryLimit)){throw new TypeError("CLIENT_INVALID_OPTION","retryLimit","a number")}if(typeof e.failIfNotExists!=="boolean"){throw new TypeError("CLIENT_INVALID_OPTION","failIfNotExists","a boolean")}if(!Array.isArray(e.userAgentSuffix)){throw new TypeError("CLIENT_INVALID_OPTION","userAgentSuffix","an array of strings")}if(typeof e.rejectOnRateLimit!=="undefined"&&!(typeof e.rejectOnRateLimit==="function"||Array.isArray(e.rejectOnRateLimit))){throw new TypeError("CLIENT_INVALID_OPTION","rejectOnRateLimit","an array or a function")}}}module.exports=Client},12333:(e,t,i)=>{"use strict";const s=i(7149);const{Error:r}=i(94436);const o=i(95600);class WebhookClient extends s{constructor(e,t){super(t);Object.defineProperty(this,"client",{value:this});let{id:i,token:s}=e;if("url"in e){const t=e.url.match(/^https?:\/\/(?:canary|ptb)?\.?discord\.com\/api\/webhooks(?:\/v[0-9]\d*)?\/([^\/]+)\/([^\/]+)/i);if(!t||t.length<=1)throw new r("WEBHOOK_URL_INVALID");[,i,s]=t}this.id=i;Object.defineProperty(this,"token",{value:s,writable:true,configurable:true})}send(){}sendSlackMessage(){}fetchMessage(){}edit(){}editMessage(){}delete(){}deleteMessage(){}get createdTimestamp(){}get createdAt(){}get url(){}}o.applyToClass(WebhookClient);e.exports=WebhookClient},88927:(e,t,i)=>{"use strict";const{PartialTypes:s}=i(98422);class GenericAction{constructor(e){this.client=e}handle(e){return e}getPayload(e,t,i,s,r){const o=t.cache.get(i);if(!o&&this.client.options.partials.includes(s)){return t._add(e,r)}return o}getChannel(e){const t=e.channel_id??e.id;return e.channel??this.getPayload({id:t,guild_id:e.guild_id,recipients:[e.author??e.user??{id:e.user_id}]},this.client.channels,t,s.CHANNEL)}getMessage(e,t,i){const r=e.message_id??e.id;return e.message??this.getPayload({id:r,channel_id:t.id,guild_id:e.guild_id??t.guild?.id},t.messages,r,s.MESSAGE,i)}getReaction(e,t,i){const r=e.emoji.id??decodeURIComponent(e.emoji.name);return this.getPayload({emoji:e.emoji,count:t.partial?null:0,me:i?.id===this.client.user.id},t.reactions,r,s.REACTION)}getMember(e,t){return this.getPayload(e,t.members,e.user.id,s.GUILD_MEMBER)}getUser(e){const t=e.user_id;return e.user??this.getPayload({id:t},this.client.users,t,s.USER)}getUserFromMember(e){if(e.guild_id&&e.member?.user){const t=this.client.guilds.cache.get(e.guild_id);if(t){return t.members._add(e.member).user}else{return this.client.users._add(e.member.user)}}return this.getUser(e)}getScheduledEvent(e,t){const i=e.guild_scheduled_event_id??e.id;return this.getPayload({id:i,guild_id:e.guild_id??t.id},t.scheduledEvents,i,s.GUILD_SCHEDULED_EVENT)}}e.exports=GenericAction},17057:(e,t,i)=>{"use strict";class ActionsManager{constructor(e){this.client=e;this.register(i(27517));this.register(i(24297));this.register(i(52464));this.register(i(75567));this.register(i(61274));this.register(i(64839));this.register(i(92344));this.register(i(95514));this.register(i(71698));this.register(i(38761));this.register(i(27173));this.register(i(22102));this.register(i(18162));this.register(i(67744));this.register(i(25930));this.register(i(77181));this.register(i(60359));this.register(i(26559));this.register(i(66697));this.register(i(57925));this.register(i(27317));this.register(i(32344));this.register(i(23435));this.register(i(94518));this.register(i(50017));this.register(i(81929));this.register(i(39265));this.register(i(40008));this.register(i(21135));this.register(i(99074));this.register(i(86811));this.register(i(98633));this.register(i(32702));this.register(i(69860));this.register(i(89812));this.register(i(38366));this.register(i(73623));this.register(i(69067));this.register(i(93180));this.register(i(15857));this.register(i(834));this.register(i(81104));this.register(i(49788));this.register(i(73274));this.register(i(56626));this.register(i(5538));this.register(i(59545));this.register(i(4343));this.register(i(12911));this.register(i(4987));this.register(i(6658));this.register(i(81789))}register(e){this[e.name.replace(/Action$/,"")]=new e(this.client)}}e.exports=ActionsManager},27517:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class ChannelCreateAction extends s{handle(e){const t=this.client;const i=t.channels.cache.has(e.id);const s=t.channels._add(e);if(!i&&s){t.emit(r.CHANNEL_CREATE,s)}return{channel:s}}}e.exports=ChannelCreateAction},24297:(e,t,i)=>{"use strict";const s=i(88927);const{deletedChannels:r}=i(26481);const o=i(35937);const{deletedMessages:l}=i(4975);const{Events:c}=i(98422);class ChannelDeleteAction extends s{constructor(e){super(e);this.deleted=new Map}handle(e){const t=this.client;const i=t.channels.cache.get(e.id);if(i){t.channels._remove(i.id);r.add(i);if(i.messages&&!(i instanceof o)){for(const e of i.messages.cache.values()){l.add(e)}}t.emit(c.CHANNEL_DELETE,i)}return{channel:i}}}e.exports=ChannelDeleteAction},52464:(e,t,i)=>{"use strict";const s=i(88927);const{Channel:r}=i(26481);const{ChannelTypes:o}=i(98422);class ChannelUpdateAction extends s{handle(e){const t=this.client;let i=t.channels.cache.get(e.id);if(i){const t=i._update(e);if(o[i.type]!==e.type){const t=r.create(this.client,e,i.guild);for(const[e,s]of i.messages.cache)t.messages.cache.set(e,s);i=t;this.client.channels.cache.set(i.id,i)}return{old:t,updated:i}}else{t.channels._add(e)}return{}}}e.exports=ChannelUpdateAction},75567:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildBanAdd extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i)t.emit(r.GUILD_BAN_ADD,i.bans._add(e))}}e.exports=GuildBanAdd},61274:(e,t,i)=>{"use strict";const s=i(88927);const r=i(99281);const{Events:o}=i(98422);class GuildBanRemove extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i){const s=i.bans.cache.get(e.user.id)??new r(t,e,i);i.bans.cache.delete(s.user.id);t.emit(o.GUILD_BAN_REMOVE,s)}}}e.exports=GuildBanRemove},64839:(e,t,i)=>{"use strict";const s=i(88927);class GuildChannelsPositionUpdate extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i){for(const t of e.channels){const e=i.channels.cache.get(t.id);if(e)e.rawPosition=t.position}}return{guild:i}}}e.exports=GuildChannelsPositionUpdate},92344:(e,t,i)=>{"use strict";const{setTimeout:s}=i(92332);const r=i(88927);const{deletedGuilds:o}=i(87809);const{Events:l}=i(98422);class GuildDeleteAction extends r{constructor(e){super(e);this.deleted=new Map}handle(e){const t=this.client;let i=t.guilds.cache.get(e.id);if(i){if(e.unavailable){i.available=false;t.emit(l.GUILD_UNAVAILABLE,i);return{guild:null}}for(const e of i.channels.cache.values())this.client.channels._remove(e.id);t.voice.adapters.get(e.id)?.destroy();t.guilds.cache.delete(i.id);o.add(i);t.emit(l.GUILD_DELETE,i);this.deleted.set(i.id,i);this.scheduleForDeletion(i.id)}else{i=this.deleted.get(e.id)??null}return{guild:i}}scheduleForDeletion(e){s((()=>this.deleted.delete(e)),this.client.options.restWsBridgeTimeout).unref()}}e.exports=GuildDeleteAction},95514:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildEmojiCreateAction extends s{handle(e,t){const i=e.emojis.cache.has(t.id);const s=e.emojis._add(t);if(!i)this.client.emit(r.GUILD_EMOJI_CREATE,s);return{emoji:s}}}e.exports=GuildEmojiCreateAction},71698:(e,t,i)=>{"use strict";const s=i(88927);const{deletedEmojis:r}=i(63855);const{Events:o}=i(98422);class GuildEmojiDeleteAction extends s{handle(e){e.guild.emojis.cache.delete(e.id);r.add(e);this.client.emit(o.GUILD_EMOJI_DELETE,e);return{emoji:e}}}e.exports=GuildEmojiDeleteAction},38761:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildEmojiUpdateAction extends s{handle(e,t){const i=e._update(t);this.client.emit(r.GUILD_EMOJI_UPDATE,i,e);return{emoji:e}}}e.exports=GuildEmojiUpdateAction},27173:(e,t,i)=>{"use strict";const s=i(88927);class GuildEmojisUpdateAction extends s{handle(e){const t=this.client.guilds.cache.get(e.guild_id);if(!t?.emojis)return;const i=new Map(t.emojis.cache);for(const s of e.emojis){const e=t.emojis.cache.get(s.id);if(e){i.delete(s.id);if(!e.equals(s)){this.client.actions.GuildEmojiUpdate.handle(e,s)}}else{this.client.actions.GuildEmojiCreate.handle(t,s)}}for(const e of i.values()){this.client.actions.GuildEmojiDelete.handle(e)}}}e.exports=GuildEmojisUpdateAction},22102:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildIntegrationsUpdate extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i)t.emit(r.GUILD_INTEGRATIONS_UPDATE,i)}}e.exports=GuildIntegrationsUpdate},18162:(e,t,i)=>{"use strict";const s=i(88927);const{deletedGuildMembers:r}=i(27081);const{Events:o,Status:l}=i(98422);class GuildMemberRemoveAction extends s{handle(e,t){const i=this.client;const s=i.guilds.cache.get(e.guild_id);let c=null;if(s){c=this.getMember({user:e.user},s);s.memberCount--;if(c){r.add(c);s.members.cache.delete(c.id);if(t.status===l.READY)i.emit(o.GUILD_MEMBER_REMOVE,c)}s.voiceStates.cache.delete(e.user.id)}return{guild:s,member:c}}}e.exports=GuildMemberRemoveAction},67744:(e,t,i)=>{"use strict";const s=i(88927);const{Status:r,Events:o}=i(98422);class GuildMemberUpdateAction extends s{handle(e,t){const{client:i}=this;if(e.user.username){const t=i.users.cache.get(e.user.id);if(!t){i.users._add(e.user)}else if(!t._equals(e.user)){i.actions.UserUpdate.handle(e.user)}}const s=i.guilds.cache.get(e.guild_id);if(s){const l=this.getMember({user:e.user},s);if(l){const s=l._update(e);if(t.status===r.READY&&!l.equals(s))i.emit(o.GUILD_MEMBER_UPDATE,s,l)}else{const t=s.members._add(e);this.client.emit(o.GUILD_MEMBER_AVAILABLE,t)}}}}e.exports=GuildMemberUpdateAction},25930:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildRoleCreate extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);let s;if(i){const o=i.roles.cache.has(e.role.id);s=i.roles._add(e.role);if(!o)t.emit(r.GUILD_ROLE_CREATE,s)}return{role:s}}}e.exports=GuildRoleCreate},77181:(e,t,i)=>{"use strict";const s=i(88927);const{deletedRoles:r}=i(20339);const{Events:o}=i(98422);class GuildRoleDeleteAction extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);let s;if(i){s=i.roles.cache.get(e.role_id);if(s){i.roles.cache.delete(e.role_id);r.add(s);t.emit(o.GUILD_ROLE_DELETE,s)}}return{role:s}}}e.exports=GuildRoleDeleteAction},60359:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildRoleUpdateAction extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i){let s=null;const o=i.roles.cache.get(e.role.id);if(o){s=o._update(e.role);t.emit(r.GUILD_ROLE_UPDATE,s,o)}return{old:s,updated:o}}return{old:null,updated:null}}}e.exports=GuildRoleUpdateAction},26559:(e,t,i)=>{"use strict";const s=i(88927);class GuildRolesPositionUpdate extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i){for(const t of e.roles){const e=i.roles.cache.get(t.id);if(e)e.rawPosition=t.position}}return{guild:i}}}e.exports=GuildRolesPositionUpdate},66697:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildScheduledEventCreateAction extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i){const s=i.scheduledEvents._add(e);t.emit(r.GUILD_SCHEDULED_EVENT_CREATE,s);return{guildScheduledEvent:s}}return{}}}e.exports=GuildScheduledEventCreateAction},57925:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildScheduledEventDeleteAction extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i){const s=this.getScheduledEvent(e,i);if(s){i.scheduledEvents.cache.delete(s.id);t.emit(r.GUILD_SCHEDULED_EVENT_DELETE,s);return{guildScheduledEvent:s}}}return{}}}e.exports=GuildScheduledEventDeleteAction},27317:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildScheduledEventUpdateAction extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i){const s=i.scheduledEvents.cache.get(e.id)?._clone()??null;const o=i.scheduledEvents._add(e);t.emit(r.GUILD_SCHEDULED_EVENT_UPDATE,s,o);return{oldGuildScheduledEvent:s,newGuildScheduledEvent:o}}return{}}}e.exports=GuildScheduledEventUpdateAction},32344:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildScheduledEventUserAddAction extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i){const s=this.getScheduledEvent(e,i);const o=this.getUser(e);if(s&&o){t.emit(r.GUILD_SCHEDULED_EVENT_USER_ADD,s,o);return{guildScheduledEvent:s,user:o}}}return{}}}e.exports=GuildScheduledEventUserAddAction},23435:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildScheduledEventUserRemoveAction extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i){const s=this.getScheduledEvent(e,i);const o=this.getUser(e);if(s&&o){t.emit(r.GUILD_SCHEDULED_EVENT_USER_REMOVE,s,o);return{guildScheduledEvent:s,user:o}}}return{}}}e.exports=GuildScheduledEventUserRemoveAction},94518:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildStickerCreateAction extends s{handle(e,t){const i=e.stickers.cache.has(t.id);const s=e.stickers._add(t);if(!i)this.client.emit(r.GUILD_STICKER_CREATE,s);return{sticker:s}}}e.exports=GuildStickerCreateAction},50017:(e,t,i)=>{"use strict";const s=i(88927);const{deletedStickers:r}=i(27149);const{Events:o}=i(98422);class GuildStickerDeleteAction extends s{handle(e){e.guild.stickers.cache.delete(e.id);r.add(e);this.client.emit(o.GUILD_STICKER_DELETE,e);return{sticker:e}}}e.exports=GuildStickerDeleteAction},81929:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildStickerUpdateAction extends s{handle(e,t){const i=e._update(t);this.client.emit(r.GUILD_STICKER_UPDATE,i,e);return{sticker:e}}}e.exports=GuildStickerUpdateAction},39265:(e,t,i)=>{"use strict";const s=i(88927);class GuildStickersUpdateAction extends s{handle(e){const t=this.client.guilds.cache.get(e.guild_id);if(!t?.stickers)return;const i=new Map(t.stickers.cache);for(const s of e.stickers){const e=t.stickers.cache.get(s.id);if(e){i.delete(s.id);if(!e.equals(s)){this.client.actions.GuildStickerUpdate.handle(e,s)}}else{this.client.actions.GuildStickerCreate.handle(t,s)}}for(const e of i.values()){this.client.actions.GuildStickerDelete.handle(e)}}}e.exports=GuildStickersUpdateAction},40008:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class GuildUpdateAction extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.id);if(i){const s=i._update(e);t.emit(r.GUILD_UPDATE,s,i);return{old:s,updated:i}}return{old:null,updated:null}}}e.exports=GuildUpdateAction},21135:(e,t,i)=>{"use strict";const s=i(97742);const r=i(88927);const o=i(25286);const l=i(73288);const c=i(49187);const u=i(65107);const m=i(55294);const g=i(30796);const{Events:v,InteractionTypes:_,MessageComponentTypes:T,ApplicationCommandTypes:x}=i(98422);let S=false;class InteractionCreateAction extends r{handle(e){const t=this.client;this.getChannel(e);let i;switch(e.type){case _.APPLICATION_COMMAND:switch(e.data.type){case x.CHAT_INPUT:i=c;break;case x.USER:i=g;break;case x.MESSAGE:i=u;break;default:t.emit(v.DEBUG,`[INTERACTION] Received application command interaction with unknown type: ${e.data.type}`);return}break;case _.MESSAGE_COMPONENT:switch(e.data.component_type){case T.BUTTON:i=l;break;case T.SELECT_MENU:i=m;break;default:t.emit(v.DEBUG,`[INTERACTION] Received component interaction with unknown type: ${e.data.component_type}`);return}break;case _.APPLICATION_COMMAND_AUTOCOMPLETE:i=o;break;default:t.emit(v.DEBUG,`[INTERACTION] Received interaction with unknown type: ${e.type}`);return}const r=new i(t,e);t.emit(v.INTERACTION_CREATE,r);if(t.emit("interaction",r)&&!S){S=true;s.emitWarning("The interaction event is deprecated. Use interactionCreate instead","DeprecationWarning")}}}e.exports=InteractionCreateAction},99074:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class InviteCreateAction extends s{handle(e){const t=this.client;const i=t.channels.cache.get(e.channel_id);const s=t.guilds.cache.get(e.guild_id);if(!i)return false;const o=Object.assign(e,{channel:i,guild:s});const l=s.invites._add(o);t.emit(r.INVITE_CREATE,l);return{invite:l}}}e.exports=InviteCreateAction},86811:(e,t,i)=>{"use strict";const s=i(88927);const r=i(93979);const{Events:o}=i(98422);class InviteDeleteAction extends s{handle(e){const t=this.client;const i=t.channels.cache.get(e.channel_id);const s=t.guilds.cache.get(e.guild_id);if(!i)return false;const l=Object.assign(e,{channel:i,guild:s});const c=new r(t,l);s.invites.cache.delete(c.code);t.emit(o.INVITE_DELETE,c);return{invite:c}}}e.exports=InviteDeleteAction},98633:(e,t,i)=>{"use strict";const s=i(97742);const r=i(88927);const{Events:o}=i(98422);let l=false;class MessageCreateAction extends r{handle(e){const t=this.client;const i=this.getChannel(e);if(i){if(!i.isText())return{};const r=i.messages.cache.get(e.id);if(r)return{message:r};const c=i.messages._add(e);i.lastMessageId=e.id;t.emit(o.MESSAGE_CREATE,c);if(t.emit("message",c)&&!l){l=true;s.emitWarning("The message event is deprecated. Use messageCreate instead","DeprecationWarning")}return{message:c}}return{}}}e.exports=MessageCreateAction},32702:(e,t,i)=>{"use strict";const s=i(88927);const{deletedMessages:r}=i(4975);const{Events:o}=i(98422);class MessageDeleteAction extends s{handle(e){const t=this.client;const i=this.getChannel(e);let s;if(i){if(!i.isText())return{};s=this.getMessage(e,i);if(s){i.messages.cache.delete(s.id);r.add(s);t.emit(o.MESSAGE_DELETE,s)}}return{message:s}}}e.exports=MessageDeleteAction},69860:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(88927);const{deletedMessages:o}=i(4975);const{Events:l}=i(98422);class MessageDeleteBulkAction extends r{handle(e){const t=this.client;const i=t.channels.cache.get(e.channel_id);if(i){if(!i.isText())return{};const r=e.ids;const c=new s;for(const t of r){const s=this.getMessage({id:t,guild_id:e.guild_id},i,false);if(s){o.add(s);c.set(s.id,s);i.messages.cache.delete(t)}}if(c.size>0)t.emit(l.MESSAGE_BULK_DELETE,c);return{messages:c}}return{}}}e.exports=MessageDeleteBulkAction},89812:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);const{PartialTypes:o}=i(98422);class MessageReactionAdd extends s{handle(e,t=false){if(!e.emoji)return false;const i=this.getUserFromMember(e);if(!i)return false;const s=this.getChannel(e);if(!s||!s.isText())return false;const l=this.getMessage(e,s);if(!l)return false;const c=this.client.options.partials.includes(o.REACTION);if(l.partial&&!c)return false;const u=l.reactions._add({emoji:e.emoji,count:l.partial?null:0,me:i.id===this.client.user.id});if(!u)return false;u._add(i);if(t)return{message:l,reaction:u,user:i};this.client.emit(r.MESSAGE_REACTION_ADD,u,i);return{message:l,reaction:u,user:i}}}e.exports=MessageReactionAdd},38366:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class MessageReactionRemove extends s{handle(e){if(!e.emoji)return false;const t=this.getUser(e);if(!t)return false;const i=this.getChannel(e);if(!i||!i.isText())return false;const s=this.getMessage(e,i);if(!s)return false;const o=this.getReaction(e,s,t);if(!o)return false;o._remove(t);this.client.emit(r.MESSAGE_REACTION_REMOVE,o,t);return{message:s,reaction:o,user:t}}}e.exports=MessageReactionRemove},73623:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class MessageReactionRemoveAll extends s{handle(e){const t=this.getChannel(e);if(!t||!t.isText())return false;const i=this.getMessage(e,t);if(!i)return false;const s=i.reactions.cache.clone();i.reactions.cache.clear();this.client.emit(r.MESSAGE_REACTION_REMOVE_ALL,i,s);return{message:i}}}e.exports=MessageReactionRemoveAll},69067:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class MessageReactionRemoveEmoji extends s{handle(e){const t=this.getChannel(e);if(!t||!t.isText())return false;const i=this.getMessage(e,t);if(!i)return false;const s=this.getReaction(e,i);if(!s)return false;if(!i.partial)i.reactions.cache.delete(s.emoji.id??s.emoji.name);this.client.emit(r.MESSAGE_REACTION_REMOVE_EMOJI,s);return{reaction:s}}}e.exports=MessageReactionRemoveEmoji},93180:(e,t,i)=>{"use strict";const s=i(88927);class MessageUpdateAction extends s{handle(e){const t=this.getChannel(e);if(t){if(!t.isText())return{};const{id:i,channel_id:s,guild_id:r,author:o,timestamp:l,type:c}=e;const u=this.getMessage({id:i,channel_id:s,guild_id:r,author:o,timestamp:l,type:c},t);if(u){const t=u._update(e);return{old:t,updated:u}}}return{}}}e.exports=MessageUpdateAction},15857:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class PresenceUpdateAction extends s{handle(e){let t=this.client.users.cache.get(e.user.id);if(!t&&e.user?.username)t=this.client.users._add(e.user);if(!t)return;if(e.user?.username){if(!t._equals(e.user))this.client.actions.UserUpdate.handle(e.user)}const i=this.client.guilds.cache.get(e.guild_id);if(!i)return;const s=i.presences.cache.get(t.id)?._clone()??null;let o=i.members.cache.get(t.id);if(!o&&e.status!=="offline"){o=i.members._add({user:t,deaf:false,mute:false});this.client.emit(r.GUILD_MEMBER_AVAILABLE,o)}const l=i.presences._add(Object.assign(e,{guild:i}));if(this.client.listenerCount(r.PRESENCE_UPDATE)&&!l.equals(s)){this.client.emit(r.PRESENCE_UPDATE,s,l)}}}e.exports=PresenceUpdateAction},834:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class StageInstanceCreateAction extends s{handle(e){const t=this.client;const i=this.getChannel(e);if(i){const s=i.guild.stageInstances._add(e);t.emit(r.STAGE_INSTANCE_CREATE,s);return{stageInstance:s}}return{}}}e.exports=StageInstanceCreateAction},81104:(e,t,i)=>{"use strict";const s=i(88927);const{deletedStageInstances:r}=i(9162);const{Events:o}=i(98422);class StageInstanceDeleteAction extends s{handle(e){const t=this.client;const i=this.getChannel(e);if(i){const s=i.guild.stageInstances._add(e);if(s){i.guild.stageInstances.cache.delete(s.id);r.add(s);t.emit(o.STAGE_INSTANCE_DELETE,s);return{stageInstance:s}}}return{}}}e.exports=StageInstanceDeleteAction},49788:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class StageInstanceUpdateAction extends s{handle(e){const t=this.client;const i=this.getChannel(e);if(i){const s=i.guild.stageInstances.cache.get(e.id)?._clone()??null;const o=i.guild.stageInstances._add(e);t.emit(r.STAGE_INSTANCE_UPDATE,s,o);return{oldStageInstance:s,newStageInstance:o}}return{}}}e.exports=StageInstanceUpdateAction},73274:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class ThreadCreateAction extends s{handle(e){const t=this.client;const i=t.channels.cache.has(e.id);const s=t.channels._add(e);if(!i&&s){t.emit(r.THREAD_CREATE,s)}return{thread:s}}}e.exports=ThreadCreateAction},56626:(e,t,i)=>{"use strict";const s=i(88927);const{deletedChannels:r}=i(26481);const{deletedMessages:o}=i(4975);const{Events:l}=i(98422);class ThreadDeleteAction extends s{handle(e){const t=this.client;const i=t.channels.cache.get(e.id);if(i){t.channels._remove(i.id);r.add(i);for(const e of i.messages.cache.values()){o.add(e)}t.emit(l.THREAD_DELETE,i)}return{thread:i}}}e.exports=ThreadDeleteAction},5538:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(88927);const{Events:o}=i(98422);class ThreadListSyncAction extends r{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(!i)return{};if(e.channel_ids){for(const i of e.channel_ids){const e=t.channels.resolve(i);if(e)this.removeStale(e)}}else{for(const e of i.channels.cache.values()){this.removeStale(e)}}const r=e.threads.reduce(((e,i)=>{const s=t.channels._add(i);return e.set(s.id,s)}),new s);for(const i of Object.values(e.members)){const e=t.channels.cache.get(i.id);if(e){e.members._add(i)}}t.emit(o.THREAD_LIST_SYNC,r);return{syncedThreads:r}}removeStale(e){e.threads?.cache.forEach((e=>{if(!e.archived){this.client.channels._remove(e.id)}}))}}e.exports=ThreadListSyncAction},59545:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class ThreadMemberUpdateAction extends s{handle(e){const t=this.client;const i=t.channels.cache.get(e.id);if(i){const s=i.members.cache.get(e.user_id);if(!s){const t=i.members._add(e);return{newMember:t}}const o=s._update(e);t.emit(r.THREAD_MEMBER_UPDATE,o,s)}return{}}}e.exports=ThreadMemberUpdateAction},4343:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class ThreadMembersUpdateAction extends s{handle(e){const t=this.client;const i=t.channels.cache.get(e.id);if(i){const s=i.members.cache.clone();i.memberCount=e.member_count;e.added_members?.forEach((e=>{i.members._add(e)}));e.removed_member_ids?.forEach((e=>{i.members.cache.delete(e)}));t.emit(r.THREAD_MEMBERS_UPDATE,s,i.members.cache)}return{}}}e.exports=ThreadMembersUpdateAction},12911:(e,t,i)=>{"use strict";const s=i(88927);const r=i(93985);const{Events:o}=i(98422);class TypingStart extends s{handle(e){const t=this.getChannel(e);if(!t)return;if(!t.isText()){this.client.emit(o.WARN,`Discord sent a typing packet to a ${t.type} channel ${t.id}`);return}const i=this.getUserFromMember(e);if(i){this.client.emit(o.TYPING_START,new r(t,i,e))}}}e.exports=TypingStart},4987:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class UserUpdateAction extends s{handle(e){const t=this.client;const i=e.id===t.user.id?t.user:t.users.cache.get(e.id);const s=i._update(e);if(!s.equals(i)){t.emit(r.USER_UPDATE,s,i);return{old:s,updated:i}}return{old:null,updated:null}}}e.exports=UserUpdateAction},6658:(e,t,i)=>{"use strict";const s=i(88927);const r=i(79721);const{Events:o}=i(98422);class VoiceStateUpdate extends s{handle(e){const t=this.client;const i=t.guilds.cache.get(e.guild_id);if(i){const s=i.voiceStates.cache.get(e.user_id)?._clone()??new r(i,{user_id:e.user_id});const l=i.voiceStates._add(e);let c=i.members.cache.get(e.user_id);if(c&&e.member){c._patch(e.member)}else if(e.member?.user&&e.member.joined_at){c=i.members._add(e.member)}if(c?.user.id===t.user.id){t.emit("debug",`[VOICE] received voice state update: ${JSON.stringify(e)}`);t.voice.onVoiceStateUpdate(e)}t.emit(o.VOICE_STATE_UPDATE,s,l)}}}e.exports=VoiceStateUpdate},81789:(e,t,i)=>{"use strict";const s=i(88927);const{Events:r}=i(98422);class WebhooksUpdate extends s{handle(e){const t=this.client;const i=t.channels.cache.get(e.channel_id);if(i)t.emit(r.WEBHOOKS_UPDATE,i)}}e.exports=WebhooksUpdate},84806:(e,t,i)=>{"use strict";const{Events:s}=i(98422);class ClientVoiceManager{constructor(e){Object.defineProperty(this,"client",{value:e});this.adapters=new Map;e.on(s.SHARD_DISCONNECT,((t,i)=>{for(const[t,s]of this.adapters.entries()){if(e.guilds.cache.get(t)?.shardId===i){s.destroy()}}}))}onVoiceServer(e){this.adapters.get(e.guild_id)?.onVoiceServerUpdate(e)}onVoiceStateUpdate(e){if(e.guild_id&&e.session_id&&e.user_id===this.client.user?.id){this.adapters.get(e.guild_id)?.onVoiceStateUpdate(e)}}}e.exports=ClientVoiceManager},13741:(e,t,i)=>{"use strict";const s=i(15673);const{setImmediate:r}=i(92332);const{setTimeout:o}=i(99397);const{Collection:l}=i(38861);const{RPCErrorCodes:c}=i(69787);const u=i(98467);const m=i(46861);const{Error:g}=i(94436);const{Events:v,ShardEvents:_,Status:T,WSCodes:x,WSEvents:S}=i(98422);const A=[S.READY,S.RESUMED,S.GUILD_CREATE,S.GUILD_DELETE,S.GUILD_MEMBERS_CHUNK,S.GUILD_MEMBER_ADD,S.GUILD_MEMBER_REMOVE];const I=Object.keys(x).slice(1).map(Number);const N=[c.UnknownError,c.InvalidPermissions,c.InvalidClientId];class WebSocketManager extends s{constructor(e){super();Object.defineProperty(this,"client",{value:e});this.gateway=null;this.totalShards=this.client.options.shards.length;this.shards=new l;Object.defineProperty(this,"shardQueue",{value:new Set,writable:true});Object.defineProperty(this,"packetQueue",{value:[]});this.status=T.IDLE;this.destroyed=false;this.reconnecting=false}get ping(){const e=this.shards.reduce(((e,t)=>e+t.ping),0);return e/this.shards.size}debug(e,t){this.client.emit(v.DEBUG,`[WS => ${t?`Shard ${t.id}`:"Manager"}] ${e}`)}async connect(){const e=new g(x[4004]);const{url:t,shards:i,session_start_limit:s}=await this.client.api.gateway.bot.get().catch((t=>{throw t.httpStatus===401?e:t}));const{total:r,remaining:o}=s;this.debug(`Fetched Gateway Information\n    URL: ${t}\n    Recommended Shards: ${i}`);this.debug(`Session Limit Information\n    Total: ${r}\n    Remaining: ${o}`);this.gateway=`${t}/`;let{shards:l}=this.client.options;if(l==="auto"){this.debug(`Using the recommended shard count provided by Discord: ${i}`);this.totalShards=this.client.options.shardCount=i;l=this.client.options.shards=Array.from({length:i},((e,t)=>t))}this.totalShards=l.length;this.debug(`Spawning shards: ${l.join(", ")}`);this.shardQueue=new Set(l.map((e=>new u(this,e))));return this.createShards()}async createShards(){if(!this.shardQueue.size)return false;const[e]=this.shardQueue;this.shardQueue.delete(e);if(!e.eventsAttached){e.on(_.ALL_READY,(t=>{this.client.emit(v.SHARD_READY,e.id,t);if(!this.shardQueue.size)this.reconnecting=false;this.checkShardsReady()}));e.on(_.CLOSE,(t=>{if(t.code===1e3?this.destroyed:I.includes(t.code)){this.client.emit(v.SHARD_DISCONNECT,t,e.id);this.debug(x[t.code],e);return}if(N.includes(t.code)){e.sessionId=null}this.client.emit(v.SHARD_RECONNECTING,e.id);this.shardQueue.add(e);if(e.sessionId){this.debug(`Session id is present, attempting an immediate reconnect...`,e);this.reconnect()}else{e.destroy({reset:true,emit:false,log:false});this.reconnect()}}));e.on(_.INVALID_SESSION,(()=>{this.client.emit(v.SHARD_RECONNECTING,e.id)}));e.on(_.DESTROYED,(()=>{this.debug("Shard was destroyed but no WebSocket connection was present! Reconnecting...",e);this.client.emit(v.SHARD_RECONNECTING,e.id);this.shardQueue.add(e);this.reconnect()}));e.eventsAttached=true}this.shards.set(e.id,e);try{await e.connect()}catch(t){if(t?.code&&I.includes(t.code)){throw new g(x[t.code])}else if(!t||t.code){this.debug("Failed to connect to the gateway, requeueing...",e);this.shardQueue.add(e)}else{throw t}}if(this.shardQueue.size){this.debug(`Shard Queue Size: ${this.shardQueue.size}; continuing in 5 seconds...`);await o(5e3);return this.createShards()}return true}async reconnect(){if(this.reconnecting||this.status!==T.READY)return false;this.reconnecting=true;try{await this.createShards()}catch(e){this.debug(`Couldn't reconnect or fetch information about the gateway. ${e}`);if(e.httpStatus!==401){this.debug(`Possible network error occurred. Retrying in 5s...`);await o(5e3);this.reconnecting=false;return this.reconnect()}if(this.client.listenerCount(v.INVALIDATED)){this.client.emit(v.INVALIDATED);this.destroy()}else{this.client.destroy()}}finally{this.reconnecting=false}return true}broadcast(e){for(const t of this.shards.values())t.send(e)}destroy(){if(this.destroyed)return;this.debug(`Manager was destroyed. Called by:\n${new g("MANAGER_DESTROYED").stack}`);this.destroyed=true;this.shardQueue.clear();for(const e of this.shards.values())e.destroy({closeCode:1e3,reset:true,emit:false,log:false})}handlePacket(e,t){if(e&&this.status!==T.READY){if(!A.includes(e.t)){this.packetQueue.push({packet:e,shard:t});return false}}if(this.packetQueue.length){const e=this.packetQueue.shift();r((()=>{this.handlePacket(e.packet,e.shard)})).unref()}if(e&&m[e.t]){m[e.t](this.client,e,t)}return true}checkShardsReady(){if(this.status===T.READY)return;if(this.shards.size!==this.totalShards||this.shards.some((e=>e.status!==T.READY))){return}this.triggerClientReady()}triggerClientReady(){this.status=T.READY;this.client.readyAt=new Date;this.client.emit(v.CLIENT_READY,this.client);this.handlePacket()}}e.exports=WebSocketManager},98467:(e,t,i)=>{"use strict";const s=i(15673);const{setTimeout:r,setInterval:o}=i(92332);const l=i(86908);const{Status:c,Events:u,ShardEvents:m,Opcodes:g,WSEvents:v}=i(98422);const _=i(9453);const T=Object.keys(c);const x=Object.keys(l.WebSocket);let S;try{S=i(52699)}catch{}class WebSocketShard extends s{constructor(e,t){super();this.manager=e;this.id=t;this.status=c.IDLE;this.sequence=-1;this.closeSequence=0;this.sessionId=null;this.ping=-1;this.lastPingTimestamp=-1;this.lastHeartbeatAcked=true;Object.defineProperty(this,"ratelimit",{value:{queue:[],total:120,remaining:120,time:6e4,timer:null}});Object.defineProperty(this,"connection",{value:null,writable:true});Object.defineProperty(this,"inflate",{value:null,writable:true});Object.defineProperty(this,"helloTimeout",{value:null,writable:true});Object.defineProperty(this,"eventsAttached",{value:false,writable:true});Object.defineProperty(this,"expectedGuilds",{value:null,writable:true});Object.defineProperty(this,"readyTimeout",{value:null,writable:true});Object.defineProperty(this,"connectedAt",{value:0,writable:true})}debug(e){this.manager.debug(e,this)}connect(){const{gateway:e,client:t}=this.manager;if(this.connection?.readyState===l.OPEN&&this.status===c.READY){return Promise.resolve()}return new Promise(((i,s)=>{const cleanup=()=>{this.removeListener(m.CLOSE,onClose);this.removeListener(m.READY,onReady);this.removeListener(m.RESUMED,onResumed);this.removeListener(m.INVALID_SESSION,onInvalidOrDestroyed);this.removeListener(m.DESTROYED,onInvalidOrDestroyed)};const onReady=()=>{cleanup();i()};const onResumed=()=>{cleanup();i()};const onClose=e=>{cleanup();s(e)};const onInvalidOrDestroyed=()=>{cleanup();s()};this.once(m.READY,onReady);this.once(m.RESUMED,onResumed);this.once(m.CLOSE,onClose);this.once(m.INVALID_SESSION,onInvalidOrDestroyed);this.once(m.DESTROYED,onInvalidOrDestroyed);if(this.connection?.readyState===l.OPEN){this.debug("An open connection was found, attempting an immediate identify.");this.identify();return}if(this.connection){this.debug(`A connection object was found. Cleaning up before continuing.\n    State: ${x[this.connection.readyState]}`);this.destroy({emit:false})}const r={v:t.options.ws.version};if(S){this.inflate=new S.Inflate({chunkSize:65535,flush:S.Z_SYNC_FLUSH,to:l.encoding==="json"?"string":""});r.compress="zlib-stream"}this.debug(`[CONNECT]\n    Gateway    : ${e}\n    Version    : ${t.options.ws.version}\n    Encoding   : ${l.encoding}\n    Compression: ${S?"zlib-stream":"none"}`);this.status=this.status===c.DISCONNECTED?c.RECONNECTING:c.CONNECTING;this.setHelloTimeout();this.connectedAt=Date.now();const o=this.connection=l.create(e,r);o.onopen=this.onOpen.bind(this);o.onmessage=this.onMessage.bind(this);o.onerror=this.onError.bind(this);o.onclose=this.onClose.bind(this)}))}onOpen(){this.debug(`[CONNECTED] Took ${Date.now()-this.connectedAt}ms`);this.status=c.NEARLY}onMessage({data:e}){let t;if(e instanceof ArrayBuffer)e=new Uint8Array(e);if(S){const i=e.length;const s=i>=4&&e[i-4]===0&&e[i-3]===0&&e[i-2]===255&&e[i-1]===255;this.inflate.push(e,s&&S.Z_SYNC_FLUSH);if(!s)return;t=this.inflate.result}else{t=e}let i;try{i=l.unpack(t)}catch(e){this.manager.client.emit(u.SHARD_ERROR,e,this.id);return}this.manager.client.emit(u.RAW,i,this.id);if(i.op===g.DISPATCH)this.manager.emit(i.t,i.d,this.id);this.onPacket(i)}onError(e){const t=e?.error??e;if(!t)return;this.manager.client.emit(u.SHARD_ERROR,t,this.id)}onClose(e){if(this.sequence!==-1)this.closeSequence=this.sequence;this.sequence=-1;this.debug(`[CLOSE]\n    Event Code: ${e.code}\n    Clean     : ${e.wasClean}\n    Reason    : ${e.reason??"No reason received"}`);this.setHeartbeatTimer(-1);this.setHelloTimeout(-1);if(this.connection)this._cleanupConnection();this.status=c.DISCONNECTED;this.emit(m.CLOSE,e)}onPacket(e){if(!e){this.debug(`Received broken packet: '${e}'.`);return}switch(e.t){case v.READY:this.emit(m.READY);this.sessionId=e.d.session_id;this.expectedGuilds=new Set(e.d.guilds.map((e=>e.id)));this.status=c.WAITING_FOR_GUILDS;this.debug(`[READY] Session ${this.sessionId}.`);this.lastHeartbeatAcked=true;this.sendHeartbeat("ReadyHeartbeat");break;case v.RESUMED:{this.emit(m.RESUMED);this.status=c.READY;const t=e.s-this.closeSequence;this.debug(`[RESUMED] Session ${this.sessionId} | Replayed ${t} events.`);this.lastHeartbeatAcked=true;this.sendHeartbeat("ResumeHeartbeat");break}}if(e.s>this.sequence)this.sequence=e.s;switch(e.op){case g.HELLO:this.setHelloTimeout(-1);this.setHeartbeatTimer(e.d.heartbeat_interval);this.identify();break;case g.RECONNECT:this.debug("[RECONNECT] Discord asked us to reconnect");this.destroy({closeCode:4e3});break;case g.INVALID_SESSION:this.debug(`[INVALID SESSION] Resumable: ${e.d}.`);if(e.d){this.identifyResume();return}this.sequence=-1;this.sessionId=null;this.status=c.RECONNECTING;this.emit(m.INVALID_SESSION);break;case g.HEARTBEAT_ACK:this.ackHeartbeat();break;case g.HEARTBEAT:this.sendHeartbeat("HeartbeatRequest",true);break;default:this.manager.handlePacket(e,this);if(this.status===c.WAITING_FOR_GUILDS&&e.t===v.GUILD_CREATE){this.expectedGuilds.delete(e.d.id);this.checkReady()}}}checkReady(){if(this.readyTimeout){clearTimeout(this.readyTimeout);this.readyTimeout=null}if(!this.expectedGuilds.size){this.debug("Shard received all its guilds. Marking as fully ready.");this.status=c.READY;this.emit(m.ALL_READY);return}const e=new _(this.manager.client.options.intents).has(_.FLAGS.GUILDS);const{waitGuildTimeout:t}=this.manager.client.options;this.readyTimeout=r((()=>{this.debug(`Shard ${e?"did":"will"} not receive any more guild packets`+`${e?` in ${t} ms`:""}.\nUnavailable guild count: ${this.expectedGuilds.size}`);this.readyTimeout=null;this.status=c.READY;this.emit(m.ALL_READY,this.expectedGuilds)}),e?t:0).unref()}setHelloTimeout(e){if(e===-1){if(this.helloTimeout){this.debug("Clearing the HELLO timeout.");clearTimeout(this.helloTimeout);this.helloTimeout=null}return}this.debug("Setting a HELLO timeout for 20s.");this.helloTimeout=r((()=>{this.debug("Did not receive HELLO in time. Destroying and connecting again.");this.destroy({reset:true,closeCode:4009})}),2e4).unref()}setHeartbeatTimer(e){if(e===-1){if(this.heartbeatInterval){this.debug("Clearing the heartbeat interval.");clearInterval(this.heartbeatInterval);this.heartbeatInterval=null}return}this.debug(`Setting a heartbeat interval for ${e}ms.`);if(this.heartbeatInterval)clearInterval(this.heartbeatInterval);this.heartbeatInterval=o((()=>this.sendHeartbeat()),e).unref()}sendHeartbeat(e="HeartbeatTimer",t=[c.WAITING_FOR_GUILDS,c.IDENTIFYING,c.RESUMING].includes(this.status)){if(t&&!this.lastHeartbeatAcked){this.debug(`[${e}] Didn't process heartbeat ack yet but we are still connected. Sending one now.`)}else if(!this.lastHeartbeatAcked){this.debug(`[${e}] Didn't receive a heartbeat ack last time, assuming zombie connection. Destroying and reconnecting.\n    Status          : ${T[this.status]}\n    Sequence        : ${this.sequence}\n    Connection State: ${this.connection?x[this.connection.readyState]:"No Connection??"}`);this.destroy({closeCode:4009,reset:true});return}this.debug(`[${e}] Sending a heartbeat.`);this.lastHeartbeatAcked=false;this.lastPingTimestamp=Date.now();this.send({op:g.HEARTBEAT,d:this.sequence},true)}ackHeartbeat(){this.lastHeartbeatAcked=true;const e=Date.now()-this.lastPingTimestamp;this.debug(`Heartbeat acknowledged, latency of ${e}ms.`);this.ping=e}identify(){return this.sessionId?this.identifyResume():this.identifyNew()}identifyNew(){const{client:e}=this.manager;if(!e.token){this.debug("[IDENTIFY] No token available to identify a new session.");return}this.status=c.IDENTIFYING;const t={...e.options.ws,intents:_.resolve(e.options.intents),token:e.token,shard:[this.id,Number(e.options.shardCount)]};this.debug(`[IDENTIFY] Shard ${this.id}/${e.options.shardCount} with intents: ${t.intents}`);this.send({op:g.IDENTIFY,d:t},true)}identifyResume(){if(!this.sessionId){this.debug("[RESUME] No session id was present; identifying as a new session.");this.identifyNew();return}this.status=c.RESUMING;this.debug(`[RESUME] Session ${this.sessionId}, sequence ${this.closeSequence}`);const e={token:this.manager.client.token,session_id:this.sessionId,seq:this.closeSequence};this.send({op:g.RESUME,d:e},true)}send(e,t=false){this.ratelimit.queue[t?"unshift":"push"](e);this.processQueue()}_send(e){if(this.connection?.readyState!==l.OPEN){this.debug(`Tried to send packet '${JSON.stringify(e)}' but no WebSocket is available!`);this.destroy({closeCode:4e3});return}this.connection.send(l.pack(e),(e=>{if(e)this.manager.client.emit(u.SHARD_ERROR,e,this.id)}))}processQueue(){if(this.ratelimit.remaining===0)return;if(this.ratelimit.queue.length===0)return;if(this.ratelimit.remaining===this.ratelimit.total){this.ratelimit.timer=r((()=>{this.ratelimit.remaining=this.ratelimit.total;this.processQueue()}),this.ratelimit.time).unref()}while(this.ratelimit.remaining>0){const e=this.ratelimit.queue.shift();if(!e)return;this._send(e);this.ratelimit.remaining--}}destroy({closeCode:e=1e3,reset:t=false,emit:i=true,log:s=true}={}){if(s){this.debug(`[DESTROY]\n    Close Code    : ${e}\n    Reset         : ${t}\n    Emit DESTROYED: ${i}`)}this.setHeartbeatTimer(-1);this.setHelloTimeout(-1);if(this.connection){if(this.connection.readyState===l.OPEN){this.connection.close(e)}else{this.debug(`WS State: ${x[this.connection.readyState]}`);this._cleanupConnection();try{this.connection.close(e)}catch{}if(i)this._emitDestroyed()}}else if(i){this._emitDestroyed()}this.connection=null;this.status=c.DISCONNECTED;if(this.sequence!==-1)this.closeSequence=this.sequence;if(t){this.sequence=-1;this.sessionId=null}this.ratelimit.remaining=this.ratelimit.total;this.ratelimit.queue.length=0;if(this.ratelimit.timer){clearTimeout(this.ratelimit.timer);this.ratelimit.timer=null}}_cleanupConnection(){this.connection.onopen=this.connection.onclose=this.connection.onerror=this.connection.onmessage=null}_emitDestroyed(){this.emit(m.DESTROYED)}}e.exports=WebSocketShard},62797:(e,t,i)=>{"use strict";const{Events:s}=i(98422);e.exports=(e,{d:t})=>{const i=t.guild_id?e.guilds.cache.get(t.guild_id)?.commands:e.application.commands;if(!i)return;const r=i._add(t,t.application_id===e.application.id);e.emit(s.APPLICATION_COMMAND_CREATE,r)}},71900:(e,t,i)=>{"use strict";const{Events:s}=i(98422);e.exports=(e,{d:t})=>{const i=t.guild_id?e.guilds.cache.get(t.guild_id)?.commands:e.application.commands;if(!i)return;const r=t.application_id===e.application.id;const o=i._add(t,r);if(r)i.cache.delete(t.id);e.emit(s.APPLICATION_COMMAND_DELETE,o)}},82135:(e,t,i)=>{"use strict";const{Events:s}=i(98422);e.exports=(e,{d:t})=>{const i=t.guild_id?e.guilds.cache.get(t.guild_id)?.commands:e.application.commands;if(!i)return;const r=i.cache.get(t.id)?._clone()??null;const o=i._add(t,t.application_id===e.application.id);e.emit(s.APPLICATION_COMMAND_UPDATE,r,o)}},55270:e=>{"use strict";e.exports=(e,t)=>{e.actions.ChannelCreate.handle(t.d)}},3269:e=>{"use strict";e.exports=(e,t)=>{e.actions.ChannelDelete.handle(t.d)}},34347:(e,t,i)=>{"use strict";const{Events:s}=i(98422);e.exports=(e,{d:t})=>{const i=e.channels.cache.get(t.channel_id);const r=t.last_pin_timestamp?new Date(t.last_pin_timestamp).getTime():null;if(i){i.lastPinTimestamp=r;e.emit(s.CHANNEL_PINS_UPDATE,i,r)}}},53682:(e,t,i)=>{"use strict";const{Events:s}=i(98422);e.exports=(e,t)=>{const{old:i,updated:r}=e.actions.ChannelUpdate.handle(t.d);if(i&&r){e.emit(s.CHANNEL_UPDATE,i,r)}}},86411:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildBanAdd.handle(t.d)}},65450:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildBanRemove.handle(t.d)}},34704:(e,t,i)=>{"use strict";const{Events:s,Status:r}=i(98422);e.exports=(e,{d:t},i)=>{let o=e.guilds.cache.get(t.id);if(o){if(!o.available&&!t.unavailable){o._patch(t)}}else{t.shardId=i.id;o=e.guilds._add(t);if(e.ws.status===r.READY){e.emit(s.GUILD_CREATE,o)}}}},93077:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildDelete.handle(t.d)}},84174:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildEmojisUpdate.handle(t.d)}},93376:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildIntegrationsUpdate.handle(t.d)}},51676:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const{Events:r}=i(98422);e.exports=(e,{d:t})=>{const i=e.guilds.cache.get(t.guild_id);if(!i)return;const o=new s;for(const e of t.members)o.set(e.user.id,i.members._add(e));if(t.presences){for(const e of t.presences)i.presences._add(Object.assign(e,{guild:i}))}e.emit(r.GUILD_MEMBERS_CHUNK,o,i,{count:t.chunk_count,index:t.chunk_index,nonce:t.nonce})}},92036:(e,t,i)=>{"use strict";const{Events:s,Status:r}=i(98422);e.exports=(e,{d:t},i)=>{const o=e.guilds.cache.get(t.guild_id);if(o){o.memberCount++;const l=o.members._add(t);if(i.status===r.READY){e.emit(s.GUILD_MEMBER_ADD,l)}}}},40882:e=>{"use strict";e.exports=(e,t,i)=>{e.actions.GuildMemberRemove.handle(t.d,i)}},87917:e=>{"use strict";e.exports=(e,t,i)=>{e.actions.GuildMemberUpdate.handle(t.d,i)}},25440:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildRoleCreate.handle(t.d)}},49228:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildRoleDelete.handle(t.d)}},63524:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildRoleUpdate.handle(t.d)}},27164:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildScheduledEventCreate.handle(t.d)}},88279:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildScheduledEventDelete.handle(t.d)}},59989:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildScheduledEventUpdate.handle(t.d)}},97106:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildScheduledEventUserAdd.handle(t.d)}},88193:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildScheduledEventUserRemove.handle(t.d)}},65271:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildStickersUpdate.handle(t.d)}},55223:e=>{"use strict";e.exports=(e,t)=>{e.actions.GuildUpdate.handle(t.d)}},58962:e=>{"use strict";e.exports=(e,t)=>{e.actions.InteractionCreate.handle(t.d)}},68422:e=>{"use strict";e.exports=(e,t)=>{e.actions.InviteCreate.handle(t.d)}},73177:e=>{"use strict";e.exports=(e,t)=>{e.actions.InviteDelete.handle(t.d)}},57493:e=>{"use strict";e.exports=(e,t)=>{e.actions.MessageCreate.handle(t.d)}},96648:e=>{"use strict";e.exports=(e,t)=>{e.actions.MessageDelete.handle(t.d)}},99273:e=>{"use strict";e.exports=(e,t)=>{e.actions.MessageDeleteBulk.handle(t.d)}},24505:e=>{"use strict";e.exports=(e,t)=>{e.actions.MessageReactionAdd.handle(t.d)}},8402:e=>{"use strict";e.exports=(e,t)=>{e.actions.MessageReactionRemove.handle(t.d)}},26352:e=>{"use strict";e.exports=(e,t)=>{e.actions.MessageReactionRemoveAll.handle(t.d)}},33483:e=>{"use strict";e.exports=(e,t)=>{e.actions.MessageReactionRemoveEmoji.handle(t.d)}},57661:(e,t,i)=>{"use strict";const{Events:s}=i(98422);e.exports=(e,t)=>{const{old:i,updated:r}=e.actions.MessageUpdate.handle(t.d);if(i&&r){e.emit(s.MESSAGE_UPDATE,i,r)}}},21677:e=>{"use strict";e.exports=(e,t)=>{e.actions.PresenceUpdate.handle(t.d)}},31091:(e,t,i)=>{"use strict";const s=i(27782);let r;e.exports=(e,{d:t},o)=>{if(e.user){e.user._patch(t.user)}else{r??=i(88983);e.user=new r(e,t.user);e.users.cache.set(e.user.id,e.user)}for(const i of t.guilds){i.shardId=o.id;e.guilds._add(i)}if(e.application){e.application._patch(t.application)}else{e.application=new s(e,t.application)}o.checkReady()}},4918:(e,t,i)=>{"use strict";const{Events:s}=i(98422);e.exports=(e,t,i)=>{const r=i.sequence-i.closeSequence;e.emit(s.SHARD_RESUME,i.id,r)}},92809:e=>{"use strict";e.exports=(e,t)=>{e.actions.StageInstanceCreate.handle(t.d)}},82165:e=>{"use strict";e.exports=(e,t)=>{e.actions.StageInstanceDelete.handle(t.d)}},35162:e=>{"use strict";e.exports=(e,t)=>{e.actions.StageInstanceUpdate.handle(t.d)}},96053:e=>{"use strict";e.exports=(e,t)=>{e.actions.ThreadCreate.handle(t.d)}},63616:e=>{"use strict";e.exports=(e,t)=>{e.actions.ThreadDelete.handle(t.d)}},95243:e=>{"use strict";e.exports=(e,t)=>{e.actions.ThreadListSync.handle(t.d)}},4924:e=>{"use strict";e.exports=(e,t)=>{e.actions.ThreadMembersUpdate.handle(t.d)}},83935:e=>{"use strict";e.exports=(e,t)=>{e.actions.ThreadMemberUpdate.handle(t.d)}},46250:(e,t,i)=>{"use strict";const{Events:s}=i(98422);e.exports=(e,t)=>{const{old:i,updated:r}=e.actions.ChannelUpdate.handle(t.d);if(i&&r){e.emit(s.THREAD_UPDATE,i,r)}}},32744:e=>{"use strict";e.exports=(e,t)=>{e.actions.TypingStart.handle(t.d)}},65255:e=>{"use strict";e.exports=(e,t)=>{e.actions.UserUpdate.handle(t.d)}},29506:e=>{"use strict";e.exports=(e,t)=>{e.emit("debug",`[VOICE] received voice server: ${JSON.stringify(t)}`);e.voice.onVoiceServer(t.d)}},7770:e=>{"use strict";e.exports=(e,t)=>{e.actions.VoiceStateUpdate.handle(t.d)}},56975:e=>{"use strict";e.exports=(e,t)=>{e.actions.WebhooksUpdate.handle(t.d)}},46861:(e,t,i)=>{"use strict";const s=Object.fromEntries([["READY",i(31091)],["RESUMED",i(4918)],["APPLICATION_COMMAND_CREATE",i(62797)],["APPLICATION_COMMAND_DELETE",i(71900)],["APPLICATION_COMMAND_UPDATE",i(82135)],["GUILD_CREATE",i(34704)],["GUILD_DELETE",i(93077)],["GUILD_UPDATE",i(55223)],["INVITE_CREATE",i(68422)],["INVITE_DELETE",i(73177)],["GUILD_MEMBER_ADD",i(92036)],["GUILD_MEMBER_REMOVE",i(40882)],["GUILD_MEMBER_UPDATE",i(87917)],["GUILD_MEMBERS_CHUNK",i(51676)],["GUILD_INTEGRATIONS_UPDATE",i(93376)],["GUILD_ROLE_CREATE",i(25440)],["GUILD_ROLE_DELETE",i(49228)],["GUILD_ROLE_UPDATE",i(63524)],["GUILD_BAN_ADD",i(86411)],["GUILD_BAN_REMOVE",i(65450)],["GUILD_EMOJIS_UPDATE",i(84174)],["CHANNEL_CREATE",i(55270)],["CHANNEL_DELETE",i(3269)],["CHANNEL_UPDATE",i(53682)],["CHANNEL_PINS_UPDATE",i(34347)],["MESSAGE_CREATE",i(57493)],["MESSAGE_DELETE",i(96648)],["MESSAGE_UPDATE",i(57661)],["MESSAGE_DELETE_BULK",i(99273)],["MESSAGE_REACTION_ADD",i(24505)],["MESSAGE_REACTION_REMOVE",i(8402)],["MESSAGE_REACTION_REMOVE_ALL",i(26352)],["MESSAGE_REACTION_REMOVE_EMOJI",i(33483)],["THREAD_CREATE",i(96053)],["THREAD_UPDATE",i(46250)],["THREAD_DELETE",i(63616)],["THREAD_LIST_SYNC",i(95243)],["THREAD_MEMBER_UPDATE",i(83935)],["THREAD_MEMBERS_UPDATE",i(4924)],["USER_UPDATE",i(65255)],["PRESENCE_UPDATE",i(21677)],["TYPING_START",i(32744)],["VOICE_STATE_UPDATE",i(7770)],["VOICE_SERVER_UPDATE",i(29506)],["WEBHOOKS_UPDATE",i(56975)],["INTERACTION_CREATE",i(58962)],["STAGE_INSTANCE_CREATE",i(92809)],["STAGE_INSTANCE_UPDATE",i(35162)],["STAGE_INSTANCE_DELETE",i(82165)],["GUILD_STICKERS_UPDATE",i(65271)],["GUILD_SCHEDULED_EVENT_CREATE",i(27164)],["GUILD_SCHEDULED_EVENT_UPDATE",i(59989)],["GUILD_SCHEDULED_EVENT_DELETE",i(88279)],["GUILD_SCHEDULED_EVENT_USER_ADD",i(97106)],["GUILD_SCHEDULED_EVENT_USER_REMOVE",i(88193)]]);e.exports=s},5229:e=>{"use strict";const t=Symbol("code");const i=new Map;function makeDiscordjsError(e){return class DiscordjsError extends e{constructor(e,...i){super(message(e,i));this[t]=e;if(Error.captureStackTrace)Error.captureStackTrace(this,DiscordjsError)}get name(){return`${super.name} [${this[t]}]`}get code(){return this[t]}}}function message(e,t){if(typeof e!=="string")throw new Error("Error message key must be a string");const s=i.get(e);if(!s)throw new Error(`An invalid error message key was used: ${e}.`);if(typeof s==="function")return s(...t);if(!t?.length)return s;t.unshift(s);return String(...t)}function register(e,t){i.set(e,typeof t==="function"?t:String(t))}e.exports={register:register,Error:makeDiscordjsError(Error),TypeError:makeDiscordjsError(TypeError),RangeError:makeDiscordjsError(RangeError)}},32676:(e,t,i)=>{"use strict";const{register:s}=i(5229);const r={CLIENT_INVALID_OPTION:(e,t)=>`The ${e} option must be ${t}`,CLIENT_INVALID_PROVIDED_SHARDS:"None of the provided shards were valid.",CLIENT_MISSING_INTENTS:"Valid intents must be provided for the Client.",CLIENT_NOT_READY:e=>`The client needs to be logged in to ${e}.`,TOKEN_INVALID:"An invalid token was provided.",TOKEN_MISSING:"Request to use token, but token was unavailable to the client.",WS_CLOSE_REQUESTED:"WebSocket closed due to user request.",WS_CONNECTION_EXISTS:"There is already an existing WebSocket connection.",WS_NOT_OPEN:(e="data")=>`WebSocket not open to send ${e}`,MANAGER_DESTROYED:"Manager was destroyed.",BITFIELD_INVALID:e=>`Invalid bitfield flag or number: ${e}.`,SHARDING_INVALID:"Invalid shard settings were provided.",SHARDING_REQUIRED:"This session would have handled too many guilds - Sharding is required.",INVALID_INTENTS:"Invalid intent provided for WebSocket intents.",DISALLOWED_INTENTS:"Privileged intent provided is not enabled or whitelisted.",SHARDING_NO_SHARDS:"No shards have been spawned.",SHARDING_IN_PROCESS:"Shards are still being spawned.",SHARDING_INVALID_EVAL_BROADCAST:"Script to evaluate must be a function",SHARDING_SHARD_NOT_FOUND:e=>`Shard ${e} could not be found.`,SHARDING_ALREADY_SPAWNED:e=>`Already spawned ${e} shards.`,SHARDING_PROCESS_EXISTS:e=>`Shard ${e} already has an active process.`,SHARDING_WORKER_EXISTS:e=>`Shard ${e} already has an active worker.`,SHARDING_READY_TIMEOUT:e=>`Shard ${e}'s Client took too long to become ready.`,SHARDING_READY_DISCONNECTED:e=>`Shard ${e}'s Client disconnected before becoming ready.`,SHARDING_READY_DIED:e=>`Shard ${e}'s process exited before its Client became ready.`,SHARDING_NO_CHILD_EXISTS:e=>`Shard ${e} has no active process or worker.`,SHARDING_SHARD_MISCALCULATION:(e,t,i)=>`Calculated invalid shard ${e} for guild ${t} with ${i} shards.`,COLOR_RANGE:"Color must be within the range 0 - 16777215 (0xFFFFFF).",COLOR_CONVERT:"Unable to convert color to a number.",INVITE_OPTIONS_MISSING_CHANNEL:"A valid guild channel must be provided when GuildScheduledEvent is EXTERNAL.",EMBED_TITLE:"MessageEmbed title must be a string.",EMBED_FIELD_NAME:"MessageEmbed field names must be non-empty strings.",EMBED_FIELD_VALUE:"MessageEmbed field values must be non-empty strings.",EMBED_FOOTER_TEXT:"MessageEmbed footer text must be a string.",EMBED_DESCRIPTION:"MessageEmbed description must be a string.",EMBED_AUTHOR_NAME:"MessageEmbed author name must be a string.",BUTTON_LABEL:"MessageButton label must be a string",BUTTON_URL:"MessageButton URL must be a string",BUTTON_CUSTOM_ID:"MessageButton customId must be a string",SELECT_MENU_CUSTOM_ID:"MessageSelectMenu customId must be a string",SELECT_MENU_PLACEHOLDER:"MessageSelectMenu placeholder must be a string",SELECT_OPTION_LABEL:"MessageSelectOption label must be a string",SELECT_OPTION_VALUE:"MessageSelectOption value must be a string",SELECT_OPTION_DESCRIPTION:"MessageSelectOption description must be a string",INTERACTION_COLLECTOR_ERROR:e=>`Collector received no interactions before ending with reason: ${e}`,FILE_NOT_FOUND:e=>`File could not be found: ${e}`,USER_BANNER_NOT_FETCHED:"You must fetch this user's banner before trying to generate its URL!",USER_NO_DM_CHANNEL:"No DM Channel exists!",VOICE_NOT_STAGE_CHANNEL:"You are only allowed to do this in stage channels.",VOICE_STATE_NOT_OWN:"You cannot self-deafen/mute/request to speak on VoiceStates that do not belong to the ClientUser.",VOICE_STATE_INVALID_TYPE:e=>`${e} must be a boolean.`,REQ_RESOURCE_TYPE:"The resource must be a string, Buffer or a valid file stream.",IMAGE_FORMAT:e=>`Invalid image format: ${e}`,IMAGE_SIZE:e=>`Invalid image size: ${e}`,MESSAGE_BULK_DELETE_TYPE:"The messages must be an Array, Collection, or number.",MESSAGE_NONCE_TYPE:"Message nonce must be an integer or a string.",MESSAGE_CONTENT_TYPE:"Message content must be a non-empty string.",SPLIT_MAX_LEN:"Chunk exceeds the max length and contains no split characters.",BAN_RESOLVE_ID:(e=false)=>`Couldn't resolve the user id to ${e?"ban":"unban"}.`,FETCH_BAN_RESOLVE_ID:"Couldn't resolve the user id to fetch the ban.",PRUNE_DAYS_TYPE:"Days must be a number",GUILD_CHANNEL_RESOLVE:"Could not resolve channel to a guild channel.",GUILD_VOICE_CHANNEL_RESOLVE:"Could not resolve channel to a guild voice channel.",GUILD_CHANNEL_ORPHAN:"Could not find a parent to this guild channel.",GUILD_CHANNEL_UNOWNED:"The fetched channel does not belong to this manager's guild.",GUILD_OWNED:"Guild is owned by the client.",GUILD_MEMBERS_TIMEOUT:"Members didn't arrive in time.",GUILD_UNCACHED_ME:"The client user as a member of this guild is uncached.",CHANNEL_NOT_CACHED:"Could not find the channel where this message came from in the cache!",STAGE_CHANNEL_RESOLVE:"Could not resolve channel to a stage channel.",GUILD_SCHEDULED_EVENT_RESOLVE:"Could not resolve the guild scheduled event.",INVALID_TYPE:(e,t,i=false)=>`Supplied ${e} is not a${i?"n":""} ${t}.`,INVALID_ELEMENT:(e,t,i)=>`Supplied ${e} ${t} includes an invalid element: ${i}`,MESSAGE_THREAD_PARENT:"The message was not sent in a guild text or news channel",MESSAGE_EXISTING_THREAD:"The message already has a thread",THREAD_INVITABLE_TYPE:e=>`Invitable cannot be edited on ${e}`,WEBHOOK_MESSAGE:"The message was not sent by a webhook.",WEBHOOK_TOKEN_UNAVAILABLE:"This action requires a webhook token, but none is available.",WEBHOOK_URL_INVALID:"The provided webhook URL is not valid.",WEBHOOK_APPLICATION:"This message webhook belongs to an application and cannot be fetched.",MESSAGE_REFERENCE_MISSING:"The message does not reference another message",EMOJI_TYPE:"Emoji must be a string or GuildEmoji/ReactionEmoji",EMOJI_MANAGED:"Emoji is managed and has no Author.",MISSING_MANAGE_EMOJIS_AND_STICKERS_PERMISSION:e=>`Client must have Manage Emojis and Stickers permission in guild ${e} to see emoji authors.`,NOT_GUILD_STICKER:"Sticker is a standard (non-guild) sticker and has no author.",REACTION_RESOLVE_USER:"Couldn't resolve the user id to remove from the reaction.",VANITY_URL:"This guild does not have the VANITY_URL feature enabled.",INVITE_RESOLVE_CODE:"Could not resolve the code to fetch the invite.",INVITE_NOT_FOUND:"Could not find the requested invite.",DELETE_GROUP_DM_CHANNEL:"Bots don't have access to Group DM Channels and cannot delete them",FETCH_GROUP_DM_CHANNEL:"Bots don't have access to Group DM Channels and cannot fetch them",MEMBER_FETCH_NONCE_LENGTH:"Nonce length must not exceed 32 characters.",GLOBAL_COMMAND_PERMISSIONS:"Permissions for global commands may only be fetched or modified by providing a GuildResolvable "+"or from a guild's application command manager.",GUILD_UNCACHED_ROLE_RESOLVE:"Cannot resolve roles from an arbitrary guild, provide an id instead",INTERACTION_ALREADY_REPLIED:"The reply to this interaction has already been sent or deferred.",INTERACTION_NOT_REPLIED:"The reply to this interaction has not been sent or deferred.",INTERACTION_EPHEMERAL_REPLIED:"Ephemeral responses cannot be deleted.",COMMAND_INTERACTION_OPTION_NOT_FOUND:e=>`Required option "${e}" not found.`,COMMAND_INTERACTION_OPTION_TYPE:(e,t,i)=>`Option "${e}" is of type: ${t}; expected ${i}.`,COMMAND_INTERACTION_OPTION_EMPTY:(e,t)=>`Required option "${e}" is of type: ${t}; expected a non-empty value.`,COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND:"No subcommand specified for interaction.",COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND_GROUP:"No subcommand group specified for interaction.",AUTOCOMPLETE_INTERACTION_OPTION_NO_FOCUSED_OPTION:"No focused option for autocomplete interaction.",INVITE_MISSING_SCOPES:"At least one valid scope must be provided for the invite",NOT_IMPLEMENTED:(e,t)=>`Method ${e} not implemented on ${t}.`,SWEEP_FILTER_RETURN:"The return value of the sweepFilter function was not false or a Function"};for(const[e,t]of Object.entries(r))s(e,t)},94436:(e,t,i)=>{"use strict";e.exports=i(5229);e.exports.Messages=i(32676)},85973:(e,t,i)=>{"use strict";t.BaseClient=i(7149);t.Client=i(64438);t.Shard=i(42303);t.ShardClientUtil=i(79320);t.ShardingManager=i(67448);t.WebhookClient=i(12333);t.ActivityFlags=i(6261);t.ApplicationFlags=i(64834);t.BaseManager=i(97687);t.BitField=i(64973);t.Collection=i(38861).Collection;t.Constants=i(98422);t.DataResolver=i(73642);t.DiscordAPIError=i(33024);t.Formatters=i(37695);t.HTTPError=i(48618);t.Intents=i(9453);t.LimitedCollection=i(48435);t.MessageFlags=i(62840);t.Options=i(71008);t.Permissions=i(97234);t.RateLimitError=i(41486);t.SnowflakeUtil=i(40421);t.Sweepers=i(13813);t.SystemChannelFlags=i(25354);t.ThreadMemberFlags=i(1447);t.UserFlags=i(90690);t.Util=i(28270);t.version=i(8526).version;t.ApplicationCommandManager=i(27518);t.ApplicationCommandPermissionsManager=i(92711);t.BaseGuildEmojiManager=i(50701);t.CachedManager=i(840);t.ChannelManager=i(13552);t.ClientVoiceManager=i(84806);t.DataManager=i(82930);t.GuildApplicationCommandManager=i(20277);t.GuildBanManager=i(87491);t.GuildChannelManager=i(87408);t.GuildEmojiManager=i(15281);t.GuildEmojiRoleManager=i(31760);t.GuildInviteManager=i(50504);t.GuildManager=i(91342);t.GuildMemberManager=i(65451);t.GuildMemberRoleManager=i(73232);t.GuildScheduledEventManager=i(71266);t.GuildStickerManager=i(19653);t.MessageManager=i(68207);t.PermissionOverwriteManager=i(89817);t.PresenceManager=i(63498);t.ReactionManager=i(19277);t.ReactionUserManager=i(95502);t.RoleManager=i(28574);t.StageInstanceManager=i(29879);t.ThreadManager=i(22450);t.ThreadMemberManager=i(57283);t.UserManager=i(72672);t.VoiceStateManager=i(56788);t.WebSocketManager=i(13741);t.WebSocketShard=i(98467);t.Activity=i(98916).Activity;t.AnonymousGuild=i(79754);t.Application=i(39425);t.ApplicationCommand=i(36460);t.AutocompleteInteraction=i(25286);t.Base=i(99307);t.BaseCommandInteraction=i(99558);t.BaseGuild=i(38307);t.BaseGuildEmoji=i(25036);t.BaseGuildTextChannel=i(9493);t.BaseGuildVoiceChannel=i(32728);t.BaseMessageComponent=i(93497);t.ButtonInteraction=i(73288);t.CategoryChannel=i(41835);t.Channel=i(26481).Channel;t.ClientApplication=i(27782);t.ClientPresence=i(78282);t.ClientUser=i(88983);t.Collector=i(33858);t.CommandInteraction=i(49187);t.CommandInteractionOptionResolver=i(35459);t.ContextMenuInteraction=i(53496);t.DMChannel=i(35937);t.Emoji=i(63855).Emoji;t.Guild=i(87809).Guild;t.GuildAuditLogs=i(64778);t.GuildAuditLogsEntry=i(64778).Entry;t.GuildBan=i(99281);t.GuildChannel=i(58354);t.GuildEmoji=i(78632);t.GuildMember=i(27081).GuildMember;t.GuildPreview=i(11553);t.GuildPreviewEmoji=i(88128);t.GuildScheduledEvent=i(5226).GuildScheduledEvent;t.GuildTemplate=i(20999);t.Integration=i(32879);t.IntegrationApplication=i(41654);t.Interaction=i(63239);t.InteractionCollector=i(19811);t.InteractionWebhook=i(53996);t.Invite=i(93979);t.InviteStageInstance=i(42706);t.InviteGuild=i(92484);t.Message=i(4975).Message;t.MessageActionRow=i(50024);t.MessageAttachment=i(24681);t.MessageButton=i(14609);t.MessageCollector=i(75121);t.MessageComponentInteraction=i(82908);t.MessageContextMenuInteraction=i(65107);t.MessageEmbed=i(6150);t.MessageMentions=i(74598);t.MessagePayload=i(4405);t.MessageReaction=i(2190);t.MessageSelectMenu=i(57456);t.NewsChannel=i(4917);t.OAuth2Guild=i(23319);t.PartialGroupDMChannel=i(84641);t.PermissionOverwrites=i(13727);t.Presence=i(98916).Presence;t.ReactionCollector=i(4499);t.ReactionEmoji=i(84722);t.RichPresenceAssets=i(98916).RichPresenceAssets;t.Role=i(20339).Role;t.SelectMenuInteraction=i(55294);t.StageChannel=i(37920);t.StageInstance=i(9162).StageInstance;t.Sticker=i(27149).Sticker;t.StickerPack=i(96958);t.StoreChannel=i(86977);t.Team=i(90339);t.TeamMember=i(27775);t.TextChannel=i(27005);t.ThreadChannel=i(49595);t.ThreadMember=i(89044);t.Typing=i(93985);t.User=i(96283);t.UserContextMenuInteraction=i(30796);t.VoiceChannel=i(73776);t.VoiceRegion=i(87193);t.VoiceState=i(79721);t.Webhook=i(95600);t.Widget=i(24528);t.WidgetMember=i(66490);t.WelcomeChannel=i(67350);t.WelcomeScreen=i(82252);t.WebSocket=i(86908)},27518:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(92711);const o=i(840);const{TypeError:l}=i(94436);const c=i(36460);const{ApplicationCommandTypes:u}=i(98422);class ApplicationCommandManager extends o{constructor(e,t){super(e,c,t);this.permissions=new r(this)}_add(e,t,i){return super._add(e,t,{extras:[this.guild,i]})}commandPath({id:e,guildId:t}={}){let i=this.client.api.applications(this.client.application.id);if(this.guild??t)i=i.guilds(this.guild?.id??t);return e?i.commands(e):i.commands}async fetch(e,{guildId:t,cache:i=true,force:r=false}={}){if(typeof e==="object"){({guildId:t,cache:i=true}=e)}else if(e){if(!r){const t=this.cache.get(e);if(t)return t}const s=await this.commandPath({id:e,guildId:t}).get();return this._add(s,i)}const o=await this.commandPath({guildId:t}).get();return o.reduce(((e,s)=>e.set(s.id,this._add(s,i,t))),new s)}async create(e,t){const i=await this.commandPath({guildId:t}).post({data:this.constructor.transformCommand(e)});return this._add(i,true,t)}async set(e,t){const i=await this.commandPath({guildId:t}).put({data:e.map((e=>this.constructor.transformCommand(e)))});return i.reduce(((e,i)=>e.set(i.id,this._add(i,true,t))),new s)}async edit(e,t,i){const s=this.resolveId(e);if(!s)throw new l("INVALID_TYPE","command","ApplicationCommandResolvable");const r=await this.commandPath({id:s,guildId:i}).patch({data:this.constructor.transformCommand(t)});return this._add(r,true,i)}async delete(e,t){const i=this.resolveId(e);if(!i)throw new l("INVALID_TYPE","command","ApplicationCommandResolvable");await this.commandPath({id:i,guildId:t}).delete();const s=this.cache.get(i);this.cache.delete(i);return s??null}static transformCommand(e){return{name:e.name,description:e.description,type:typeof e.type==="number"?e.type:u[e.type],options:e.options?.map((e=>c.transformOption(e))),default_permission:e.defaultPermission??e.default_permission}}}e.exports=ApplicationCommandManager},92711:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(97687);const{Error:o,TypeError:l}=i(94436);const{ApplicationCommandPermissionTypes:c,APIErrors:u}=i(98422);class ApplicationCommandPermissionsManager extends r{constructor(e){super(e.client);this.manager=e;this.guild=e.guild??null;this.guildId=e.guildId??e.guild?.id??null;this.commandId=e.id??null}permissionsPath(e,t){return this.client.api.applications(this.client.application.id).guilds(e).commands(t).permissions}async fetch({guild:e,command:t}={}){const{guildId:i,commandId:r}=this._validateOptions(e,t);if(r){const e=await this.permissionsPath(i,r).get();return e.permissions.map((e=>this.constructor.transformPermissions(e,true)))}const o=await this.permissionsPath(i).get();return o.reduce(((e,t)=>e.set(t.id,t.permissions.map((e=>this.constructor.transformPermissions(e,true))))),new s)}async set({guild:e,command:t,permissions:i,fullPermissions:r}={}){const{guildId:o,commandId:c}=this._validateOptions(e,t);if(c){if(!Array.isArray(i)){throw new l("INVALID_TYPE","permissions","Array of ApplicationCommandPermissionData",true)}const e=await this.permissionsPath(o,c).put({data:{permissions:i.map((e=>this.constructor.transformPermissions(e)))}});return e.permissions.map((e=>this.constructor.transformPermissions(e,true)))}if(!Array.isArray(r)){throw new l("INVALID_TYPE","fullPermissions","Array of GuildApplicationCommandPermissionData",true)}const u=[];for(const e of r){if(!Array.isArray(e.permissions))throw new l("INVALID_ELEMENT","Array","fullPermissions",e);u.push({id:e.id,permissions:e.permissions.map((e=>this.constructor.transformPermissions(e)))})}const m=await this.permissionsPath(o).put({data:u});return m.reduce(((e,t)=>e.set(t.id,t.permissions.map((e=>this.constructor.transformPermissions(e,true))))),new s)}async add({guild:e,command:t,permissions:i}){const{guildId:s,commandId:r}=this._validateOptions(e,t);if(!r)throw new l("INVALID_TYPE","command","ApplicationCommandResolvable");if(!Array.isArray(i)){throw new l("INVALID_TYPE","permissions","Array of ApplicationCommandPermissionData",true)}let o=[];try{o=await this.fetch({guild:s,command:r})}catch(e){if(e.code!==u.UNKNOWN_APPLICATION_COMMAND_PERMISSIONS)throw e}const c=i.slice();for(const e of o){if(!c.some((t=>t.id===e.id))){c.push(e)}}return this.set({guild:s,command:r,permissions:c})}async remove({guild:e,command:t,users:i,roles:s}){const{guildId:r,commandId:c}=this._validateOptions(e,t);if(!c)throw new l("INVALID_TYPE","command","ApplicationCommandResolvable");if(!i&&!s)throw new l("INVALID_TYPE","users OR roles","Array or Resolvable",true);let m=[];if(Array.isArray(i)){i.forEach((e=>{const t=this.client.users.resolveId(e);if(!t)throw new l("INVALID_ELEMENT","Array","users",e);m.push(t)}))}else if(i){const e=this.client.users.resolveId(i);if(!e){throw new l("INVALID_TYPE","users","Array or UserResolvable")}m.push(e)}if(Array.isArray(s)){s.forEach((e=>{if(typeof e==="string"){m.push(e);return}if(!this.guild)throw new o("GUILD_UNCACHED_ROLE_RESOLVE");const t=this.guild.roles.resolveId(e);if(!t)throw new l("INVALID_ELEMENT","Array","users",e);m.push(t)}))}else if(s){if(typeof s==="string"){m.push(s)}else{if(!this.guild)throw new o("GUILD_UNCACHED_ROLE_RESOLVE");const e=this.guild.roles.resolveId(s);if(!e){throw new l("INVALID_TYPE","users","Array or RoleResolvable")}m.push(e)}}let g=[];try{g=await this.fetch({guild:r,command:c})}catch(e){if(e.code!==u.UNKNOWN_APPLICATION_COMMAND_PERMISSIONS)throw e}const v=g.filter((e=>!m.includes(e.id)));return this.set({guild:r,command:c,permissions:v})}async has({guild:e,command:t,permissionId:i}){const{guildId:s,commandId:r}=this._validateOptions(e,t);if(!r)throw new l("INVALID_TYPE","command","ApplicationCommandResolvable");if(!i)throw new l("INVALID_TYPE","permissionId","UserResolvable or RoleResolvable");let c=i;if(typeof i!=="string"){c=this.client.users.resolveId(i);if(!c){if(!this.guild)throw new o("GUILD_UNCACHED_ROLE_RESOLVE");c=this.guild.roles.resolveId(i)}if(!c){throw new l("INVALID_TYPE","permissionId","UserResolvable or RoleResolvable")}}let m=[];try{m=await this.fetch({guild:s,command:r})}catch(e){if(e.code!==u.UNKNOWN_APPLICATION_COMMAND_PERMISSIONS)throw e}return m.some((e=>e.id===c))}_validateOptions(e,t){const i=this.guildId??this.client.guilds.resolveId(e);if(!i)throw new o("GLOBAL_COMMAND_PERMISSIONS");let s=this.commandId;if(t&&!s){s=this.manager.resolveId?.(t);if(!s&&this.guild){s=this.guild.commands.resolveId(t)}s??=this.client.application?.commands.resolveId(t);if(!s){throw new l("INVALID_TYPE","command","ApplicationCommandResolvable",true)}}return{guildId:i,commandId:s}}static transformPermissions(e,t){return{id:e.id,permission:e.permission,type:typeof e.type==="number"&&!t?e.type:c[e.type]}}}e.exports=ApplicationCommandPermissionsManager},50701:(e,t,i)=>{"use strict";const s=i(840);const r=i(78632);const o=i(84722);const{parseEmoji:l}=i(28270);class BaseGuildEmojiManager extends s{constructor(e,t){super(e,r,t)}resolve(e){if(e instanceof o)return super.resolve(e.id);return super.resolve(e)}resolveId(e){if(e instanceof o)return e.id;return super.resolveId(e)}resolveIdentifier(e){const t=this.resolve(e);if(t)return t.identifier;if(e instanceof o)return e.identifier;if(typeof e==="string"){const t=l(e);if(t?.name.length){e=`${t.animated?"a:":""}${t.name}${t.id?`:${t.id}`:""}`}if(!e.includes("%"))return encodeURIComponent(e);return e}return null}}e.exports=BaseGuildEmojiManager},97687:e=>{"use strict";class BaseManager{constructor(e){Object.defineProperty(this,"client",{value:e})}}e.exports=BaseManager},840:(e,t,i)=>{"use strict";const s=i(82930);const{_cleanupSymbol:r}=i(98422);class CachedManager extends s{constructor(e,t,i){super(e,t);Object.defineProperty(this,"_cache",{value:this.client.options.makeCache(this.constructor,this.holds)});let s=this._cache[r]?.();if(s){s=s.bind(this._cache);e._cleanups.add(s);e._finalizers.register(this,{cleanup:s,message:`Garbage collection completed on ${this.constructor.name}, `+`which had a ${this._cache.constructor.name} of ${this.holds.name}.`,name:this.constructor.name})}if(i){for(const e of i){this._add(e)}}}get cache(){return this._cache}_add(e,t=true,{id:i,extras:s=[]}={}){const r=this.cache.get(i??e.id);if(r){if(t){r._patch(e);return r}const i=r._clone();i._patch(e);return i}const o=this.holds?new this.holds(this.client,e,...s):e;if(t)this.cache.set(i??o.id,o);return o}}e.exports=CachedManager},13552:(e,t,i)=>{"use strict";const s=i(97742);const r=i(840);const{Channel:o}=i(26481);const{Events:l,ThreadChannelTypes:c}=i(98422);let u=false;class ChannelManager extends r{constructor(e,t){super(e,o,t);const i=this._cache.constructor.name==="Collection"||(this._cache.maxSize===undefined||this._cache.maxSize===Infinity)&&(this._cache.sweepFilter===undefined||this._cache.sweepFilter.isDefault);if(!u&&!i){u=true;s.emitWarning(`Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,"UnsupportedCacheOverwriteWarning")}}_add(e,t,{cache:i=true,allowUnknownGuild:s=false,fromInteraction:r=false}={}){const u=this.cache.get(e.id);if(u){if(i)u._patch(e,r);t?.channels?._add(u);if(c.includes(u.type)){u.parent?.threads?._add(u)}return u}const m=o.create(this.client,e,t,{allowUnknownGuild:s,fromInteraction:r});if(!m){this.client.emit(l.DEBUG,`Failed to find guild, or unknown type for channel ${e.id} ${e.type}`);return null}if(i&&!s)this.cache.set(m.id,m);return m}_remove(e){const t=this.cache.get(e);t?.guild?.channels.cache.delete(e);t?.parent?.threads?.cache.delete(e);this.cache.delete(e)}async fetch(e,{allowUnknownGuild:t=false,cache:i=true,force:s=false}={}){if(!s){const t=this.cache.get(e);if(t&&!t.partial)return t}const r=await this.client.api.channels(e).get();return this._add(r,null,{cache:i,allowUnknownGuild:t})}}e.exports=ChannelManager},82930:(e,t,i)=>{"use strict";const s=i(97687);const{Error:r}=i(94436);class DataManager extends s{constructor(e,t){super(e);Object.defineProperty(this,"holds",{value:t})}get cache(){throw new r("NOT_IMPLEMENTED","get cache",this.constructor.name)}resolve(e){if(e instanceof this.holds)return e;if(typeof e==="string")return this.cache.get(e)??null;return null}resolveId(e){if(e instanceof this.holds)return e.id;if(typeof e==="string")return e;return null}valueOf(){return this.cache}}e.exports=DataManager},20277:(e,t,i)=>{"use strict";const s=i(27518);const r=i(92711);class GuildApplicationCommandManager extends s{constructor(e,t){super(e.client,t);this.guild=e;this.permissions=new r(this)}}e.exports=GuildApplicationCommandManager},87491:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(840);const{TypeError:o,Error:l}=i(94436);const c=i(99281);const{GuildMember:u}=i(27081);class GuildBanManager extends r{constructor(e,t){super(e.client,c,t);this.guild=e}_add(e,t){return super._add(e,t,{id:e.user.id,extras:[this.guild]})}resolve(e){return super.resolve(e)??super.resolve(this.client.users.resolveId(e))}fetch(e){if(!e)return this._fetchMany();const t=this.client.users.resolveId(e);if(t)return this._fetchSingle({user:t,cache:true});e.user&&=this.client.users.resolveId(e.user);if(!e.user){if("cache"in e)return this._fetchMany(e.cache);return Promise.reject(new l("FETCH_BAN_RESOLVE_ID"))}return this._fetchSingle(e)}async _fetchSingle({user:e,cache:t,force:i=false}){if(!i){const t=this.cache.get(e);if(t&&!t.partial)return t}const s=await this.client.api.guilds(this.guild.id).bans(e).get();return this._add(s,t)}async _fetchMany(e){const t=await this.client.api.guilds(this.guild.id).bans.get();return t.reduce(((t,i)=>t.set(i.user.id,this._add(i,e))),new s)}async create(e,t={days:0}){if(typeof t!=="object")throw new o("INVALID_TYPE","options","object",true);const i=this.client.users.resolveId(e);if(!i)throw new l("BAN_RESOLVE_ID",true);await this.client.api.guilds(this.guild.id).bans(i).put({data:{delete_message_days:t.days},reason:t.reason});if(e instanceof u)return e;const s=this.client.users.resolve(i);if(s){return this.guild.members.resolve(s)??s}return i}async remove(e,t){const i=this.client.users.resolveId(e);if(!i)throw new l("BAN_RESOLVE_ID");await this.client.api.guilds(this.guild.id).bans(i).delete({reason:t});return this.client.users.resolve(e)}}e.exports=GuildBanManager},87408:(e,t,i)=>{"use strict";const s=i(97742);const{Collection:r}=i(38861);const o=i(840);const l=i(22450);const{Error:c}=i(94436);const u=i(58354);const m=i(13727);const g=i(49595);const{ChannelTypes:v,ThreadChannelTypes:_}=i(98422);let T=false;let x=false;class GuildChannelManager extends o{constructor(e,t){super(e.client,u,t);const i=this._cache.constructor.name==="Collection"||(this._cache.maxSize===undefined||this._cache.maxSize===Infinity)&&(this._cache.sweepFilter===undefined||this._cache.sweepFilter.isDefault);if(!T&&!i){T=true;s.emitWarning(`Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,"UnsupportedCacheOverwriteWarning")}this.guild=e}get channelCountWithoutThreads(){return this.cache.reduce(((e,t)=>{if(_.includes(t.type))return e;return++e}),0)}_add(e){const t=this.cache.get(e.id);if(t)return t;this.cache.set(e.id,e);return e}resolve(e){if(e instanceof g)return super.resolve(e.id);return super.resolve(e)}resolveId(e){if(e instanceof g)return super.resolveId(e.id);return super.resolveId(e)}async create(e,{type:t,topic:i,nsfw:r,bitrate:o,userLimit:l,parent:c,permissionOverwrites:u,position:g,rateLimitPerUser:_,rtcRegion:T,reason:S}={}){c&&=this.client.channels.resolveId(c);u&&=u.map((e=>m.resolve(e,this.guild)));const A=typeof t==="number"?t:v[t]??v.GUILD_TEXT;if(A===v.GUILD_STORE&&!x){x=true;s.emitWarning("Creating store channels is deprecated by Discord and will stop working in March 2022. Check the docs for more info.","DeprecationWarning")}const I=await this.client.api.guilds(this.guild.id).channels.post({data:{name:e,topic:i,type:A,nsfw:r,bitrate:o,user_limit:l,parent_id:c,position:g,permission_overwrites:u,rate_limit_per_user:_,rtc_region:T},reason:S});return this.client.actions.ChannelCreate.handle(I).channel}async fetch(e,{cache:t=true,force:i=false}={}){if(e&&!i){const t=this.cache.get(e);if(t)return t}if(e){const i=await this.client.api.channels(e).get();if(this.guild.id!==i.guild_id)throw new c("GUILD_CHANNEL_UNOWNED");return this.client.channels._add(i,this.guild,{cache:t})}const s=await this.client.api.guilds(this.guild.id).channels.get();const o=new r;for(const e of s)o.set(e.id,this.client.channels._add(e,this.guild,{cache:t}));return o}async setPositions(e){e=e.map((e=>({id:this.client.channels.resolveId(e.channel),position:e.position,lock_permissions:e.lockPermissions,parent_id:typeof e.parent!=="undefined"?this.channels.resolveId(e.parent):undefined})));await this.client.api.guilds(this.guild.id).channels.patch({data:e});return this.client.actions.GuildChannelsPositionUpdate.handle({guild_id:this.guild.id,channels:e}).guild}async fetchActiveThreads(e=true){const t=await this.client.api.guilds(this.guild.id).threads.active.get();return l._mapThreads(t,this.client,{guild:this.guild,cache:e})}}e.exports=GuildChannelManager},15281:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(50701);const{TypeError:o}=i(94436);const l=i(73642);class GuildEmojiManager extends r{constructor(e,t){super(e.client,t);this.guild=e}_add(e,t){return super._add(e,t,{extras:[this.guild]})}async create(e,t,{roles:i,reason:r}={}){e=await l.resolveImage(e);if(!e)throw new o("REQ_RESOURCE_TYPE");const c={image:e,name:t};if(i){if(!Array.isArray(i)&&!(i instanceof s)){throw new o("INVALID_TYPE","options.roles","Array or Collection of Roles or Snowflakes",true)}c.roles=[];for(const e of i.values()){const t=this.guild.roles.resolveId(e);if(!t)throw new o("INVALID_ELEMENT","Array or Collection","options.roles",e);c.roles.push(t)}}const u=await this.client.api.guilds(this.guild.id).emojis.post({data:c,reason:r});return this.client.actions.GuildEmojiCreate.handle(this.guild,u).emoji}async fetch(e,{cache:t=true,force:i=false}={}){if(e){if(!i){const t=this.cache.get(e);if(t)return t}const s=await this.client.api.guilds(this.guild.id).emojis(e).get();return this._add(s,t)}const r=await this.client.api.guilds(this.guild.id).emojis.get();const o=new s;for(const e of r)o.set(e.id,this._add(e,t));return o}}e.exports=GuildEmojiManager},31760:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(82930);const{TypeError:o}=i(94436);const{Role:l}=i(20339);class GuildEmojiRoleManager extends r{constructor(e){super(e.client,l);this.emoji=e;this.guild=e.guild}get cache(){return this.guild.roles.cache.filter((e=>this.emoji._roles.includes(e.id)))}add(e){if(!Array.isArray(e)&&!(e instanceof s))e=[e];const t=[];for(const i of e.values()){const e=this.guild.roles.resolveId(i);if(!e){return Promise.reject(new o("INVALID_ELEMENT","Array or Collection","roles",i))}t.push(e)}const i=[...new Set(t.concat(...this.cache.keys()))];return this.set(i)}remove(e){if(!Array.isArray(e)&&!(e instanceof s))e=[e];const t=[];for(const i of e.values()){const e=this.guild.roles.resolveId(i);if(!e){return Promise.reject(new o("INVALID_ELEMENT","Array or Collection","roles",i))}t.push(e)}const i=[...this.cache.keys()].filter((e=>!t.includes(e)));return this.set(i)}set(e){return this.emoji.edit({roles:e})}clone(){const e=new this.constructor(this.emoji);e._patch([...this.cache.keys()]);return e}_patch(e){this.emoji._roles=e}valueOf(){return this.cache}}e.exports=GuildEmojiRoleManager},50504:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(840);const{Error:o}=i(94436);const l=i(93979);const c=i(73642);class GuildInviteManager extends r{constructor(e,t){super(e.client,l,t);this.guild=e}_add(e,t){return super._add(e,t,{id:e.code,extras:[this.guild]})}fetch(e){if(!e)return this._fetchMany();if(typeof e==="string"){const t=c.resolveInviteCode(e);if(!t)return Promise.reject(new o("INVITE_RESOLVE_CODE"));return this._fetchSingle({code:t,cache:true})}if(!e.code){if(e.channelId){const t=this.guild.channels.resolveId(e.channelId);if(!t)return Promise.reject(new o("GUILD_CHANNEL_RESOLVE"));return this._fetchChannelMany(t,e.cache)}if("cache"in e)return this._fetchMany(e.cache);return Promise.reject(new o("INVITE_RESOLVE_CODE"))}return this._fetchSingle({...e,code:c.resolveInviteCode(e.code)})}async _fetchSingle({code:e,cache:t,force:i=false}){if(!i){const t=this.cache.get(e);if(t)return t}const s=await this._fetchMany(t);const r=s.get(e);if(!r)throw new o("INVITE_NOT_FOUND");return r}async _fetchMany(e){const t=await this.client.api.guilds(this.guild.id).invites.get();return t.reduce(((t,i)=>t.set(i.code,this._add(i,e))),new s)}async _fetchChannelMany(e,t){const i=await this.client.api.channels(e).invites.get();return i.reduce(((e,i)=>e.set(i.code,this._add(i,t))),new s)}async create(e,{temporary:t=false,maxAge:i=86400,maxUses:s=0,unique:r,targetUser:c,targetApplication:u,targetType:m,reason:g}={}){const v=this.guild.channels.resolveId(e);if(!v)throw new o("GUILD_CHANNEL_RESOLVE");const _=await this.client.api.channels(v).invites.post({data:{temporary:t,max_age:i,max_uses:s,unique:r,target_user_id:this.client.users.resolveId(c),target_application_id:u?.id??u?.applicationId??u,target_type:m},reason:g});return new l(this.client,_)}async delete(e,t){const i=c.resolveInviteCode(e);await this.client.api.invites(i).delete({reason:t})}}e.exports=GuildInviteManager},91342:(e,t,i)=>{"use strict";const s=i(97742);const{setTimeout:r}=i(92332);const{Collection:o}=i(38861);const l=i(840);const{Guild:c}=i(87809);const u=i(58354);const m=i(78632);const{GuildMember:g}=i(27081);const v=i(93979);const _=i(23319);const{Role:T}=i(20339);const{ChannelTypes:x,Events:S,OverwriteTypes:A,VerificationLevels:I,DefaultMessageNotificationLevels:N,ExplicitContentFilterLevels:O}=i(98422);const R=i(73642);const k=i(97234);const P=i(25354);const{resolveColor:M}=i(28270);let q=false;class GuildManager extends l{constructor(e,t){super(e,c,t);if(!q&&this._cache.constructor.name!=="Collection"){q=true;s.emitWarning(`Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,"UnsupportedCacheOverwriteWarning")}}resolve(e){if(e instanceof u||e instanceof g||e instanceof m||e instanceof T||e instanceof v&&e.guild){return super.resolve(e.guild)}return super.resolve(e)}resolveId(e){if(e instanceof u||e instanceof g||e instanceof m||e instanceof T||e instanceof v&&e.guild){return super.resolveId(e.guild.id)}return super.resolveId(e)}async create(e,{afkChannelId:t,afkTimeout:i,channels:s=[],defaultMessageNotifications:o,explicitContentFilter:l,icon:c=null,roles:u=[],systemChannelId:m,systemChannelFlags:g,verificationLevel:v}={}){c=await R.resolveImage(c);if(typeof v==="string"){v=I[v]}if(typeof o==="string"){o=N[o]}if(typeof l==="string"){l=O[l]}for(const e of s){e.type&&=typeof e.type==="number"?e.type:x[e.type];e.parent_id=e.parentId;delete e.parentId;e.user_limit=e.userLimit;delete e.userLimit;e.rate_limit_per_user=e.rateLimitPerUser;delete e.rateLimitPerUser;e.rtc_region=e.rtcRegion;delete e.rtcRegion;if(!e.permissionOverwrites)continue;for(const t of e.permissionOverwrites){if(typeof t.type==="string"){t.type=A[t.type]}t.allow&&=k.resolve(t.allow).toString();t.deny&&=k.resolve(t.deny).toString()}e.permission_overwrites=e.permissionOverwrites;delete e.permissionOverwrites}for(const e of u){e.color&&=M(e.color);e.permissions&&=k.resolve(e.permissions).toString()}g&&=P.resolve(g);const _=await this.client.api.guilds.post({data:{name:e,icon:c,verification_level:v,default_message_notifications:o,explicit_content_filter:l,roles:u,channels:s,afk_channel_id:t,afk_timeout:i,system_channel_id:m,system_channel_flags:g}});if(this.client.guilds.cache.has(_.id))return this.client.guilds.cache.get(_.id);return new Promise((e=>{const handleGuild=i=>{if(i.id===_.id){clearTimeout(t);this.client.removeListener(S.GUILD_CREATE,handleGuild);this.client.decrementMaxListeners();e(i)}};this.client.incrementMaxListeners();this.client.on(S.GUILD_CREATE,handleGuild);const t=r((()=>{this.client.removeListener(S.GUILD_CREATE,handleGuild);this.client.decrementMaxListeners();e(this.client.guilds._add(_))}),1e4).unref()}))}async fetch(e={}){const t=this.resolveId(e)??this.resolveId(e.guild);if(t){if(!e.force){const e=this.cache.get(t);if(e)return e}const i=await this.client.api.guilds(t).get({query:{with_counts:e.withCounts??true}});return this._add(i,e.cache)}const i=await this.client.api.users("@me").guilds.get({query:e});return i.reduce(((e,t)=>e.set(t.id,new _(this.client,t))),new o)}}e.exports=GuildManager},65451:(e,t,i)=>{"use strict";const{Buffer:s}=i(72254);const{setTimeout:r}=i(92332);const{Collection:o}=i(38861);const l=i(840);const{Error:c,TypeError:u,RangeError:m}=i(94436);const g=i(32728);const{GuildMember:v}=i(27081);const{Role:_}=i(20339);const{Events:T,Opcodes:x}=i(98422);const S=i(40421);class GuildMemberManager extends l{constructor(e,t){super(e.client,v,t);this.guild=e}_add(e,t=true){return super._add(e,t,{id:e.user.id,extras:[this.guild]})}resolve(e){const t=super.resolve(e);if(t)return t;const i=this.client.users.resolveId(e);if(i)return super.resolve(i);return null}resolveId(e){const t=super.resolveId(e);if(t)return t;const i=this.client.users.resolveId(e);return this.cache.has(i)?i:null}async add(e,t){const i=this.client.users.resolveId(e);if(!i)throw new u("INVALID_TYPE","user","UserResolvable");if(!t.force){const e=this.cache.get(i);if(e)return e}const r={access_token:t.accessToken,nick:t.nick,mute:t.mute,deaf:t.deaf};if(t.roles){if(!Array.isArray(t.roles)&&!(t.roles instanceof o)){throw new u("INVALID_TYPE","options.roles","Array or Collection of Roles or Snowflakes",true)}const e=[];for(const i of t.roles.values()){const t=this.guild.roles.resolveId(i);if(!t)throw new u("INVALID_ELEMENT","Array or Collection","options.roles",i);e.push(t)}r.roles=e}const l=await this.client.api.guilds(this.guild.id).members(i).put({data:r});return l instanceof s?t.fetchWhenExisting===false?null:this.fetch(i):this._add(l)}fetch(e){if(!e)return this._fetchMany();const t=this.client.users.resolveId(e);if(t)return this._fetchSingle({user:t,cache:true});if(e.user){if(Array.isArray(e.user)){e.user=e.user.map((e=>this.client.users.resolveId(e)));return this._fetchMany(e)}else{e.user=this.client.users.resolveId(e.user)}if(!e.limit&&!e.withPresences)return this._fetchSingle(e)}return this._fetchMany(e)}async search({query:e,limit:t=1,cache:i=true}={}){const s=await this.client.api.guilds(this.guild.id).members.search.get({query:{query:e,limit:t}});return s.reduce(((e,t)=>e.set(t.user.id,this._add(t,i))),new o)}async list({after:e,limit:t=1,cache:i=true}={}){const s=await this.client.api.guilds(this.guild.id).members.get({query:{after:e,limit:t}});return s.reduce(((e,t)=>e.set(t.user.id,this._add(t,i))),new o)}async edit(e,t,i){const s=this.client.users.resolveId(e);if(!s)throw new u("INVALID_TYPE","user","UserResolvable");const r={...t};if(r.channel){r.channel=this.guild.channels.resolve(r.channel);if(!(r.channel instanceof g)){throw new c("GUILD_VOICE_CHANNEL_RESOLVE")}r.channel_id=r.channel.id;r.channel=undefined}else if(r.channel===null){r.channel_id=null;r.channel=undefined}r.roles&&=r.roles.map((e=>e instanceof _?e.id:e));r.communication_disabled_until=r.communicationDisabledUntil&&new Date(r.communicationDisabledUntil).toISOString();let o=this.client.api.guilds(this.guild.id);if(s===this.client.user.id){const e=Object.keys(t);if(e.length===1&&e[0]==="nick")o=o.members("@me");else o=o.members(s)}else{o=o.members(s)}const l=await o.patch({data:r,reason:i});const m=this.cache.get(s)?._clone();m?._patch(l);return m??this._add(l,false)}async prune({days:e=7,dry:t=false,count:i=true,roles:s=[],reason:r}={}){if(typeof e!=="number")throw new u("PRUNE_DAYS_TYPE");const o={days:e};const l=[];for(const e of s){const t=this.guild.roles.resolveId(e);if(!t){throw new u("INVALID_ELEMENT","Array","options.roles",e)}l.push(t)}if(l.length){o.include_roles=t?l.join(","):l}const c=this.client.api.guilds(this.guild.id).prune;const{pruned:m}=await(t?c.get({query:o,reason:r}):c.post({data:{...o,compute_prune_count:i},reason:r}));return m}async kick(e,t){const i=this.client.users.resolveId(e);if(!i)return Promise.reject(new u("INVALID_TYPE","user","UserResolvable"));await this.client.api.guilds(this.guild.id).members(i).delete({reason:t});return this.resolve(e)??this.client.users.resolve(e)??i}ban(e,t={days:0}){return this.guild.bans.create(e,t)}unban(e,t){return this.guild.bans.remove(e,t)}async _fetchSingle({user:e,cache:t,force:i=false}){if(!i){const t=this.cache.get(e);if(t&&!t.partial)return t}const s=await this.client.api.guilds(this.guild.id).members(e).get();return this._add(s,t)}_fetchMany({limit:e=0,withPresences:t=false,user:i,query:s,time:l=12e4,nonce:u=S.generate()}={}){return new Promise(((g,v)=>{if(!s&&!i)s="";if(u.length>32)throw new m("MEMBER_FETCH_NONCE_LENGTH");this.guild.shard.send({op:x.REQUEST_GUILD_MEMBERS,d:{guild_id:this.guild.id,presences:t,user_ids:i,query:s,nonce:u,limit:e}});const _=new o;let S=0;const handler=(t,s,r)=>{A.refresh();if(r.nonce!==u)return;S++;for(const e of t.values()){_.set(e.id,e)}if(t.size<1e3||e&&_.size>=e||S===r.count){clearTimeout(A);this.client.removeListener(T.GUILD_MEMBERS_CHUNK,handler);this.client.decrementMaxListeners();let e=_;if(i&&!Array.isArray(i)&&e.size)e=e.first();g(e)}};const A=r((()=>{this.client.removeListener(T.GUILD_MEMBERS_CHUNK,handler);this.client.decrementMaxListeners();v(new c("GUILD_MEMBERS_TIMEOUT"))}),l).unref();this.client.incrementMaxListeners();this.client.on(T.GUILD_MEMBERS_CHUNK,handler)}))}}e.exports=GuildMemberManager},73232:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(82930);const{TypeError:o}=i(94436);const{Role:l}=i(20339);class GuildMemberRoleManager extends r{constructor(e){super(e.client,l);this.member=e;this.guild=e.guild}get cache(){const e=this.guild.roles.everyone;return this.guild.roles.cache.filter((e=>this.member._roles.includes(e.id))).set(e.id,e)}get hoist(){const e=this.cache.filter((e=>e.hoist));if(!e.size)return null;return e.reduce(((e,t)=>t.comparePositionTo(e)>0?t:e))}get icon(){const e=this.cache.filter((e=>e.icon||e.unicodeEmoji));if(!e.size)return null;return e.reduce(((e,t)=>t.comparePositionTo(e)>0?t:e))}get color(){const e=this.cache.filter((e=>e.color));if(!e.size)return null;return e.reduce(((e,t)=>t.comparePositionTo(e)>0?t:e))}get highest(){return this.cache.reduce(((e,t)=>t.comparePositionTo(e)>0?t:e),this.cache.first())}get premiumSubscriberRole(){return this.cache.find((e=>e.tags?.premiumSubscriberRole))??null}get botRole(){if(!this.member.user.bot)return null;return this.cache.find((e=>e.tags?.botId===this.member.user.id))??null}async add(e,t){if(e instanceof s||Array.isArray(e)){const i=[];for(const t of e.values()){const e=this.guild.roles.resolveId(t);if(!e)throw new o("INVALID_ELEMENT","Array or Collection","roles",t);i.push(e)}const s=[...new Set(i.concat(...this.cache.keys()))];return this.set(s,t)}else{e=this.guild.roles.resolveId(e);if(e===null){throw new o("INVALID_TYPE","roles","Role, Snowflake or Array or Collection of Roles or Snowflakes")}await this.client.api.guilds[this.guild.id].members[this.member.id].roles[e].put({reason:t});const i=this.member._clone();i._roles=[...this.cache.keys(),e];return i}}async remove(e,t){if(e instanceof s||Array.isArray(e)){const i=[];for(const t of e.values()){const e=this.guild.roles.resolveId(t);if(!e)throw new o("INVALID_ELEMENT","Array or Collection","roles",t);i.push(e)}const s=this.cache.filter((e=>!i.includes(e.id)));return this.set(s,t)}else{e=this.guild.roles.resolveId(e);if(e===null){throw new o("INVALID_TYPE","roles","Role, Snowflake or Array or Collection of Roles or Snowflakes")}await this.client.api.guilds[this.guild.id].members[this.member.id].roles[e].delete({reason:t});const i=this.member._clone();const s=this.cache.filter((t=>t.id!==e));i._roles=[...s.keys()];return i}}set(e,t){return this.member.edit({roles:e},t)}clone(){const e=new this.constructor(this.member);e.member._roles=[...this.cache.keys()];return e}}e.exports=GuildMemberRoleManager},71266:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(840);const{TypeError:o,Error:l}=i(94436);const{GuildScheduledEvent:c}=i(5226);const{PrivacyLevels:u,GuildScheduledEventEntityTypes:m,GuildScheduledEventStatuses:g}=i(98422);class GuildScheduledEventManager extends r{constructor(e,t){super(e.client,c,t);this.guild=e}async create(e){if(typeof e!=="object")throw new o("INVALID_TYPE","options","object",true);let{privacyLevel:t,entityType:i,channel:s,name:r,scheduledStartTime:c,description:g,scheduledEndTime:v,entityMetadata:_,reason:T}=e;if(typeof t==="string")t=u[t];if(typeof i==="string")i=m[i];let x,S;if(i===m.EXTERNAL){S=typeof s==="undefined"?s:null;x={location:_?.location}}else{S=this.guild.channels.resolveId(s);if(!S)throw new l("GUILD_VOICE_CHANNEL_RESOLVE");x=typeof _==="undefined"?_:null}const A=await this.client.api.guilds(this.guild.id,"scheduled-events").post({data:{channel_id:S,name:r,privacy_level:t,scheduled_start_time:new Date(c).toISOString(),scheduled_end_time:v?new Date(v).toISOString():v,description:g,entity_type:i,entity_metadata:x},reason:T});return this._add(A)}async fetch(e={}){const t=this.resolveId(e.guildScheduledEvent??e);if(t){if(!e.force){const e=this.cache.get(t);if(e)return e}const i=await this.client.api.guilds(this.guild.id,"scheduled-events",t).get({query:{with_user_count:e.withUserCount??true}});return this._add(i,e.cache)}const i=await this.client.api.guilds(this.guild.id,"scheduled-events").get({query:{with_user_count:e.withUserCount??true}});return i.reduce(((t,i)=>t.set(i.id,this.guild.scheduledEvents._add(i,e.cache))),new s)}async edit(e,t){const i=this.resolveId(e);if(!i)throw new l("GUILD_SCHEDULED_EVENT_RESOLVE");if(typeof t!=="object")throw new o("INVALID_TYPE","options","object",true);let{privacyLevel:s,entityType:r,channel:c,status:v,name:_,scheduledStartTime:T,description:x,scheduledEndTime:S,entityMetadata:A,reason:I}=t;if(typeof s==="string")s=u[s];if(typeof r==="string")r=m[r];if(typeof v==="string")v=g[v];let N;if(A){N={location:A.location}}const O=await this.client.api.guilds(this.guild.id,"scheduled-events",i).patch({data:{channel_id:typeof c==="undefined"?c:this.guild.channels.resolveId(c),name:_,privacy_level:s,scheduled_start_time:T?new Date(T).toISOString():undefined,scheduled_end_time:S?new Date(S).toISOString():S,description:x,entity_type:r,status:v,entity_metadata:N},reason:I});return this._add(O)}async delete(e){const t=this.resolveId(e);if(!t)throw new l("GUILD_SCHEDULED_EVENT_RESOLVE");await this.client.api.guilds(this.guild.id,"scheduled-events",t).delete()}async fetchSubscribers(e,t={}){const i=this.resolveId(e);if(!i)throw new l("GUILD_SCHEDULED_EVENT_RESOLVE");let{limit:r,withMember:o,before:c,after:u}=t;const m=await this.client.api.guilds(this.guild.id,"scheduled-events",i).users.get({query:{limit:r,with_member:o,before:c,after:u}});return m.reduce(((e,t)=>e.set(t.user.id,{guildScheduledEventId:t.guild_scheduled_event_id,user:this.client.users._add(t.user),member:t.member?this.guild.members._add({...t.member,user:t.user}):null})),new s)}}e.exports=GuildScheduledEventManager},19653:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(840);const{TypeError:o}=i(94436);const l=i(4405);const{Sticker:c}=i(27149);class GuildStickerManager extends r{constructor(e,t){super(e.client,c,t);this.guild=e}_add(e,t){return super._add(e,t,{extras:[this.guild]})}async create(e,t,i,{description:s,reason:r}={}){const c=await l.resolveFile(e);if(!c)throw new o("REQ_RESOURCE_TYPE");e={...c,key:"file"};const u={name:t,tags:i,description:s??""};const m=await this.client.api.guilds(this.guild.id).stickers.post({data:u,files:[e],reason:r,dontUsePayloadJSON:true});return this.client.actions.GuildStickerCreate.handle(this.guild,m).sticker}async edit(e,t,i){const s=this.resolveId(e);if(!s)throw new o("INVALID_TYPE","sticker","StickerResolvable");const r=await this.client.api.guilds(this.guild.id).stickers(s).patch({data:t,reason:i});const l=this.cache.get(s);if(l){const e=l._clone();e._patch(r);return e}return this._add(r)}async delete(e,t){e=this.resolveId(e);if(!e)throw new o("INVALID_TYPE","sticker","StickerResolvable");await this.client.api.guilds(this.guild.id).stickers(e).delete({reason:t})}async fetch(e,{cache:t=true,force:i=false}={}){if(e){if(!i){const t=this.cache.get(e);if(t)return t}const s=await this.client.api.guilds(this.guild.id).stickers(e).get();return this._add(s,t)}const r=await this.client.api.guilds(this.guild.id).stickers.get();return new s(r.map((e=>[e.id,this._add(e,t)])))}}e.exports=GuildStickerManager},68207:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(840);const{TypeError:o}=i(94436);const{Message:l}=i(4975);const c=i(4405);const u=i(28270);class MessageManager extends r{constructor(e,t){super(e.client,l,t);this.channel=e}_add(e,t){return super._add(e,t)}fetch(e,{cache:t=true,force:i=false}={}){return typeof e==="string"?this._fetchId(e,t,i):this._fetchMany(e,t)}async fetchPinned(e=true){const t=await this.client.api.channels[this.channel.id].pins.get();const i=new s;for(const s of t)i.set(s.id,this._add(s,e));return i}async edit(e,t){const i=this.resolveId(e);if(!i)throw new o("INVALID_TYPE","message","MessageResolvable");const{data:s,files:r}=await(t instanceof c?t:c.create(e instanceof l?e:this,t)).resolveData().resolveFiles();const u=await this.client.api.channels[this.channel.id].messages[i].patch({data:s,files:r});const m=this.cache.get(i);if(m){const e=m._clone();e._patch(u);return e}return this._add(u)}async crosspost(e){e=this.resolveId(e);if(!e)throw new o("INVALID_TYPE","message","MessageResolvable");const t=await this.client.api.channels(this.channel.id).messages(e).crosspost.post();return this.cache.get(t.id)??this._add(t)}async pin(e){e=this.resolveId(e);if(!e)throw new o("INVALID_TYPE","message","MessageResolvable");await this.client.api.channels(this.channel.id).pins(e).put()}async unpin(e){e=this.resolveId(e);if(!e)throw new o("INVALID_TYPE","message","MessageResolvable");await this.client.api.channels(this.channel.id).pins(e).delete()}async react(e,t){e=this.resolveId(e);if(!e)throw new o("INVALID_TYPE","message","MessageResolvable");t=u.resolvePartialEmoji(t);if(!t)throw new o("EMOJI_TYPE","emoji","EmojiIdentifierResolvable");const i=t.id?`${t.animated?"a:":""}${t.name}:${t.id}`:encodeURIComponent(t.name);await this.client.api.channels(this.channel.id).messages(e).reactions(i,"@me").put()}async delete(e){e=this.resolveId(e);if(!e)throw new o("INVALID_TYPE","message","MessageResolvable");await this.client.api.channels(this.channel.id).messages(e).delete()}async _fetchId(e,t,i){if(!i){const t=this.cache.get(e);if(t&&!t.partial)return t}const s=await this.client.api.channels[this.channel.id].messages[e].get();return this._add(s,t)}async _fetchMany(e={},t){const i=await this.client.api.channels[this.channel.id].messages.get({query:e});const r=new s;for(const e of i)r.set(e.id,this._add(e,t));return r}}e.exports=MessageManager},89817:(e,t,i)=>{"use strict";const s=i(97742);const{Collection:r}=i(38861);const o=i(840);const{TypeError:l}=i(94436);const c=i(13727);const{Role:u}=i(20339);const{OverwriteTypes:m}=i(98422);let g=false;class PermissionOverwriteManager extends o{constructor(e,t){super(e.client,c);if(!g&&this._cache.constructor.name!=="Collection"){g=true;s.emitWarning(`Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,"UnsupportedCacheOverwriteWarning")}this.channel=e;if(t){for(const e of t){this._add(e)}}}_add(e,t){return super._add(e,t,{extras:[this.channel]})}set(e,t){if(!Array.isArray(e)&&!(e instanceof r)){return Promise.reject(new l("INVALID_TYPE","overwrites","Array or Collection of Permission Overwrites",true))}return this.channel.edit({permissionOverwrites:e,reason:t})}async upsert(e,t,i={},s){let r=this.channel.guild.roles.resolveId(e)??this.client.users.resolveId(e);let{type:o,reason:g}=i;if(typeof o!=="number"){e=this.channel.guild.roles.resolve(e)??this.client.users.resolve(e);if(!e)throw new l("INVALID_TYPE","parameter","User nor a Role");o=e instanceof u?m.role:m.member}const{allow:v,deny:_}=c.resolveOverwriteOptions(t,s);await this.client.api.channels(this.channel.id).permissions(r).put({data:{id:r,type:o,allow:v,deny:_},reason:g});return this.channel}create(e,t,i){return this.upsert(e,t,i)}edit(e,t,i){e=this.channel.guild.roles.resolveId(e)??this.client.users.resolveId(e);const s=this.cache.get(e);return this.upsert(e,t,i,s)}async delete(e,t){const i=this.channel.guild.roles.resolveId(e)??this.client.users.resolveId(e);if(!i)throw new l("INVALID_TYPE","parameter","User nor a Role");await this.client.api.channels(this.channel.id).permissions(i).delete({reason:t});return this.channel}}e.exports=PermissionOverwriteManager},63498:(e,t,i)=>{"use strict";const s=i(840);const{Presence:r}=i(98916);class PresenceManager extends s{constructor(e,t){super(e,r,t)}_add(e,t){return super._add(e,t,{id:e.user.id})}resolve(e){const t=super.resolve(e);if(t)return t;const i=this.client.users.resolveId(e);return super.resolve(i)}resolveId(e){const t=super.resolveId(e);if(t)return t;const i=this.client.users.resolveId(e);return this.cache.has(i)?i:null}}e.exports=PresenceManager},19277:(e,t,i)=>{"use strict";const s=i(840);const r=i(2190);class ReactionManager extends s{constructor(e,t){super(e.client,r,t);this.message=e}_add(e,t){return super._add(e,t,{id:e.emoji.id??e.emoji.name,extras:[this.message]})}async removeAll(){await this.client.api.channels(this.message.channelId).messages(this.message.id).reactions.delete();return this.message}}e.exports=ReactionManager},95502:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(840);const{Error:o}=i(94436);const l=i(96283);class ReactionUserManager extends r{constructor(e,t){super(e.client,l,t);this.reaction=e}async fetch({limit:e=100,after:t}={}){const i=this.reaction.message;const r=await this.client.api.channels[i.channelId].messages[i.id].reactions[this.reaction.emoji.identifier].get({query:{limit:e,after:t}});const o=new s;for(const e of r){const t=this.client.users._add(e);this.cache.set(t.id,t);o.set(t.id,t)}return o}async remove(e=this.client.user){const t=this.client.users.resolveId(e);if(!t)throw new o("REACTION_RESOLVE_USER");const i=this.reaction.message;await this.client.api.channels[i.channelId].messages[i.id].reactions[this.reaction.emoji.identifier][t===this.client.user.id?"@me":t].delete();return this.reaction}}e.exports=ReactionUserManager},28574:(e,t,i)=>{"use strict";const s=i(97742);const{Collection:r}=i(38861);const o=i(840);const{TypeError:l}=i(94436);const{Role:c}=i(20339);const u=i(73642);const m=i(97234);const{resolveColor:g,setPosition:v}=i(28270);let _=false;class RoleManager extends o{constructor(e,t){super(e.client,c,t);if(!_&&this._cache.constructor.name!=="Collection"){_=true;s.emitWarning(`Overriding the cache handling for ${this.constructor.name} is unsupported and breaks functionality.`,"UnsupportedCacheOverwriteWarning")}this.guild=e}_add(e,t){return super._add(e,t,{extras:[this.guild]})}async fetch(e,{cache:t=true,force:i=false}={}){if(e&&!i){const t=this.cache.get(e);if(t)return t}const s=await this.client.api.guilds(this.guild.id).roles.get();const o=new r;for(const e of s)o.set(e.id,this._add(e,t));return e?o.get(e)??null:o}async create(e={}){let{name:t,color:i,hoist:s,permissions:r,position:o,mentionable:l,reason:c,icon:v,unicodeEmoji:_}=e;i&&=g(i);if(typeof r!=="undefined")r=new m(r);if(v){const e=this.guild.emojis.resolve(v)?.url;v=e?await u.resolveImage(e):await u.resolveImage(v);if(typeof v!=="string")v=undefined}const T=await this.client.api.guilds(this.guild.id).roles.post({data:{name:t,color:i,hoist:s,permissions:r,mentionable:l,icon:v,unicode_emoji:_},reason:c});const{role:x}=this.client.actions.GuildRoleCreate.handle({guild_id:this.guild.id,role:T});if(o)return x.setPosition(o,c);return x}async edit(e,t,i){e=this.resolve(e);if(!e)throw new l("INVALID_TYPE","role","RoleResolvable");if(typeof t.position==="number"){const s=await v(e,t.position,false,this.guild._sortedRoles(),this.client.api.guilds(this.guild.id).roles,i);this.client.actions.GuildRolesPositionUpdate.handle({guild_id:this.guild.id,roles:s})}let s=t.icon;if(s){const e=this.guild.emojis.resolve(s)?.url;s=e?await u.resolveImage(e):await u.resolveImage(s);if(typeof s!=="string")s=undefined}const r={name:t.name,color:typeof t.color==="undefined"?undefined:g(t.color),hoist:t.hoist,permissions:typeof t.permissions==="undefined"?undefined:new m(t.permissions),mentionable:t.mentionable,icon:s,unicode_emoji:t.unicodeEmoji};const o=await this.client.api.guilds(this.guild.id).roles(e.id).patch({data:r,reason:i});const c=e._clone();c._patch(o);return c}async delete(e,t){const i=this.resolveId(e);await this.client.api.guilds[this.guild.id].roles[i].delete({reason:t});this.client.actions.GuildRoleDelete.handle({guild_id:this.guild.id,role_id:i})}async setPositions(e){e=e.map((e=>({id:this.resolveId(e.role),position:e.position})));await this.client.api.guilds(this.guild.id).roles.patch({data:e});return this.client.actions.GuildRolesPositionUpdate.handle({guild_id:this.guild.id,roles:e}).guild}comparePositions(e,t){const i=this.resolve(e);const s=this.resolve(t);if(!i||!s)throw new l("INVALID_TYPE","role","Role nor a Snowflake");if(i.position===s.position){return Number(BigInt(s.id)-BigInt(i.id))}return i.position-s.position}botRoleFor(e){const t=this.client.users.resolveId(e);if(!t)return null;return this.cache.find((e=>e.tags?.botId===t))??null}get everyone(){return this.cache.get(this.guild.id)}get premiumSubscriberRole(){return this.cache.find((e=>e.tags?.premiumSubscriberRole))??null}get highest(){return this.cache.reduce(((e,t)=>t.comparePositionTo(e)>0?t:e),this.cache.first())}}e.exports=RoleManager},29879:(e,t,i)=>{"use strict";const s=i(840);const{TypeError:r,Error:o}=i(94436);const{StageInstance:l}=i(9162);const{PrivacyLevels:c}=i(98422);class StageInstanceManager extends s{constructor(e,t){super(e.client,l,t);this.guild=e}async create(e,t){const i=this.guild.channels.resolveId(e);if(!i)throw new o("STAGE_CHANNEL_RESOLVE");if(typeof t!=="object")throw new r("INVALID_TYPE","options","object",true);let{topic:s,privacyLevel:l}=t;l&&=typeof l==="number"?l:c[l];const u=await this.client.api["stage-instances"].post({data:{channel_id:i,topic:s,privacy_level:l}});return this._add(u)}async fetch(e,{cache:t=true,force:i=false}={}){const s=this.guild.channels.resolveId(e);if(!s)throw new o("STAGE_CHANNEL_RESOLVE");if(!i){const e=this.cache.find((e=>e.channelId===s));if(e)return e}const r=await this.client.api("stage-instances",s).get();return this._add(r,t)}async edit(e,t){if(typeof t!=="object")throw new r("INVALID_TYPE","options","object",true);const i=this.guild.channels.resolveId(e);if(!i)throw new o("STAGE_CHANNEL_RESOLVE");let{topic:s,privacyLevel:l}=t;l&&=typeof l==="number"?l:c[l];const u=await this.client.api("stage-instances",i).patch({data:{topic:s,privacy_level:l}});if(this.cache.has(u.id)){const e=this.cache.get(u.id)._clone();e._patch(u);return e}return this._add(u)}async delete(e){const t=this.guild.channels.resolveId(e);if(!t)throw new o("STAGE_CHANNEL_RESOLVE");await this.client.api("stage-instances",t).delete()}}e.exports=StageInstanceManager},22450:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(840);const{TypeError:o}=i(94436);const l=i(49595);const{ChannelTypes:c}=i(98422);class ThreadManager extends r{constructor(e,t){super(e.client,l,t);this.channel=e}_add(e){const t=this.cache.get(e.id);if(t)return t;this.cache.set(e.id,e);return e}async create({name:e,autoArchiveDuration:t=this.channel.defaultAutoArchiveDuration,startMessage:i,type:s,invitable:r,reason:l,rateLimitPerUser:u}={}){let m=this.client.api.channels(this.channel.id);if(s&&typeof s!=="string"&&typeof s!=="number"){throw new o("INVALID_TYPE","type","ThreadChannelType or Number")}let g=this.channel.type==="GUILD_NEWS"?c.GUILD_NEWS_THREAD:c.GUILD_PUBLIC_THREAD;if(i){const e=this.channel.messages.resolveId(i);if(!e)throw new o("INVALID_TYPE","startMessage","MessageResolvable");m=m.messages(e)}else if(this.channel.type!=="GUILD_NEWS"){g=typeof s==="string"?c[s]:s??g}if(t==="MAX"){t=1440;if(this.channel.guild.features.includes("SEVEN_DAY_THREAD_ARCHIVE")){t=10080}else if(this.channel.guild.features.includes("THREE_DAY_THREAD_ARCHIVE")){t=4320}}const v=await m.threads.post({data:{name:e,auto_archive_duration:t,type:g,invitable:g===c.GUILD_PRIVATE_THREAD?r:undefined,rate_limit_per_user:u},reason:l});return this.client.actions.ThreadCreate.handle(v).thread}fetch(e,{cache:t=true,force:i=false}={}){if(!e)return this.fetchActive(t);const s=this.client.channels.resolveId(e);if(s)return this.client.channels.fetch(s,t,i);if(e.archived){return this.fetchArchived(e.archived,t)}return this.fetchActive(t)}async fetchArchived({type:e="public",fetchAll:t=false,before:i,limit:s}={},r=true){let c=this.client.api.channels(this.channel.id);if(e==="private"&&!t){c=c.users("@me")}let u;let m;if(typeof i!=="undefined"){if(i instanceof l||/^\d{16,19}$/.test(String(i))){m=this.resolveId(i);u=this.resolve(i)?.archivedAt?.toISOString()}else{try{u=new Date(i).toISOString()}catch{throw new o("INVALID_TYPE","before","DateResolvable or ThreadChannelResolvable")}}}const g=await c.threads.archived(e).get({query:{before:e==="private"&&!t?m:u,limit:s}});return this.constructor._mapThreads(g,this.client,{parent:this.channel,cache:r})}async fetchActive(e=true){const t=await this.client.api.guilds(this.channel.guild.id).threads.active.get();return this.constructor._mapThreads(t,this.client,{parent:this.channel,cache:e})}static _mapThreads(e,t,{parent:i,guild:r,cache:o}){const l=e.threads.reduce(((e,s)=>{const l=t.channels._add(s,r??i?.guild,{cache:o});if(i&&l.parentId!==i.id)return e;return e.set(l.id,l)}),new s);for(const i of e.members)t.channels.cache.get(i.id)?.members._add(i);return{threads:l,hasMore:e.has_more??false}}}e.exports=ThreadManager},57283:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(840);const{TypeError:o}=i(94436);const l=i(89044);class ThreadMemberManager extends r{constructor(e,t){super(e.client,l,t);this.thread=e}_add(e,t=true){const i=this.cache.get(e.user_id);if(t)i?._patch(e);if(i)return i;const s=new l(this.thread,e);if(t)this.cache.set(e.user_id,s);return s}resolve(e){const t=super.resolve(e);if(t)return t;const i=this.client.users.resolveId(e);if(i)return super.resolve(i);return null}resolveId(e){const t=super.resolveId(e);if(t)return t;const i=this.client.users.resolveId(e);return this.cache.has(i)?i:null}async add(e,t){const i=e==="@me"?e:this.client.users.resolveId(e);if(!i)throw new o("INVALID_TYPE","member","UserResolvable");await this.client.api.channels(this.thread.id,"thread-members",i).put({reason:t});return i}async remove(e,t){await this.client.api.channels(this.thread.id,"thread-members",e).delete({reason:t});return e}async _fetchOne(e,t,i){if(!i){const t=this.cache.get(e);if(t)return t}const s=await this.client.api.channels(this.thread.id,"thread-members",e).get();return this._add(s,t)}async _fetchMany(e){const t=await this.client.api.channels(this.thread.id,"thread-members").get();return t.reduce(((t,i)=>t.set(i.user_id,this._add(i,e))),new s)}fetch(e,{cache:t=true,force:i=false}={}){const s=this.resolveId(e);return s?this._fetchOne(s,t,i):this._fetchMany(e??t)}}e.exports=ThreadMemberManager},72672:(e,t,i)=>{"use strict";const s=i(840);const{GuildMember:r}=i(27081);const{Message:o}=i(4975);const l=i(89044);const c=i(96283);class UserManager extends s{constructor(e,t){super(e,c,t)}dmChannel(e){return this.client.channels.cache.find((t=>t.type==="DM"&&t.recipient.id===e))??null}async createDM(e,{cache:t=true,force:i=false}={}){const s=this.resolveId(e);if(!i){const e=this.dmChannel(s);if(e&&!e.partial)return e}const r=await this.client.api.users(this.client.user.id).channels.post({data:{recipient_id:s}});return this.client.channels._add(r,null,{cache:t})}async deleteDM(e){const t=this.resolveId(e);const i=this.dmChannel(t);if(!i)throw new Error("USER_NO_DM_CHANNEL");await this.client.api.channels(i.id).delete();this.client.channels._remove(i.id);return i}async fetch(e,{cache:t=true,force:i=false}={}){const s=this.resolveId(e);if(!i){const e=this.cache.get(s);if(e&&!e.partial)return e}const r=await this.client.api.users(s).get();return this._add(r,t)}async fetchFlags(e,t){return(await this.fetch(e,t)).flags}async send(e,t){return(await this.createDM(e)).send(t)}resolve(e){if(e instanceof r||e instanceof l)return e.user;if(e instanceof o)return e.author;return super.resolve(e)}resolveId(e){if(e instanceof l)return e.id;if(e instanceof r)return e.user.id;if(e instanceof o)return e.author.id;return super.resolveId(e)}}e.exports=UserManager},56788:(e,t,i)=>{"use strict";const s=i(840);const r=i(79721);class VoiceStateManager extends s{constructor(e,t){super(e.client,r,t);this.guild=e}_add(e,t=true){const i=this.cache.get(e.user_id);if(i)return i._patch(e);const s=new this.holds(this.guild,e);if(t)this.cache.set(e.user_id,s);return s}}e.exports=VoiceStateManager},24572:(e,t,i)=>{"use strict";const s=i(22286);const{setTimeout:r}=i(92332);const o=i(64334);const l=i(80467);const{UserAgent:c}=i(98422);let u=null;class APIRequest{constructor(e,t,i,s){this.rest=e;this.client=e.client;this.method=t;this.route=s.route;this.options=s;this.retries=0;const{userAgentSuffix:r}=this.client.options;this.fullUserAgent=`${c}${r.length?`, ${r.join(", ")}`:""}`;let o="";if(s.query){const e=Object.entries(s.query).filter((([,e])=>e!==null&&typeof e!=="undefined")).flatMap((([e,t])=>Array.isArray(t)?t.map((t=>[e,t])):[[e,t]]));o=new URLSearchParams(e).toString()}this.path=`${i}${o&&`?${o}`}`}make(){u??=new s.Agent({...this.client.options.http.agent,keepAlive:true});const e=this.options.versioned===false?this.client.options.http.api:`${this.client.options.http.api}/v${this.client.options.http.version}`;const t=e+this.path;let i={...this.client.options.http.headers,"User-Agent":this.fullUserAgent};if(this.options.auth!==false)i.Authorization=this.rest.getAuth();if(this.options.reason)i["X-Audit-Log-Reason"]=encodeURIComponent(this.options.reason);if(this.options.headers)i=Object.assign(i,this.options.headers);let c;if(this.options.files?.length){c=new o;for(const[e,t]of this.options.files.entries()){if(t?.file)c.append(t.key??`files[${e}]`,t.file,t.name)}if(typeof this.options.data!=="undefined"){if(this.options.dontUsePayloadJSON){for(const[e,t]of Object.entries(this.options.data))c.append(e,t)}else{c.append("payload_json",JSON.stringify(this.options.data))}}i=Object.assign(i,c.getHeaders())}else if(this.options.data!=null){c=JSON.stringify(this.options.data);i["Content-Type"]="application/json"}const m=new AbortController;const g=r((()=>m.abort()),this.client.options.restRequestTimeout).unref();return l(t,{method:this.method,headers:i,agent:u,body:c,signal:m.signal}).finally((()=>clearTimeout(g)))}}e.exports=APIRequest},84135:e=>{"use strict";const noop=()=>{};const t=["get","post","delete","patch","put"];const i=["toString","valueOf","inspect","constructor",Symbol.toPrimitive,Symbol.for("nodejs.util.inspect.custom")];function buildRoute(e){const s=[""];const r={get(o,l){if(i.includes(l))return()=>s.join("/");if(t.includes(l)){const t=[];for(let e=0;e<s.length;e++){if(s[e-1]==="reactions")break;if(/\d{16,19}/g.test(s[e])&&!/channels|guilds/.test(s[e-1]))t.push(":id");else t.push(s[e])}return i=>e.request(l,s.join("/"),Object.assign({versioned:e.versioned,route:t.join("/")},i))}s.push(l);return new Proxy(noop,r)},apply(e,t,i){s.push(...i.filter((e=>e!=null)));return new Proxy(noop,r)}};return new Proxy(noop,r)}e.exports=buildRoute},33024:e=>{"use strict";class DiscordAPIError extends Error{constructor(e,t,i){super();const s=this.constructor.flattenErrors(e.errors??e).join("\n");this.name="DiscordAPIError";this.message=e.message&&s?`${e.message}\n${s}`:e.message??s;this.method=i.method;this.path=i.path;this.code=e.code;this.httpStatus=t;this.requestData={json:i.options.data,files:i.options.files??[]}}static flattenErrors(e,t=""){let i=[];for(const[s,r]of Object.entries(e)){if(s==="message")continue;const e=t?isNaN(s)?`${t}.${s}`:`${t}[${s}]`:s;if(r._errors){i.push(`${e}: ${r._errors.map((e=>e.message)).join(" ")}`)}else if(r.code??r.message){i.push(`${r.code?`${r.code}: `:""}${r.message}`.trim())}else if(typeof r==="string"){i.push(r)}else{i=i.concat(this.flattenErrors(r,e))}}return i}}e.exports=DiscordAPIError},48618:e=>{"use strict";class HTTPError extends Error{constructor(e,t,i,s){super(e);this.name=t;this.code=i??500;this.method=s.method;this.path=s.path;this.requestData={json:s.options.data,files:s.options.files??[]}}}e.exports=HTTPError},97919:(e,t,i)=>{"use strict";const{setInterval:s}=i(92332);const{Collection:r}=i(38861);const o=i(24572);const l=i(84135);const c=i(15746);const{Error:u}=i(94436);const{Endpoints:m}=i(98422);class RESTManager{constructor(e){this.client=e;this.handlers=new r;this.versioned=true;this.globalLimit=e.options.restGlobalRateLimit>0?e.options.restGlobalRateLimit:Infinity;this.globalRemaining=this.globalLimit;this.globalReset=null;this.globalDelay=null;if(e.options.restSweepInterval>0){this.sweepInterval=s((()=>{this.handlers.sweep((e=>e._inactive))}),e.options.restSweepInterval*1e3).unref()}}get api(){return l(this)}getAuth(){const e=this.client.token??this.client.accessToken;if(e)return`Bot ${e}`;throw new u("TOKEN_MISSING")}get cdn(){return m.CDN(this.client.options.http.cdn)}request(e,t,i={}){const s=new o(this,e,t,i);let r=this.handlers.get(s.route);if(!r){r=new c(this);this.handlers.set(s.route,r)}return r.push(s)}get endpoint(){return this.client.options.http.api}set endpoint(e){this.client.options.http.api=e}}e.exports=RESTManager},41486:e=>{"use strict";class RateLimitError extends Error{constructor({timeout:e,limit:t,method:i,path:s,route:r,global:o}){super(`A ${o?"global ":""}rate limit was hit on route ${r}`);this.name="RateLimitError";this.timeout=e;this.method=i;this.path=s;this.route=r;this.global=o;this.limit=t}}e.exports=RateLimitError},15746:(e,t,i)=>{"use strict";const{setTimeout:s}=i(92332);const{setTimeout:r}=i(99397);const{AsyncQueue:o}=i(36181);const l=i(33024);const c=i(48618);const u=i(41486);const{Events:{DEBUG:m,RATE_LIMIT:g,INVALID_REQUEST_WARNING:v,API_RESPONSE:_,API_REQUEST:T}}=i(98422);function parseResponse(e){if(e.headers.get("content-type").startsWith("application/json"))return e.json();return e.buffer()}function getAPIOffset(e){return new Date(e).getTime()-Date.now()}function calculateReset(e,t,i){if(t){return Date.now()+Number(t)*1e3}return new Date(Number(e)*1e3).getTime()-getAPIOffset(i)}let x=0;let S=null;class RequestHandler{constructor(e){this.manager=e;this.queue=new o;this.reset=-1;this.remaining=-1;this.limit=-1}async push(e){await this.queue.wait();try{return await this.execute(e)}finally{this.queue.shift()}}get globalLimited(){return this.manager.globalRemaining<=0&&Date.now()<this.manager.globalReset}get localLimited(){return this.remaining<=0&&Date.now()<this.reset}get limited(){return this.globalLimited||this.localLimited}get _inactive(){return this.queue.remaining===0&&!this.limited}globalDelayFor(e){return new Promise((t=>{s((()=>{this.manager.globalDelay=null;t()}),e).unref()}))}async onRateLimit(e,t,i,s){const{options:r}=this.manager.client;if(!r.rejectOnRateLimit)return;const o={timeout:i,limit:t,method:e.method,path:e.path,route:e.route,global:s};const l=typeof r.rejectOnRateLimit==="function"?await r.rejectOnRateLimit(o):r.rejectOnRateLimit.some((e=>o.route.startsWith(e.toLowerCase())));if(l){throw new u(o)}}async execute(e){while(this.limited){const t=this.globalLimited;let i,s,o;if(t){i=this.manager.globalLimit;s=this.manager.globalReset+this.manager.client.options.restTimeOffset-Date.now()}else{i=this.limit;s=this.reset+this.manager.client.options.restTimeOffset-Date.now()}if(this.manager.client.listenerCount(g)){this.manager.client.emit(g,{timeout:s,limit:i,method:e.method,path:e.path,route:e.route,global:t})}if(t){if(!this.manager.globalDelay){this.manager.globalDelay=this.globalDelayFor(s)}o=this.manager.globalDelay}else{o=r(s)}await this.onRateLimit(e,i,s,t);await o}if(!this.manager.globalReset||this.manager.globalReset<Date.now()){this.manager.globalReset=Date.now()+1e3;this.manager.globalRemaining=this.manager.globalLimit}this.manager.globalRemaining--;if(this.manager.client.listenerCount(T)){this.manager.client.emit(T,{method:e.method,path:e.path,route:e.route,options:e.options,retries:e.retries})}let t;try{t=await e.make()}catch(t){if(e.retries===this.manager.client.options.retryLimit){throw new c(t.message,t.constructor.name,t.status,e)}e.retries++;return this.execute(e)}if(this.manager.client.listenerCount(_)){this.manager.client.emit(_,{method:e.method,path:e.path,route:e.route,options:e.options,retries:e.retries},t.clone())}let i;if(t.headers){const s=t.headers.get("date");const r=t.headers.get("x-ratelimit-limit");const o=t.headers.get("x-ratelimit-remaining");const l=t.headers.get("x-ratelimit-reset");const c=t.headers.get("x-ratelimit-reset-after");this.limit=r?Number(r):Infinity;this.remaining=o?Number(o):1;this.reset=l||c?calculateReset(l,c,s):Date.now();if(!c&&e.route.includes("reactions")){this.reset=new Date(s).getTime()-getAPIOffset(s)+250}let u=t.headers.get("retry-after");u=u?Number(u)*1e3:-1;if(u>0){if(t.headers.get("x-ratelimit-global")){this.manager.globalRemaining=0;this.manager.globalReset=Date.now()+u}else if(!this.localLimited){i=u}}}if(t.status===401||t.status===403||t.status===429){if(!S||S<Date.now()){S=Date.now()+1e3*60*10;x=0}x++;const e=this.manager.client.listenerCount(v)&&this.manager.client.options.invalidRequestWarningInterval>0&&x%this.manager.client.options.invalidRequestWarningInterval===0;if(e){this.manager.client.emit(v,{count:x,remainingTime:S-Date.now()})}}if(t.ok){return parseResponse(t)}if(t.status>=400&&t.status<500){if(t.status===429){const t=this.globalLimited;let s,o;if(t){s=this.manager.globalLimit;o=this.manager.globalReset+this.manager.client.options.restTimeOffset-Date.now()}else{s=this.limit;o=this.reset+this.manager.client.options.restTimeOffset-Date.now()}this.manager.client.emit(m,`Hit a 429 while executing a request.\n    Global  : ${t}\n    Method  : ${e.method}\n    Path    : ${e.path}\n    Route   : ${e.route}\n    Limit   : ${s}\n    Timeout : ${o}ms\n    Sublimit: ${i?`${i}ms`:"None"}`);await this.onRateLimit(e,s,o,t);if(i){await r(i)}return this.execute(e)}let s;try{s=await parseResponse(t)}catch(t){throw new c(t.message,t.constructor.name,t.status,e)}throw new l(s,t.status,e)}if(t.status>=500&&t.status<600){if(e.retries===this.manager.client.options.retryLimit){throw new c(t.statusText,t.constructor.name,t.status,e)}e.retries++;return this.execute(e)}return null}}e.exports=RequestHandler},42303:(e,t,i)=>{"use strict";const s=i(15673);const r=i(49411);const o=i(97742);const{setTimeout:l}=i(92332);const{setTimeout:c}=i(99397);const{Error:u}=i(94436);const m=i(28270);let g=null;let v=null;class Shard extends s{constructor(e,t){super();if(e.mode==="process")g=i(17718);else if(e.mode==="worker")v=i(24086).Worker;this.manager=e;this.id=t;this.args=e.shardArgs??[];this.execArgv=e.execArgv;this.env=Object.assign({},o.env,{SHARDING_MANAGER:true,SHARDS:this.id,SHARD_COUNT:this.manager.totalShards,DISCORD_TOKEN:this.manager.token});this.ready=false;this.process=null;this.worker=null;this._evals=new Map;this._fetches=new Map;this._exitListener=null}spawn(e=3e4){if(this.process)throw new u("SHARDING_PROCESS_EXISTS",this.id);if(this.worker)throw new u("SHARDING_WORKER_EXISTS",this.id);this._exitListener=this._handleExit.bind(this,undefined,e);if(this.manager.mode==="process"){this.process=g.fork(r.resolve(this.manager.file),this.args,{env:this.env,execArgv:this.execArgv}).on("message",this._handleMessage.bind(this)).on("exit",this._exitListener)}else if(this.manager.mode==="worker"){this.worker=new v(r.resolve(this.manager.file),{workerData:this.env}).on("message",this._handleMessage.bind(this)).on("exit",this._exitListener)}this._evals.clear();this._fetches.clear();const t=this.process??this.worker;this.emit("spawn",t);if(e===-1||e===Infinity)return Promise.resolve(t);return new Promise(((i,s)=>{const cleanup=()=>{clearTimeout(r);this.off("ready",onReady);this.off("disconnect",onDisconnect);this.off("death",onDeath)};const onReady=()=>{cleanup();i(t)};const onDisconnect=()=>{cleanup();s(new u("SHARDING_READY_DISCONNECTED",this.id))};const onDeath=()=>{cleanup();s(new u("SHARDING_READY_DIED",this.id))};const onTimeout=()=>{cleanup();s(new u("SHARDING_READY_TIMEOUT",this.id))};const r=l(onTimeout,e);this.once("ready",onReady);this.once("disconnect",onDisconnect);this.once("death",onDeath)}))}kill(){if(this.process){this.process.removeListener("exit",this._exitListener);this.process.kill()}else{this.worker.removeListener("exit",this._exitListener);this.worker.terminate()}this._handleExit(false)}async respawn({delay:e=500,timeout:t=3e4}={}){this.kill();if(e>0)await c(e);return this.spawn(t)}send(e){return new Promise(((t,i)=>{if(this.process){this.process.send(e,(e=>{if(e)i(e);else t(this)}))}else{this.worker.postMessage(e);t(this)}}))}fetchClientValue(e){if(!this.process&&!this.worker)return Promise.reject(new u("SHARDING_NO_CHILD_EXISTS",this.id));if(this._fetches.has(e))return this._fetches.get(e);const t=new Promise(((t,i)=>{const s=this.process??this.worker;const listener=r=>{if(r?._fetchProp!==e)return;s.removeListener("message",listener);this._fetches.delete(e);if(!r._error)t(r._result);else i(m.makeError(r._error))};s.on("message",listener);this.send({_fetchProp:e}).catch((t=>{s.removeListener("message",listener);this._fetches.delete(e);i(t)}))}));this._fetches.set(e,t);return t}eval(e,t){const i=typeof e==="function"?`(${e})(this, ${JSON.stringify(t)})`:e;if(!this.process&&!this.worker)return Promise.reject(new u("SHARDING_NO_CHILD_EXISTS",this.id));if(this._evals.has(i))return this._evals.get(i);const s=new Promise(((e,t)=>{const s=this.process??this.worker;const listener=r=>{if(r?._eval!==i)return;s.removeListener("message",listener);this._evals.delete(i);if(!r._error)e(r._result);else t(m.makeError(r._error))};s.on("message",listener);this.send({_eval:i}).catch((e=>{s.removeListener("message",listener);this._evals.delete(i);t(e)}))}));this._evals.set(i,s);return s}_handleMessage(e){if(e){if(e._ready){this.ready=true;this.emit("ready");return}if(e._disconnect){this.ready=false;this.emit("disconnect");return}if(e._reconnecting){this.ready=false;this.emit("reconnecting");return}if(e._sFetchProp){const t={_sFetchProp:e._sFetchProp,_sFetchPropShard:e._sFetchPropShard};this.manager.fetchClientValues(e._sFetchProp,e._sFetchPropShard).then((e=>this.send({...t,_result:e})),(e=>this.send({...t,_error:m.makePlainError(e)})));return}if(e._sEval){const t={_sEval:e._sEval,_sEvalShard:e._sEvalShard};this.manager._performOnShards("eval",[e._sEval],e._sEvalShard).then((e=>this.send({...t,_result:e})),(e=>this.send({...t,_error:m.makePlainError(e)})));return}if(e._sRespawnAll){const{shardDelay:t,respawnDelay:i,timeout:s}=e._sRespawnAll;this.manager.respawnAll({shardDelay:t,respawnDelay:i,timeout:s}).catch((()=>{}));return}}this.emit("message",e)}_handleExit(e=this.manager.respawn,t){this.emit("death",this.process??this.worker);this.ready=false;this.process=null;this.worker=null;this._evals.clear();this._fetches.clear();if(e)this.spawn(t).catch((e=>this.emit("error",e)))}}e.exports=Shard},79320:(e,t,i)=>{"use strict";const s=i(97742);const{Error:r}=i(94436);const{Events:o}=i(98422);const l=i(28270);class ShardClientUtil{constructor(e,t){this.client=e;this.mode=t;this.parentPort=null;if(t==="process"){s.on("message",this._handleMessage.bind(this));e.on("ready",(()=>{s.send({_ready:true})}));e.on("disconnect",(()=>{s.send({_disconnect:true})}));e.on("reconnecting",(()=>{s.send({_reconnecting:true})}))}else if(t==="worker"){this.parentPort=i(24086).parentPort;this.parentPort.on("message",this._handleMessage.bind(this));e.on("ready",(()=>{this.parentPort.postMessage({_ready:true})}));e.on("disconnect",(()=>{this.parentPort.postMessage({_disconnect:true})}));e.on("reconnecting",(()=>{this.parentPort.postMessage({_reconnecting:true})}))}}get ids(){return this.client.options.shards}get count(){return this.client.options.shardCount}send(e){return new Promise(((t,i)=>{if(this.mode==="process"){s.send(e,(e=>{if(e)i(e);else t()}))}else if(this.mode==="worker"){this.parentPort.postMessage(e);t()}}))}fetchClientValues(e,t){return new Promise(((i,r)=>{const o=this.parentPort??s;const listener=s=>{if(s?._sFetchProp!==e||s._sFetchPropShard!==t)return;o.removeListener("message",listener);if(!s._error)i(s._result);else r(l.makeError(s._error))};o.on("message",listener);this.send({_sFetchProp:e,_sFetchPropShard:t}).catch((e=>{o.removeListener("message",listener);r(e)}))}))}broadcastEval(e,t={}){return new Promise(((i,r)=>{const o=this.parentPort??s;if(typeof e!=="function"){r(new TypeError("SHARDING_INVALID_EVAL_BROADCAST"));return}e=`(${e})(this, ${JSON.stringify(t.context)})`;const listener=s=>{if(s?._sEval!==e||s._sEvalShard!==t.shard)return;o.removeListener("message",listener);if(!s._error)i(s._result);else r(l.makeError(s._error))};o.on("message",listener);this.send({_sEval:e,_sEvalShard:t.shard}).catch((e=>{o.removeListener("message",listener);r(e)}))}))}respawnAll({shardDelay:e=5e3,respawnDelay:t=500,timeout:i=3e4}={}){return this.send({_sRespawnAll:{shardDelay:e,respawnDelay:t,timeout:i}})}async _handleMessage(e){if(!e)return;if(e._fetchProp){try{const t=e._fetchProp.split(".");let i=this.client;for(const e of t)i=i[e];this._respond("fetchProp",{_fetchProp:e._fetchProp,_result:i})}catch(t){this._respond("fetchProp",{_fetchProp:e._fetchProp,_error:l.makePlainError(t)})}}else if(e._eval){try{this._respond("eval",{_eval:e._eval,_result:await this.client._eval(e._eval)})}catch(t){this._respond("eval",{_eval:e._eval,_error:l.makePlainError(t)})}}}_respond(e,t){this.send(t).catch((t=>{const i=new r(`Error when sending ${e} response to master process: ${t.message}`);i.stack=t.stack;this.client.emit(o.ERROR,i)}))}static singleton(e,t){if(!this._singleton){this._singleton=new this(e,t)}else{e.emit(o.WARN,"Multiple clients created in child process/worker; only the first will handle sharding helpers.")}return this._singleton}static shardIdForGuildId(e,t){const i=Number(BigInt(e)>>22n)%t;if(i<0)throw new r("SHARDING_SHARD_MISCALCULATION",i,e,t);return i}}e.exports=ShardClientUtil},67448:(e,t,i)=>{"use strict";const s=i(15673);const r=i(87561);const o=i(49411);const l=i(97742);const{setTimeout:c}=i(99397);const{Collection:u}=i(38861);const m=i(42303);const{Error:g,TypeError:v,RangeError:_}=i(94436);const T=i(28270);class ShardingManager extends s{constructor(e,t={}){super();t=T.mergeDefault({totalShards:"auto",mode:"process",respawn:true,shardArgs:[],execArgv:[],token:l.env.DISCORD_TOKEN},t);this.file=e;if(!e)throw new g("CLIENT_INVALID_OPTION","File","specified.");if(!o.isAbsolute(e))this.file=o.resolve(l.cwd(),e);const i=r.statSync(this.file);if(!i.isFile())throw new g("CLIENT_INVALID_OPTION","File","a file");this.shardList=t.shardList??"auto";if(this.shardList!=="auto"){if(!Array.isArray(this.shardList)){throw new v("CLIENT_INVALID_OPTION","shardList","an array.")}this.shardList=[...new Set(this.shardList)];if(this.shardList.length<1)throw new _("CLIENT_INVALID_OPTION","shardList","at least 1 id.");if(this.shardList.some((e=>typeof e!=="number"||isNaN(e)||!Number.isInteger(e)||e<0))){throw new v("CLIENT_INVALID_OPTION","shardList","an array of positive integers.")}}this.totalShards=t.totalShards||"auto";if(this.totalShards!=="auto"){if(typeof this.totalShards!=="number"||isNaN(this.totalShards)){throw new v("CLIENT_INVALID_OPTION","Amount of shards","a number.")}if(this.totalShards<1)throw new _("CLIENT_INVALID_OPTION","Amount of shards","at least 1.");if(!Number.isInteger(this.totalShards)){throw new _("CLIENT_INVALID_OPTION","Amount of shards","an integer.")}}this.mode=t.mode;if(this.mode!=="process"&&this.mode!=="worker"){throw new _("CLIENT_INVALID_OPTION","Sharding mode",'"process" or "worker"')}this.respawn=t.respawn;this.shardArgs=t.shardArgs;this.execArgv=t.execArgv;this.token=t.token?.replace(/^Bot\s*/i,"")??null;this.shards=new u;l.env.SHARDING_MANAGER=true;l.env.SHARDING_MANAGER_MODE=this.mode;l.env.DISCORD_TOKEN=this.token}createShard(e=this.shards.size){const t=new m(this,e);this.shards.set(e,t);this.emit("shardCreate",t);return t}async spawn({amount:e=this.totalShards,delay:t=5500,timeout:i=3e4}={}){if(e==="auto"){e=await T.fetchRecommendedShards(this.token)}else{if(typeof e!=="number"||isNaN(e)){throw new v("CLIENT_INVALID_OPTION","Amount of shards","a number.")}if(e<1)throw new _("CLIENT_INVALID_OPTION","Amount of shards","at least 1.");if(!Number.isInteger(e)){throw new v("CLIENT_INVALID_OPTION","Amount of shards","an integer.")}}if(this.shards.size>=e)throw new g("SHARDING_ALREADY_SPAWNED",this.shards.size);if(this.shardList==="auto"||this.totalShards==="auto"||this.totalShards!==e){this.shardList=[...Array(e).keys()]}if(this.totalShards==="auto"||this.totalShards!==e){this.totalShards=e}if(this.shardList.some((t=>t>=e))){throw new _("CLIENT_INVALID_OPTION","Amount of shards","bigger than the highest shardId in the shardList option.")}for(const e of this.shardList){const s=[];const r=this.createShard(e);s.push(r.spawn(i));if(t>0&&this.shards.size!==this.shardList.length)s.push(c(t));await Promise.all(s)}return this.shards}broadcast(e){const t=[];for(const i of this.shards.values())t.push(i.send(e));return Promise.all(t)}broadcastEval(e,t={}){if(typeof e!=="function")return Promise.reject(new v("SHARDING_INVALID_EVAL_BROADCAST"));return this._performOnShards("eval",[`(${e})(this, ${JSON.stringify(t.context)})`],t.shard)}fetchClientValues(e,t){return this._performOnShards("fetchClientValue",[e],t)}_performOnShards(e,t,i){if(this.shards.size===0)return Promise.reject(new g("SHARDING_NO_SHARDS"));if(typeof i==="number"){if(this.shards.has(i))return this.shards.get(i)[e](...t);return Promise.reject(new g("SHARDING_SHARD_NOT_FOUND",i))}if(this.shards.size!==this.shardList.length)return Promise.reject(new g("SHARDING_IN_PROCESS"));const s=[];for(const i of this.shards.values())s.push(i[e](...t));return Promise.all(s)}async respawnAll({shardDelay:e=5e3,respawnDelay:t=500,timeout:i=3e4}={}){let s=0;for(const r of this.shards.values()){const o=[r.respawn({delay:t,timeout:i})];if(++s<this.shards.size&&e>0)o.push(c(e));await Promise.all(o)}return this.shards}}e.exports=ShardingManager},79754:(e,t,i)=>{"use strict";const s=i(38307);const{VerificationLevels:r,NSFWLevels:o}=i(98422);class AnonymousGuild extends s{constructor(e,t,i=true){super(e,t);if(i)this._patch(t)}_patch(e){if("features"in e)this.features=e.features;if("splash"in e){this.splash=e.splash}if("banner"in e){this.banner=e.banner}if("description"in e){this.description=e.description}if("verification_level"in e){this.verificationLevel=r[e.verification_level]}if("vanity_url_code"in e){this.vanityURLCode=e.vanity_url_code}if("nsfw_level"in e){this.nsfwLevel=o[e.nsfw_level]}}bannerURL({format:e,size:t}={}){return this.banner&&this.client.rest.cdn.Banner(this.id,this.banner,e,t)}splashURL({format:e,size:t}={}){return this.splash&&this.client.rest.cdn.Splash(this.id,this.splash,e,t)}}e.exports=AnonymousGuild},36460:(e,t,i)=>{"use strict";const s=i(99307);const r=i(92711);const{ApplicationCommandOptionTypes:o,ApplicationCommandTypes:l,ChannelTypes:c}=i(98422);const u=i(40421);class ApplicationCommand extends s{constructor(e,t,i,s){super(e);this.id=t.id;this.applicationId=t.application_id;this.guild=i??null;this.guildId=i?.id??s??null;this.permissions=new r(this);this.type=l[t.type];this._patch(t)}_patch(e){if("name"in e){this.name=e.name}if("description"in e){this.description=e.description}if("options"in e){this.options=e.options.map((e=>this.constructor.transformOption(e,true)))}else{this.options??=[]}if("default_permission"in e){this.defaultPermission=e.default_permission}if("version"in e){this.version=e.version}}get createdTimestamp(){return u.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}get manager(){return(this.guild??this.client.application).commands}edit(e){return this.manager.edit(this,e,this.guildId)}setName(e){return this.edit({name:e})}setDescription(e){return this.edit({description:e})}setDefaultPermission(e=true){return this.edit({defaultPermission:e})}setOptions(e){return this.edit({options:e})}delete(){return this.manager.delete(this,this.guildId)}equals(e,t=false){if(e.id&&this.id!==e.id)return false;const i=typeof e.type==="string"?e.type:l[e.type];if(e.name!==this.name||"description"in e&&e.description!==this.description||"version"in e&&e.version!==this.version||"autocomplete"in e&&e.autocomplete!==this.autocomplete||i&&i!==this.type||(e.options?.length??0)!==(this.options?.length??0)||(e.defaultPermission??e.default_permission??true)!==this.defaultPermission){return false}if(e.options){return this.constructor.optionsEqual(this.options,e.options,t)}return true}static optionsEqual(e,t,i=false){if(e.length!==t.length)return false;if(i){return e.every(((e,s)=>this._optionEquals(e,t[s],i)))}const s=new Map(t.map((e=>[e.name,e])));for(const t of e){const e=s.get(t.name);if(!e||!this._optionEquals(t,e))return false}return true}static _optionEquals(e,t,i=false){const s=typeof t.type==="string"?t.type:o[t.type];if(t.name!==e.name||s!==e.type||t.description!==e.description||t.autocomplete!==e.autocomplete||(t.required??(["SUB_COMMAND","SUB_COMMAND_GROUP"].includes(s)?undefined:false))!==e.required||t.choices?.length!==e.choices?.length||t.options?.length!==e.options?.length||(t.channelTypes??t.channel_types)?.length!==e.channelTypes?.length||(t.minValue??t.min_value)!==e.minValue||(t.maxValue??t.max_value)!==e.maxValue){return false}if(e.choices){if(i&&!e.choices.every(((e,i)=>e.name===t.choices[i].name&&e.value===t.choices[i].value))){return false}if(!i){const i=new Map(t.choices.map((e=>[e.name,e])));for(const t of e.choices){const e=i.get(t.name);if(!e||e.value!==t.value)return false}}}if(e.channelTypes){const i=(t.channelTypes??t.channel_types).map((e=>typeof e==="number"?c[e]:e));for(const t of e.channelTypes){if(!i.includes(t))return false}}if(e.options){return this.optionsEqual(e.options,t.options,i)}return true}static transformOption(e,t){const i=typeof e.type==="string"?e.type:o[e.type];const s=t?"channelTypes":"channel_types";const r=t?"minValue":"min_value";const l=t?"maxValue":"max_value";return{type:typeof e.type==="number"&&!t?e.type:o[e.type],name:e.name,description:e.description,required:e.required??(i==="SUB_COMMAND"||i==="SUB_COMMAND_GROUP"?undefined:false),autocomplete:e.autocomplete,choices:e.choices,options:e.options?.map((e=>this.transformOption(e,t))),[s]:t?e.channel_types?.map((e=>c[e])):e.channelTypes?.map((e=>typeof e==="string"?c[e]:e))??e.channel_types,[r]:e.minValue??e.min_value,[l]:e.maxValue??e.max_value}}}e.exports=ApplicationCommand},25286:(e,t,i)=>{"use strict";const s=i(35459);const r=i(63239);const{InteractionResponseTypes:o,ApplicationCommandOptionTypes:l}=i(98422);class AutocompleteInteraction extends r{constructor(e,t){super(e,t);this.commandId=t.data.id;this.commandName=t.data.name;this.responded=false;this.options=new s(this.client,t.data.options?.map((e=>this.transformOption(e,t.data.resolved)))??[])}get command(){const e=this.commandId;return this.guild?.commands.cache.get(e)??this.client.application.commands.cache.get(e)??null}transformOption(e){const t={name:e.name,type:l[e.type]};if("value"in e)t.value=e.value;if("options"in e)t.options=e.options.map((e=>this.transformOption(e)));if("focused"in e)t.focused=e.focused;return t}async respond(e){if(this.responded)throw new Error("INTERACTION_ALREADY_REPLIED");await this.client.api.interactions(this.id,this.token).callback.post({data:{type:o.APPLICATION_COMMAND_AUTOCOMPLETE_RESULT,data:{choices:e}},auth:false});this.responded=true}}e.exports=AutocompleteInteraction},99307:(e,t,i)=>{"use strict";const s=i(28270);class Base{constructor(e){Object.defineProperty(this,"client",{value:e})}_clone(){return Object.assign(Object.create(this),this)}_patch(e){return e}_update(e){const t=this._clone();this._patch(e);return t}toJSON(...e){return s.flatten(this,...e)}valueOf(){return this.id}}e.exports=Base},99558:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(63239);const o=i(53996);const l=i(84259);const{ApplicationCommandOptionTypes:c}=i(98422);class BaseCommandInteraction extends r{constructor(e,t){super(e,t);this.commandId=t.data.id;this.commandName=t.data.name;this.deferred=false;this.replied=false;this.ephemeral=null;this.webhook=new o(this.client,this.applicationId,this.token)}get command(){const e=this.commandId;return this.guild?.commands.cache.get(e)??this.client.application.commands.cache.get(e)??null}transformResolved({members:e,users:t,channels:i,roles:r,messages:o}){const l={};if(e){l.members=new s;for(const[i,s]of Object.entries(e)){const e=t[i];l.members.set(i,this.guild?.members._add({user:e,...s})??s)}}if(t){l.users=new s;for(const e of Object.values(t)){l.users.set(e.id,this.client.users._add(e))}}if(r){l.roles=new s;for(const e of Object.values(r)){l.roles.set(e.id,this.guild?.roles._add(e)??e)}}if(i){l.channels=new s;for(const e of Object.values(i)){l.channels.set(e.id,this.client.channels._add(e,this.guild)??e)}}if(o){l.messages=new s;for(const e of Object.values(o)){l.messages.set(e.id,this.channel?.messages?._add(e)??e)}}return l}transformOption(e,t){const i={name:e.name,type:c[e.type]};if("value"in e)i.value=e.value;if("options"in e)i.options=e.options.map((e=>this.transformOption(e,t)));if(t){const s=t.users?.[e.value];if(s)i.user=this.client.users._add(s);const r=t.members?.[e.value];if(r)i.member=this.guild?.members._add({user:s,...r})??r;const o=t.channels?.[e.value];if(o)i.channel=this.client.channels._add(o,this.guild)??o;const l=t.roles?.[e.value];if(l)i.role=this.guild?.roles._add(l)??l}return i}deferReply(){}reply(){}fetchReply(){}editReply(){}deleteReply(){}followUp(){}}l.applyToClass(BaseCommandInteraction,["deferUpdate","update"]);e.exports=BaseCommandInteraction},38307:(e,t,i)=>{"use strict";const s=i(99307);const r=i(40421);class BaseGuild extends s{constructor(e,t){super(e);this.id=t.id;this.name=t.name;this.icon=t.icon;this.features=t.features}get createdTimestamp(){return r.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}get nameAcronym(){return this.name.replace(/'s /g," ").replace(/\w+/g,(e=>e[0])).replace(/\s/g,"")}get partnered(){return this.features.includes("PARTNERED")}get verified(){return this.features.includes("VERIFIED")}iconURL({format:e,size:t,dynamic:i}={}){if(!this.icon)return null;return this.client.rest.cdn.Icon(this.id,this.icon,e,t,i)}async fetch(){const e=await this.client.api.guilds(this.id).get({query:{with_counts:true}});return this.client.guilds._add(e)}toString(){return this.name}}e.exports=BaseGuild},25036:(e,t,i)=>{"use strict";const{Emoji:s}=i(63855);class BaseGuildEmoji extends s{constructor(e,t,i){super(e,t);this.guild=i;this.requiresColons=null;this.managed=null;this.available=null;this._patch(t)}_patch(e){if("name"in e)this.name=e.name;if("require_colons"in e){this.requiresColons=e.require_colons}if("managed"in e){this.managed=e.managed}if("available"in e){this.available=e.available}}}e.exports=BaseGuildEmoji},9493:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(58354);const o=i(95600);const l=i(30367);const c=i(68207);const u=i(22450);const m=i(73642);class BaseGuildTextChannel extends r{constructor(e,t,i){super(e,t,i,false);this.messages=new c(this);this.threads=new u(this);this.nsfw=Boolean(t.nsfw);this._patch(t)}_patch(e){super._patch(e);if("topic"in e){this.topic=e.topic}if("nsfw"in e){this.nsfw=Boolean(e.nsfw)}if("last_message_id"in e){this.lastMessageId=e.last_message_id}if("last_pin_timestamp"in e){this.lastPinTimestamp=e.last_pin_timestamp?new Date(e.last_pin_timestamp).getTime():null}if("default_auto_archive_duration"in e){this.defaultAutoArchiveDuration=e.default_auto_archive_duration}if("messages"in e){for(const t of e.messages)this.messages._add(t)}}setDefaultAutoArchiveDuration(e,t){return this.edit({defaultAutoArchiveDuration:e},t)}setNSFW(e=true,t){return this.edit({nsfw:e},t)}setType(e,t){return this.edit({type:e},t)}async fetchWebhooks(){const e=await this.client.api.channels[this.id].webhooks.get();const t=new s;for(const i of e)t.set(i.id,new o(this.client,i));return t}async createWebhook(e,{avatar:t,reason:i}={}){if(typeof t==="string"&&!t.startsWith("data:")){t=await m.resolveImage(t)}const s=await this.client.api.channels[this.id].webhooks.post({data:{name:e,avatar:t},reason:i});return new o(this.client,s)}setTopic(e,t){return this.edit({topic:e},t)}createInvite(e){return this.guild.invites.create(this.id,e)}fetchInvites(e=true){return this.guild.invites.fetch({channelId:this.id,cache:e})}get lastMessage(){}get lastPinAt(){}send(){}sendTyping(){}createMessageCollector(){}awaitMessages(){}createMessageComponentCollector(){}awaitMessageComponent(){}bulkDelete(){}}l.applyToClass(BaseGuildTextChannel,true);e.exports=BaseGuildTextChannel},32728:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(58354);const o=i(97234);class BaseGuildVoiceChannel extends r{_patch(e){super._patch(e);if("rtc_region"in e){this.rtcRegion=e.rtc_region}if("bitrate"in e){this.bitrate=e.bitrate}if("user_limit"in e){this.userLimit=e.user_limit}}get members(){const e=new s;for(const t of this.guild.voiceStates.cache.values()){if(t.channelId===this.id&&t.member){e.set(t.id,t.member)}}return e}get full(){return this.userLimit>0&&this.members.size>=this.userLimit}get joinable(){if(!this.viewable)return false;const e=this.permissionsFor(this.client.user);if(!e)return false;if(e.has(o.FLAGS.ADMINISTRATOR,false))return true;return this.guild.me.communicationDisabledUntilTimestamp<Date.now()&&e.has(o.FLAGS.CONNECT,false)}setRTCRegion(e){return this.edit({rtcRegion:e})}createInvite(e){return this.guild.invites.create(this.id,e)}fetchInvites(e=true){return this.guild.invites.fetch({channelId:this.id,cache:e})}}e.exports=BaseGuildVoiceChannel},93497:(e,t,i)=>{"use strict";const{TypeError:s}=i(94436);const{MessageComponentTypes:r,Events:o}=i(98422);class BaseMessageComponent{constructor(e){this.type="type"in e?BaseMessageComponent.resolveType(e.type):null}static create(e,t){let l;let c=e.type;if(typeof c==="string")c=r[c];switch(c){case r.ACTION_ROW:{const s=i(50024);l=e instanceof s?e:new s(e,t);break}case r.BUTTON:{const t=i(14609);l=e instanceof t?e:new t(e);break}case r.SELECT_MENU:{const t=i(57456);l=e instanceof t?e:new t(e);break}default:if(t){t.emit(o.DEBUG,`[BaseMessageComponent] Received component with unknown type: ${e.type}`)}else{throw new s("INVALID_TYPE","data.type","valid MessageComponentType")}}return l}static resolveType(e){return typeof e==="string"?e:r[e]}}e.exports=BaseMessageComponent},73288:(e,t,i)=>{"use strict";const s=i(82908);class ButtonInteraction extends s{}e.exports=ButtonInteraction},41835:(e,t,i)=>{"use strict";const s=i(58354);class CategoryChannel extends s{get children(){return this.guild.channels.cache.filter((e=>e.parentId===this.id))}createChannel(e,t){return this.guild.channels.create(e,{...t,parent:this.id})}}e.exports=CategoryChannel},26481:(e,t,i)=>{"use strict";const s=i(97742);const r=i(99307);let o;let l;let c;let u;let m;let g;let v;let _;const{ChannelTypes:T,ThreadChannelTypes:x,VoiceBasedChannelTypes:S}=i(98422);const A=i(40421);const I=new WeakSet;let N=false;class Channel extends r{constructor(e,t,i=true){super(e);const s=T[t?.type];this.type=s??"UNKNOWN";if(t&&i)this._patch(t)}_patch(e){this.id=e.id}get createdTimestamp(){return A.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}get deleted(){if(!N){N=true;s.emitWarning("Channel#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}return I.has(this)}set deleted(e){if(!N){N=true;s.emitWarning("Channel#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}if(e)I.add(this);else I.delete(this)}get partial(){return false}toString(){return`<#${this.id}>`}async delete(){await this.client.api.channels(this.id).delete();return this}fetch(e=true){return this.client.channels.fetch(this.id,{force:e})}isText(){return"messages"in this}isVoice(){return S.includes(this.type)}isThread(){return x.includes(this.type)}static create(e,t,s,{allowUnknownGuild:r,fromInteraction:x}={}){o??=i(41835);l??=i(35937);c??=i(4917);u??=i(37920);m??=i(86977);g??=i(27005);v??=i(49595);_??=i(73776);let S;if(!t.guild_id&&!s){if(t.recipients&&t.type!==T.GROUP_DM||t.type===T.DM){S=new l(e,t)}else if(t.type===T.GROUP_DM){const s=i(84641);S=new s(e,t)}}else{s??=e.guilds.cache.get(t.guild_id);if(s||r){switch(t.type){case T.GUILD_TEXT:{S=new g(s,t,e);break}case T.GUILD_VOICE:{S=new _(s,t,e);break}case T.GUILD_CATEGORY:{S=new o(s,t,e);break}case T.GUILD_NEWS:{S=new c(s,t,e);break}case T.GUILD_STORE:{S=new m(s,t,e);break}case T.GUILD_STAGE_VOICE:{S=new u(s,t,e);break}case T.GUILD_NEWS_THREAD:case T.GUILD_PUBLIC_THREAD:case T.GUILD_PRIVATE_THREAD:{S=new v(s,t,e,x);if(!r)S.parent?.threads.cache.set(S.id,S);break}}if(S&&!r)s.channels?.cache.set(S.id,S)}}return S}toJSON(...e){return super.toJSON({createdTimestamp:true},...e)}}t.Channel=Channel;t.deletedChannels=I},27782:(e,t,i)=>{"use strict";const s=i(90339);const r=i(39425);const o=i(27518);const l=i(64834);class ClientApplication extends r{constructor(e,t){super(e,t);this.commands=new o(this.client)}_patch(e){super._patch(e);if("flags"in e){this.flags=new l(e.flags).freeze()}if("cover_image"in e){this.cover=e.cover_image}else{this.cover??=null}if("rpc_origins"in e){this.rpcOrigins=e.rpc_origins}else{this.rpcOrigins??=[]}if("bot_require_code_grant"in e){this.botRequireCodeGrant=e.bot_require_code_grant}else{this.botRequireCodeGrant??=null}if("bot_public"in e){this.botPublic=e.bot_public}else{this.botPublic??=null}this.owner=e.team?new s(this.client,e.team):e.owner?this.client.users._add(e.owner):this.owner??null}get partial(){return!this.name}async fetch(){const e=await this.client.api.oauth2.applications("@me").get();this._patch(e);return this}}e.exports=ClientApplication},78282:(e,t,i)=>{"use strict";const{Presence:s}=i(98916);const{TypeError:r}=i(94436);const{ActivityTypes:o,Opcodes:l}=i(98422);class ClientPresence extends s{constructor(e,t={}){super(e,Object.assign(t,{status:t.status??"online",user:{id:null}}))}set(e){const t=this._parse(e);this._patch(t);if(typeof e.shardId==="undefined"){this.client.ws.broadcast({op:l.STATUS_UPDATE,d:t})}else if(Array.isArray(e.shardId)){for(const i of e.shardId){this.client.ws.shards.get(i).send({op:l.STATUS_UPDATE,d:t})}}else{this.client.ws.shards.get(e.shardId).send({op:l.STATUS_UPDATE,d:t})}return this}_parse({status:e,since:t,afk:i,activities:s}){const l={activities:[],afk:typeof i==="boolean"?i:false,since:typeof t==="number"&&!Number.isNaN(t)?t:null,status:e??this.status};if(s?.length){for(const[e,t]of s.entries()){if(typeof t.name!=="string")throw new r("INVALID_TYPE",`activities[${e}].name`,"string");t.type??=0;l.activities.push({type:typeof t.type==="number"?t.type:o[t.type],name:t.name,url:t.url})}}else if(!s&&(e||i||t)&&this.activities.length){l.activities.push(...this.activities.map((e=>({name:e.name,type:o[e.type],url:e.url??undefined}))))}return l}}e.exports=ClientPresence},88983:(e,t,i)=>{"use strict";const s=i(96283);const r=i(73642);class ClientUser extends s{_patch(e){super._patch(e);if("verified"in e){this.verified=e.verified}if("mfa_enabled"in e){this.mfaEnabled=typeof e.mfa_enabled==="boolean"?e.mfa_enabled:null}else{this.mfaEnabled??=null}if("token"in e)this.client.token=e.token}get presence(){return this.client.presence}async edit(e){if(typeof e.avatar!=="undefined")e.avatar=await r.resolveImage(e.avatar);const t=await this.client.api.users("@me").patch({data:e});this.client.token=t.token;const{updated:i}=this.client.actions.UserUpdate.handle(t);return i??this}setUsername(e){return this.edit({username:e})}setAvatar(e){return this.edit({avatar:e})}setPresence(e){return this.client.presence.set(e)}setStatus(e,t){return this.setPresence({status:e,shardId:t})}setActivity(e,t={}){if(!e)return this.setPresence({activities:[],shardId:t.shardId});const i=Object.assign({},t,typeof e==="object"?e:{name:e});return this.setPresence({activities:[i],shardId:i.shardId})}setAFK(e=true,t){return this.setPresence({afk:e,shardId:t})}}e.exports=ClientUser},49187:(e,t,i)=>{"use strict";const s=i(99558);const r=i(35459);class CommandInteraction extends s{constructor(e,t){super(e,t);this.options=new r(this.client,t.data.options?.map((e=>this.transformOption(e,t.data.resolved)))??[],this.transformResolved(t.data.resolved??{}))}toString(){const e=[this.commandName,this.options._group,this.options._subcommand,...this.options._hoistedOptions.map((e=>`${e.name}:${e.value}`))];return`/${e.filter(Boolean).join(" ")}`}}e.exports=CommandInteraction},35459:(e,t,i)=>{"use strict";const{TypeError:s}=i(94436);class CommandInteractionOptionResolver{constructor(e,t,i){Object.defineProperty(this,"client",{value:e});this._group=null;this._subcommand=null;this._hoistedOptions=t;if(this._hoistedOptions[0]?.type==="SUB_COMMAND_GROUP"){this._group=this._hoistedOptions[0].name;this._hoistedOptions=this._hoistedOptions[0].options??[]}if(this._hoistedOptions[0]?.type==="SUB_COMMAND"){this._subcommand=this._hoistedOptions[0].name;this._hoistedOptions=this._hoistedOptions[0].options??[]}Object.defineProperty(this,"data",{value:Object.freeze([...t])});Object.defineProperty(this,"resolved",{value:Object.freeze(i)})}get(e,t=false){const i=this._hoistedOptions.find((t=>t.name===e));if(!i){if(t){throw new s("COMMAND_INTERACTION_OPTION_NOT_FOUND",e)}return null}return i}_getTypedOption(e,t,i,r){const o=this.get(e,r);if(!o){return null}else if(o.type!==t){throw new s("COMMAND_INTERACTION_OPTION_TYPE",e,o.type,t)}else if(r&&i.every((e=>o[e]===null||typeof o[e]==="undefined"))){throw new s("COMMAND_INTERACTION_OPTION_EMPTY",e,o.type)}return o}getSubcommand(e=true){if(e&&!this._subcommand){throw new s("COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND")}return this._subcommand}getSubcommandGroup(e=true){if(e&&!this._group){throw new s("COMMAND_INTERACTION_OPTION_NO_SUB_COMMAND_GROUP")}return this._group}getBoolean(e,t=false){const i=this._getTypedOption(e,"BOOLEAN",["value"],t);return i?.value??null}getChannel(e,t=false){const i=this._getTypedOption(e,"CHANNEL",["channel"],t);return i?.channel??null}getString(e,t=false){const i=this._getTypedOption(e,"STRING",["value"],t);return i?.value??null}getInteger(e,t=false){const i=this._getTypedOption(e,"INTEGER",["value"],t);return i?.value??null}getNumber(e,t=false){const i=this._getTypedOption(e,"NUMBER",["value"],t);return i?.value??null}getUser(e,t=false){const i=this._getTypedOption(e,"USER",["user"],t);return i?.user??null}getMember(e,t=false){const i=this._getTypedOption(e,"USER",["member"],t);return i?.member??null}getRole(e,t=false){const i=this._getTypedOption(e,"ROLE",["role"],t);return i?.role??null}getMentionable(e,t=false){const i=this._getTypedOption(e,"MENTIONABLE",["user","member","role"],t);return i?.member??i?.user??i?.role??null}getMessage(e,t=false){const i=this._getTypedOption(e,"_MESSAGE",["message"],t);return i?.message??null}getFocused(e=false){const t=this._hoistedOptions.find((e=>e.focused));if(!t)throw new s("AUTOCOMPLETE_INTERACTION_OPTION_NO_FOCUSED_OPTION");return e?t:t.value}}e.exports=CommandInteractionOptionResolver},53496:(e,t,i)=>{"use strict";const s=i(99558);const r=i(35459);const{ApplicationCommandOptionTypes:o,ApplicationCommandTypes:l}=i(98422);class ContextMenuInteraction extends s{constructor(e,t){super(e,t);this.options=new r(this.client,this.resolveContextMenuOptions(t.data),this.transformResolved(t.data.resolved));this.targetId=t.data.target_id;this.targetType=l[t.data.type]}resolveContextMenuOptions({target_id:e,resolved:t}){const i=[];if(t.users?.[e]){i.push(this.transformOption({name:"user",type:o.USER,value:e},t))}if(t.messages?.[e]){i.push({name:"message",type:"_MESSAGE",value:e,message:this.channel?.messages._add(t.messages[e])??t.messages[e]})}return i}}e.exports=ContextMenuInteraction},35937:(e,t,i)=>{"use strict";const{Channel:s}=i(26481);const r=i(30367);const o=i(68207);class DMChannel extends s{constructor(e,t){super(e,t);this.type="DM";this.messages=new o(this)}_patch(e){super._patch(e);if(e.recipients){this.recipient=this.client.users._add(e.recipients[0])}if("last_message_id"in e){this.lastMessageId=e.last_message_id}if("last_pin_timestamp"in e){this.lastPinTimestamp=new Date(e.last_pin_timestamp).getTime()}else{this.lastPinTimestamp??=null}}get partial(){return typeof this.lastMessageId==="undefined"}fetch(e=true){return this.recipient.createDM(e)}toString(){return this.recipient.toString()}get lastMessage(){}get lastPinAt(){}send(){}sendTyping(){}createMessageCollector(){}awaitMessages(){}createMessageComponentCollector(){}awaitMessageComponent(){}}r.applyToClass(DMChannel,true,["bulkDelete"]);e.exports=DMChannel},63855:(e,t,i)=>{"use strict";const s=i(97742);const r=i(99307);const o=i(40421);const l=new WeakSet;let c=false;class Emoji extends r{constructor(e,t){super(e);this.animated=t.animated??null;this.name=t.name??null;this.id=t.id}get deleted(){if(!c){c=true;s.emitWarning("Emoji#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}return l.has(this)}set deleted(e){if(!c){c=true;s.emitWarning("Emoji#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}if(e)l.add(this);else l.delete(this)}get identifier(){if(this.id)return`${this.animated?"a:":""}${this.name}:${this.id}`;return encodeURIComponent(this.name)}get url(){return this.id&&this.client.rest.cdn.Emoji(this.id,this.animated?"gif":"png")}get createdTimestamp(){return this.id&&o.timestampFrom(this.id)}get createdAt(){return this.id&&new Date(this.createdTimestamp)}toString(){return this.id?`<${this.animated?"a":""}:${this.name}:${this.id}>`:this.name}toJSON(){return super.toJSON({guild:"guildId",createdTimestamp:true,url:true,identifier:true})}}t.Emoji=Emoji;t.deletedEmojis=l},87809:(e,t,i)=>{"use strict";const s=i(97742);const{Collection:r}=i(38861);const o=i(79754);const l=i(64778);const c=i(11553);const u=i(20999);const m=i(32879);const g=i(95600);const v=i(82252);const{Error:_}=i(94436);const T=i(20277);const x=i(87491);const S=i(87408);const A=i(15281);const I=i(50504);const N=i(65451);const O=i(71266);const R=i(19653);const k=i(63498);const P=i(28574);const M=i(29879);const q=i(56788);const{ChannelTypes:G,DefaultMessageNotificationLevels:j,PartialTypes:B,VerificationLevels:H,ExplicitContentFilterLevels:$,Status:z,MFALevels:W,PremiumTiers:Y}=i(98422);const J=i(73642);const X=i(25354);const Q=i(28270);let ee=false;let te=false;let ie=false;const se=new WeakSet;class Guild extends o{constructor(e,t){super(e,t,false);this.commands=new T(this);this.members=new N(this);this.channels=new S(this);this.bans=new x(this);this.roles=new P(this);this.presences=new k(this.client);this.voiceStates=new q(this);this.stageInstances=new M(this);this.invites=new I(this);this.scheduledEvents=new O(this);if(!t)return;if(t.unavailable){this.available=false}else{this._patch(t);if(!t.channels)this.available=false}this.shardId=t.shardId}get deleted(){if(!ie){ie=true;s.emitWarning("Guild#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}return se.has(this)}set deleted(e){if(!ie){ie=true;s.emitWarning("Guild#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}if(e)se.add(this);else se.delete(this)}get shard(){return this.client.ws.shards.get(this.shardId)}_patch(e){super._patch(e);this.id=e.id;if("name"in e)this.name=e.name;if("icon"in e)this.icon=e.icon;if("unavailable"in e){this.available=!e.unavailable}else{this.available??=true}if("discovery_splash"in e){this.discoverySplash=e.discovery_splash}if("member_count"in e){this.memberCount=e.member_count}if("large"in e){this.large=Boolean(e.large)}if("premium_progress_bar_enabled"in e){this.premiumProgressBarEnabled=e.premium_progress_bar_enabled}if("application_id"in e){this.applicationId=e.application_id}if("afk_timeout"in e){this.afkTimeout=e.afk_timeout}if("afk_channel_id"in e){this.afkChannelId=e.afk_channel_id}if("system_channel_id"in e){this.systemChannelId=e.system_channel_id}if("premium_tier"in e){this.premiumTier=Y[e.premium_tier]}if("premium_subscription_count"in e){this.premiumSubscriptionCount=e.premium_subscription_count}if("widget_enabled"in e){this.widgetEnabled=e.widget_enabled}if("widget_channel_id"in e){this.widgetChannelId=e.widget_channel_id}if("explicit_content_filter"in e){this.explicitContentFilter=$[e.explicit_content_filter]}if("mfa_level"in e){this.mfaLevel=W[e.mfa_level]}if("joined_at"in e){this.joinedTimestamp=new Date(e.joined_at).getTime()}if("default_message_notifications"in e){this.defaultMessageNotifications=j[e.default_message_notifications]}if("system_channel_flags"in e){this.systemChannelFlags=new X(e.system_channel_flags).freeze()}if("max_members"in e){this.maximumMembers=e.max_members}else{this.maximumMembers??=null}if("max_presences"in e){this.maximumPresences=e.max_presences??25e3}else{this.maximumPresences??=null}if("approximate_member_count"in e){this.approximateMemberCount=e.approximate_member_count}else{this.approximateMemberCount??=null}if("approximate_presence_count"in e){this.approximatePresenceCount=e.approximate_presence_count}else{this.approximatePresenceCount??=null}this.vanityURLUses??=null;if("rules_channel_id"in e){this.rulesChannelId=e.rules_channel_id}if("public_updates_channel_id"in e){this.publicUpdatesChannelId=e.public_updates_channel_id}if("preferred_locale"in e){this.preferredLocale=e.preferred_locale}if(e.channels){this.channels.cache.clear();for(const t of e.channels){this.client.channels._add(t,this)}}if(e.threads){for(const t of e.threads){this.client.channels._add(t,this)}}if(e.roles){this.roles.cache.clear();for(const t of e.roles)this.roles._add(t)}if(e.members){this.members.cache.clear();for(const t of e.members)this.members._add(t)}if("owner_id"in e){this.ownerId=e.owner_id}if(e.presences){for(const t of e.presences){this.presences._add(Object.assign(t,{guild:this}))}}if(e.stage_instances){this.stageInstances.cache.clear();for(const t of e.stage_instances){this.stageInstances._add(t)}}if(e.guild_scheduled_events){this.scheduledEvents.cache.clear();for(const t of e.guild_scheduled_events){this.scheduledEvents._add(t)}}if(e.voice_states){this.voiceStates.cache.clear();for(const t of e.voice_states){this.voiceStates._add(t)}}if(!this.emojis){this.emojis=new A(this);if(e.emojis)for(const t of e.emojis)this.emojis._add(t)}else if(e.emojis){this.client.actions.GuildEmojisUpdate.handle({guild_id:this.id,emojis:e.emojis})}if(!this.stickers){this.stickers=new R(this);if(e.stickers)for(const t of e.stickers)this.stickers._add(t)}else if(e.stickers){this.client.actions.GuildStickersUpdate.handle({guild_id:this.id,stickers:e.stickers})}}get joinedAt(){return new Date(this.joinedTimestamp)}discoverySplashURL({format:e,size:t}={}){return this.discoverySplash&&this.client.rest.cdn.DiscoverySplash(this.id,this.discoverySplash,e,t)}fetchOwner(e){return this.members.fetch({...e,user:this.ownerId})}get afkChannel(){return this.client.channels.resolve(this.afkChannelId)}get systemChannel(){return this.client.channels.resolve(this.systemChannelId)}get widgetChannel(){return this.client.channels.resolve(this.widgetChannelId)}get rulesChannel(){return this.client.channels.resolve(this.rulesChannelId)}get publicUpdatesChannel(){return this.client.channels.resolve(this.publicUpdatesChannelId)}get me(){return this.members.resolve(this.client.user.id)??(this.client.options.partials.includes(B.GUILD_MEMBER)?this.members._add({user:{id:this.client.user.id}},true):null)}get maximumBitrate(){if(this.features.includes("VIP_REGIONS")){return 384e3}switch(Y[this.premiumTier]){case Y.TIER_1:return 128e3;case Y.TIER_2:return 256e3;case Y.TIER_3:return 384e3;default:return 96e3}}async fetchIntegrations(){const e=await this.client.api.guilds(this.id).integrations.get();return e.reduce(((e,t)=>e.set(t.id,new m(this.client,t,this))),new r)}async fetchTemplates(){const e=await this.client.api.guilds(this.id).templates.get();return e.reduce(((e,t)=>e.set(t.code,new u(this.client,t))),new r)}async fetchWelcomeScreen(){const e=await this.client.api.guilds(this.id,"welcome-screen").get();return new v(this,e)}async createTemplate(e,t){const i=await this.client.api.guilds(this.id).templates.post({data:{name:e,description:t}});return new u(this.client,i)}async fetchPreview(){const e=await this.client.api.guilds(this.id).preview.get();return new c(this.client,e)}async fetchVanityData(){if(!this.features.includes("VANITY_URL")){throw new _("VANITY_URL")}const e=await this.client.api.guilds(this.id,"vanity-url").get();this.vanityURLCode=e.code;this.vanityURLUses=e.uses;return e}async fetchWebhooks(){const e=await this.client.api.guilds(this.id).webhooks.get();const t=new r;for(const i of e)t.set(i.id,new g(this.client,i));return t}fetchWidget(){return this.client.fetchGuildWidget(this.id)}async fetchWidgetSettings(){const e=await this.client.api.guilds(this.id).widget.get();this.widgetEnabled=e.enabled;this.widgetChannelId=e.channel_id;return{enabled:e.enabled,channel:e.channel_id?this.channels.cache.get(e.channel_id):null}}async fetchAuditLogs(e={}){if(e.before&&e.before instanceof l.Entry)e.before=e.before.id;if(typeof e.type==="string")e.type=l.Actions[e.type];const t=await this.client.api.guilds(this.id)["audit-logs"].get({query:{before:e.before,limit:e.limit,user_id:this.client.users.resolveId(e.user),action_type:e.type}});return l.build(this,t)}async edit(e,t){const i={};if(e.name)i.name=e.name;if(typeof e.verificationLevel!=="undefined"){i.verification_level=typeof e.verificationLevel==="number"?e.verificationLevel:H[e.verificationLevel]}if(typeof e.afkChannel!=="undefined"){i.afk_channel_id=this.client.channels.resolveId(e.afkChannel)}if(typeof e.systemChannel!=="undefined"){i.system_channel_id=this.client.channels.resolveId(e.systemChannel)}if(e.afkTimeout)i.afk_timeout=Number(e.afkTimeout);if(typeof e.icon!=="undefined")i.icon=await J.resolveImage(e.icon);if(e.owner)i.owner_id=this.client.users.resolveId(e.owner);if(typeof e.splash!=="undefined")i.splash=await J.resolveImage(e.splash);if(typeof e.discoverySplash!=="undefined"){i.discovery_splash=await J.resolveImage(e.discoverySplash)}if(typeof e.banner!=="undefined")i.banner=await J.resolveImage(e.banner);if(typeof e.explicitContentFilter!=="undefined"){i.explicit_content_filter=typeof e.explicitContentFilter==="number"?e.explicitContentFilter:$[e.explicitContentFilter]}if(typeof e.defaultMessageNotifications!=="undefined"){i.default_message_notifications=typeof e.defaultMessageNotifications==="number"?e.defaultMessageNotifications:j[e.defaultMessageNotifications]}if(typeof e.systemChannelFlags!=="undefined"){i.system_channel_flags=X.resolve(e.systemChannelFlags)}if(typeof e.rulesChannel!=="undefined"){i.rules_channel_id=this.client.channels.resolveId(e.rulesChannel)}if(typeof e.publicUpdatesChannel!=="undefined"){i.public_updates_channel_id=this.client.channels.resolveId(e.publicUpdatesChannel)}if(typeof e.features!=="undefined"){i.features=e.features}if(typeof e.description!=="undefined"){i.description=e.description}if(e.preferredLocale)i.preferred_locale=e.preferredLocale;if("premiumProgressBarEnabled"in e)i.premium_progress_bar_enabled=e.premiumProgressBarEnabled;const s=await this.client.api.guilds(this.id).patch({data:i,reason:t});return this.client.actions.GuildUpdate.handle(s).updated}async editWelcomeScreen(e){const{enabled:t,description:i,welcomeChannels:s}=e;const r=s?.map((e=>{const t=this.emojis.resolve(e.emoji);return{emoji_id:t?.id,emoji_name:t?.name??e.emoji,channel_id:this.channels.resolveId(e.channel),description:e.description}}));const o=await this.client.api.guilds(this.id,"welcome-screen").patch({data:{welcome_channels:r,description:i,enabled:t}});return new v(this,o)}setExplicitContentFilter(e,t){return this.edit({explicitContentFilter:e},t)}setDefaultMessageNotifications(e,t){return this.edit({defaultMessageNotifications:e},t)}setSystemChannelFlags(e,t){return this.edit({systemChannelFlags:e},t)}setName(e,t){return this.edit({name:e},t)}setVerificationLevel(e,t){return this.edit({verificationLevel:e},t)}setAFKChannel(e,t){return this.edit({afkChannel:e},t)}setSystemChannel(e,t){return this.edit({systemChannel:e},t)}setAFKTimeout(e,t){return this.edit({afkTimeout:e},t)}setIcon(e,t){return this.edit({icon:e},t)}setOwner(e,t){return this.edit({owner:e},t)}setSplash(e,t){return this.edit({splash:e},t)}setDiscoverySplash(e,t){return this.edit({discoverySplash:e},t)}setBanner(e,t){return this.edit({banner:e},t)}setRulesChannel(e,t){return this.edit({rulesChannel:e},t)}setPublicUpdatesChannel(e,t){return this.edit({publicUpdatesChannel:e},t)}setPreferredLocale(e,t){return this.edit({preferredLocale:e},t)}setPremiumProgressBarEnabled(e=true,t){return this.edit({premiumProgressBarEnabled:e},t)}setChannelPositions(e){if(!ee){s.emitWarning("The Guild#setChannelPositions method is deprecated. Use GuildChannelManager#setPositions instead.","DeprecationWarning");ee=true}return this.channels.setPositions(e)}setRolePositions(e){if(!te){s.emitWarning("The Guild#setRolePositions method is deprecated. Use RoleManager#setPositions instead.","DeprecationWarning");te=true}return this.roles.setPositions(e)}async setWidgetSettings(e,t){await this.client.api.guilds(this.id).widget.patch({data:{enabled:e.enabled,channel_id:this.channels.resolveId(e.channel)},reason:t});return this}async leave(){if(this.ownerId===this.client.user.id)throw new _("GUILD_OWNED");await this.client.api.users("@me").guilds(this.id).delete();return this.client.actions.GuildDelete.handle({id:this.id}).guild}async delete(){await this.client.api.guilds(this.id).delete();return this.client.actions.GuildDelete.handle({id:this.id}).guild}equals(e){return e&&e instanceof this.constructor&&this.id===e.id&&this.available===e.available&&this.splash===e.splash&&this.discoverySplash===e.discoverySplash&&this.name===e.name&&this.memberCount===e.memberCount&&this.large===e.large&&this.icon===e.icon&&this.ownerId===e.ownerId&&this.verificationLevel===e.verificationLevel&&(this.features===e.features||this.features.length===e.features.length&&this.features.every(((t,i)=>t===e.features[i])))}toJSON(){const e=super.toJSON({available:false,createdTimestamp:true,nameAcronym:true,presences:false,voiceStates:false});e.iconURL=this.iconURL();e.splashURL=this.splashURL();e.discoverySplashURL=this.discoverySplashURL();e.bannerURL=this.bannerURL();return e}get voiceAdapterCreator(){return e=>{this.client.voice.adapters.set(this.id,e);return{sendPayload:e=>{if(this.shard.status!==z.READY)return false;this.shard.send(e);return true},destroy:()=>{this.client.voice.adapters.delete(this.id)}}}}_sortedRoles(){return Q.discordSort(this.roles.cache)}_sortedChannels(e){const t=e.type===G.GUILD_CATEGORY;return Q.discordSort(this.channels.cache.filter((i=>(["GUILD_TEXT","GUILD_NEWS","GUILD_STORE"].includes(e.type)?["GUILD_TEXT","GUILD_NEWS","GUILD_STORE"].includes(i.type):i.type===e.type)&&(t||i.parent===e.parent))))}}t.Guild=Guild;t.deletedGuilds=se},64778:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const{GuildScheduledEvent:r}=i(5226);const o=i(32879);const l=i(93979);const{StageInstance:c}=i(9162);const{Sticker:u}=i(27149);const m=i(95600);const{OverwriteTypes:g,PartialTypes:v}=i(98422);const _=i(40421);const T=i(28270);const x={ALL:"ALL",GUILD:"GUILD",GUILD_SCHEDULED_EVENT:"GUILD_SCHEDULED_EVENT",CHANNEL:"CHANNEL",USER:"USER",ROLE:"ROLE",INVITE:"INVITE",WEBHOOK:"WEBHOOK",EMOJI:"EMOJI",MESSAGE:"MESSAGE",INTEGRATION:"INTEGRATION",STAGE_INSTANCE:"STAGE_INSTANCE",STICKER:"STICKER",THREAD:"THREAD",UNKNOWN:"UNKNOWN"};const S={ALL:null,GUILD_UPDATE:1,CHANNEL_CREATE:10,CHANNEL_UPDATE:11,CHANNEL_DELETE:12,CHANNEL_OVERWRITE_CREATE:13,CHANNEL_OVERWRITE_UPDATE:14,CHANNEL_OVERWRITE_DELETE:15,MEMBER_KICK:20,MEMBER_PRUNE:21,MEMBER_BAN_ADD:22,MEMBER_BAN_REMOVE:23,MEMBER_UPDATE:24,MEMBER_ROLE_UPDATE:25,MEMBER_MOVE:26,MEMBER_DISCONNECT:27,BOT_ADD:28,ROLE_CREATE:30,ROLE_UPDATE:31,ROLE_DELETE:32,INVITE_CREATE:40,INVITE_UPDATE:41,INVITE_DELETE:42,WEBHOOK_CREATE:50,WEBHOOK_UPDATE:51,WEBHOOK_DELETE:52,EMOJI_CREATE:60,EMOJI_UPDATE:61,EMOJI_DELETE:62,MESSAGE_DELETE:72,MESSAGE_BULK_DELETE:73,MESSAGE_PIN:74,MESSAGE_UNPIN:75,INTEGRATION_CREATE:80,INTEGRATION_UPDATE:81,INTEGRATION_DELETE:82,STAGE_INSTANCE_CREATE:83,STAGE_INSTANCE_UPDATE:84,STAGE_INSTANCE_DELETE:85,STICKER_CREATE:90,STICKER_UPDATE:91,STICKER_DELETE:92,GUILD_SCHEDULED_EVENT_CREATE:100,GUILD_SCHEDULED_EVENT_UPDATE:101,GUILD_SCHEDULED_EVENT_DELETE:102,THREAD_CREATE:110,THREAD_UPDATE:111,THREAD_DELETE:112};class GuildAuditLogs{constructor(e,t){if(t.users)for(const i of t.users)e.client.users._add(i);if(t.threads)for(const i of t.threads)e.client.channels._add(i,e);this.webhooks=new s;if(t.webhooks){for(const i of t.webhooks){this.webhooks.set(i.id,new m(e.client,i))}}this.integrations=new s;if(t.integrations){for(const i of t.integrations){this.integrations.set(i.id,new o(e.client,i,e))}}this.entries=new s;for(const i of t.audit_log_entries){const t=new GuildAuditLogsEntry(this,e,i);this.entries.set(t.id,t)}}static async build(...e){const t=new GuildAuditLogs(...e);await Promise.all(t.entries.map((e=>e.target)));return t}static targetType(e){if(e<10)return x.GUILD;if(e<20)return x.CHANNEL;if(e<30)return x.USER;if(e<40)return x.ROLE;if(e<50)return x.INVITE;if(e<60)return x.WEBHOOK;if(e<70)return x.EMOJI;if(e<80)return x.MESSAGE;if(e<83)return x.INTEGRATION;if(e<86)return x.STAGE_INSTANCE;if(e<100)return x.STICKER;if(e<110)return x.GUILD_SCHEDULED_EVENT;if(e<120)return x.THREAD;return x.UNKNOWN}static actionType(e){if([S.CHANNEL_CREATE,S.CHANNEL_OVERWRITE_CREATE,S.MEMBER_BAN_REMOVE,S.BOT_ADD,S.ROLE_CREATE,S.INVITE_CREATE,S.WEBHOOK_CREATE,S.EMOJI_CREATE,S.MESSAGE_PIN,S.INTEGRATION_CREATE,S.STAGE_INSTANCE_CREATE,S.STICKER_CREATE,S.GUILD_SCHEDULED_EVENT_CREATE,S.THREAD_CREATE].includes(e)){return"CREATE"}if([S.CHANNEL_DELETE,S.CHANNEL_OVERWRITE_DELETE,S.MEMBER_KICK,S.MEMBER_PRUNE,S.MEMBER_BAN_ADD,S.MEMBER_DISCONNECT,S.ROLE_DELETE,S.INVITE_DELETE,S.WEBHOOK_DELETE,S.EMOJI_DELETE,S.MESSAGE_DELETE,S.MESSAGE_BULK_DELETE,S.MESSAGE_UNPIN,S.INTEGRATION_DELETE,S.STAGE_INSTANCE_DELETE,S.STICKER_DELETE,S.GUILD_SCHEDULED_EVENT_DELETE,S.THREAD_DELETE].includes(e)){return"DELETE"}if([S.GUILD_UPDATE,S.CHANNEL_UPDATE,S.CHANNEL_OVERWRITE_UPDATE,S.MEMBER_UPDATE,S.MEMBER_ROLE_UPDATE,S.MEMBER_MOVE,S.ROLE_UPDATE,S.INVITE_UPDATE,S.WEBHOOK_UPDATE,S.EMOJI_UPDATE,S.INTEGRATION_UPDATE,S.STAGE_INSTANCE_UPDATE,S.STICKER_UPDATE,S.GUILD_SCHEDULED_EVENT_UPDATE,S.THREAD_UPDATE].includes(e)){return"UPDATE"}return"ALL"}toJSON(){return T.flatten(this)}}class GuildAuditLogsEntry{constructor(e,t,i){const s=GuildAuditLogs.targetType(i.action_type);this.targetType=s;this.actionType=GuildAuditLogs.actionType(i.action_type);this.action=Object.keys(S).find((e=>S[e]===i.action_type));this.reason=i.reason??null;this.executor=i.user_id?t.client.options.partials.includes(v.USER)?t.client.users._add({id:i.user_id}):t.client.users.cache.get(i.user_id):null;this.changes=i.changes?.map((e=>({key:e.key,old:e.old_value,new:e.new_value})))??null;this.id=i.id;this.extra=null;switch(i.action_type){case S.MEMBER_PRUNE:this.extra={removed:Number(i.options.members_removed),days:Number(i.options.delete_member_days)};break;case S.MEMBER_MOVE:case S.MESSAGE_DELETE:case S.MESSAGE_BULK_DELETE:this.extra={channel:t.channels.cache.get(i.options.channel_id)??{id:i.options.channel_id},count:Number(i.options.count)};break;case S.MESSAGE_PIN:case S.MESSAGE_UNPIN:this.extra={channel:t.client.channels.cache.get(i.options.channel_id)??{id:i.options.channel_id},messageId:i.options.message_id};break;case S.MEMBER_DISCONNECT:this.extra={count:Number(i.options.count)};break;case S.CHANNEL_OVERWRITE_CREATE:case S.CHANNEL_OVERWRITE_UPDATE:case S.CHANNEL_OVERWRITE_DELETE:switch(Number(i.options.type)){case g.role:this.extra=t.roles.cache.get(i.options.id)??{id:i.options.id,name:i.options.role_name,type:g[g.role]};break;case g.member:this.extra=t.members.cache.get(i.options.id)??{id:i.options.id,type:g[g.member]};break;default:break}break;case S.STAGE_INSTANCE_CREATE:case S.STAGE_INSTANCE_DELETE:case S.STAGE_INSTANCE_UPDATE:this.extra={channel:t.client.channels.cache.get(i.options?.channel_id)??{id:i.options?.channel_id}};break;default:break}this.target=null;if(s===x.UNKNOWN){this.target=this.changes.reduce(((e,t)=>{e[t.key]=t.new??t.old;return e}),{});this.target.id=i.target_id}else if(s===x.USER&&i.target_id){this.target=t.client.options.partials.includes(v.USER)?t.client.users._add({id:i.target_id}):t.client.users.cache.get(i.target_id)}else if(s===x.GUILD){this.target=t.client.guilds.cache.get(i.target_id)}else if(s===x.WEBHOOK){this.target=e.webhooks.get(i.target_id)??new m(t.client,this.changes.reduce(((e,t)=>{e[t.key]=t.new??t.old;return e}),{id:i.target_id,guild_id:t.id}))}else if(s===x.INVITE){let e=this.changes.find((e=>e.key==="code"));e=e.new??e.old;this.target=t.invites.cache.get(e)??new l(t.client,this.changes.reduce(((e,t)=>{e[t.key]=t.new??t.old;return e}),{guild:t}))}else if(s===x.MESSAGE){this.target=i.action_type===S.MESSAGE_BULK_DELETE?t.channels.cache.get(i.target_id)??{id:i.target_id}:t.client.users.cache.get(i.target_id)}else if(s===x.INTEGRATION){this.target=e.integrations.get(i.target_id)??new o(t.client,this.changes.reduce(((e,t)=>{e[t.key]=t.new??t.old;return e}),{id:i.target_id}),t)}else if(s===x.CHANNEL||s===x.THREAD){this.target=t.channels.cache.get(i.target_id)??this.changes.reduce(((e,t)=>{e[t.key]=t.new??t.old;return e}),{id:i.target_id})}else if(s===x.STAGE_INSTANCE){this.target=t.stageInstances.cache.get(i.target_id)??new c(t.client,this.changes.reduce(((e,t)=>{e[t.key]=t.new??t.old;return e}),{id:i.target_id,channel_id:i.options?.channel_id,guild_id:t.id}))}else if(s===x.STICKER){this.target=t.stickers.cache.get(i.target_id)??new u(t.client,this.changes.reduce(((e,t)=>{e[t.key]=t.new??t.old;return e}),{id:i.target_id}))}else if(s===x.GUILD_SCHEDULED_EVENT){this.target=t.scheduledEvents.cache.get(i.target_id)??new r(t.client,this.changes.reduce(((e,t)=>{e[t.key]=t.new??t.old;return e}),{id:i.target_id,guild_id:t.id}))}else if(i.target_id){this.target=t[`${s.toLowerCase()}s`]?.cache.get(i.target_id)??{id:i.target_id}}}get createdTimestamp(){return _.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}toJSON(){return T.flatten(this,{createdTimestamp:true})}}GuildAuditLogs.Actions=S;GuildAuditLogs.Targets=x;GuildAuditLogs.Entry=GuildAuditLogsEntry;e.exports=GuildAuditLogs},99281:(e,t,i)=>{"use strict";const s=i(99307);class GuildBan extends s{constructor(e,t,i){super(e);this.guild=i;this._patch(t)}_patch(e){if("user"in e){this.user=this.client.users._add(e.user,true)}if("reason"in e){this.reason=e.reason}}get partial(){return!("reason"in this)}fetch(e=true){return this.guild.bans.fetch({user:this.user,cache:true,force:e})}}e.exports=GuildBan},58354:(e,t,i)=>{"use strict";const{Channel:s}=i(26481);const r=i(13727);const{Error:o}=i(94436);const l=i(89817);const{ChannelTypes:c,VoiceBasedChannelTypes:u}=i(98422);const m=i(97234);const g=i(28270);class GuildChannel extends s{constructor(e,t,i,s=true){super(e?.client??i,t,false);this.guild=e;this.guildId=e?.id??t.guild_id;this.parentId=this.parentId??null;this.permissionOverwrites=new l(this);if(t&&s)this._patch(t)}_patch(e){super._patch(e);if("name"in e){this.name=e.name}if("position"in e){this.rawPosition=e.position}if("guild_id"in e){this.guildId=e.guild_id}if("parent_id"in e){this.parentId=e.parent_id}if("permission_overwrites"in e){this.permissionOverwrites.cache.clear();for(const t of e.permission_overwrites){this.permissionOverwrites._add(t)}}}_clone(){const e=super._clone();e.permissionOverwrites=new l(e,this.permissionOverwrites.cache.values());return e}get parent(){return this.guild.channels.resolve(this.parentId)}get permissionsLocked(){if(!this.parent)return null;const e=new Set([...this.permissionOverwrites.cache.keys(),...this.parent.permissionOverwrites.cache.keys()]);return[...e].every((e=>{const t=this.permissionOverwrites.cache.get(e);const i=this.parent.permissionOverwrites.cache.get(e);if(!t&&i.deny.bitfield===m.defaultBit&&i.allow.bitfield===m.defaultBit||!i&&t.deny.bitfield===m.defaultBit&&t.allow.bitfield===m.defaultBit){return true}return typeof t!=="undefined"&&typeof i!=="undefined"&&t.deny.bitfield===i.deny.bitfield&&t.allow.bitfield===i.allow.bitfield}))}get position(){const e=this.guild._sortedChannels(this);return[...e.values()].indexOf(e.get(this.id))}permissionsFor(e,t=true){const i=this.guild.members.resolve(e);if(i)return this.memberPermissions(i,t);const s=this.guild.roles.resolve(e);return s&&this.rolePermissions(s,t)}overwritesFor(e,t=false,i=null){if(!t)e=this.guild.members.resolve(e);if(!e)return[];i??=e.roles.cache;const s=[];let r;let o;for(const t of this.permissionOverwrites.cache.values()){if(t.id===this.guild.id){o=t}else if(i.has(t.id)){s.push(t)}else if(t.id===e.id){r=t}}return{everyone:o,roles:s,member:r}}memberPermissions(e,t){if(t&&e.id===this.guild.ownerId)return new m(m.ALL).freeze();const i=e.roles.cache;const s=new m(i.map((e=>e.permissions)));if(t&&s.has(m.FLAGS.ADMINISTRATOR)){return new m(m.ALL).freeze()}const r=this.overwritesFor(e,true,i);return s.remove(r.everyone?.deny??m.defaultBit).add(r.everyone?.allow??m.defaultBit).remove(r.roles.length>0?r.roles.map((e=>e.deny)):m.defaultBit).add(r.roles.length>0?r.roles.map((e=>e.allow)):m.defaultBit).remove(r.member?.deny??m.defaultBit).add(r.member?.allow??m.defaultBit).freeze()}rolePermissions(e,t){if(t&&e.permissions.has(m.FLAGS.ADMINISTRATOR)){return new m(m.ALL).freeze()}const i=this.permissionOverwrites.cache.get(this.guild.id);const s=this.permissionOverwrites.cache.get(e.id);return e.permissions.remove(i?.deny??m.defaultBit).add(i?.allow??m.defaultBit).remove(s?.deny??m.defaultBit).add(s?.allow??m.defaultBit).freeze()}lockPermissions(){if(!this.parent)return Promise.reject(new o("GUILD_CHANNEL_ORPHAN"));const e=this.parent.permissionOverwrites.cache.map((e=>e.toJSON()));return this.edit({permissionOverwrites:e})}get members(){return this.guild.members.cache.filter((e=>this.permissionsFor(e).has(m.FLAGS.VIEW_CHANNEL,false)))}async edit(e,t){e.parent&&=this.client.channels.resolveId(e.parent);if(typeof e.position!=="undefined"){const i=await g.setPosition(this,e.position,false,this.guild._sortedChannels(this),this.client.api.guilds(this.guild.id).channels,t);this.client.actions.GuildChannelsPositionUpdate.handle({guild_id:this.guild.id,channels:i})}let i;if(e.permissionOverwrites){i=e.permissionOverwrites.map((e=>r.resolve(e,this.guild)))}if(e.lockPermissions){if(e.parent){const t=this.guild.channels.resolve(e.parent);if(t?.type==="GUILD_CATEGORY"){i=t.permissionOverwrites.cache.map((e=>r.resolve(e,this.guild)))}}else if(this.parent){i=this.parent.permissionOverwrites.cache.map((e=>r.resolve(e,this.guild)))}}const s=await this.client.api.channels(this.id).patch({data:{name:(e.name??this.name).trim(),type:c[e.type],topic:e.topic,nsfw:e.nsfw,bitrate:e.bitrate??this.bitrate,user_limit:e.userLimit??this.userLimit,rtc_region:e.rtcRegion??this.rtcRegion,parent_id:e.parent,lock_permissions:e.lockPermissions,rate_limit_per_user:e.rateLimitPerUser,default_auto_archive_duration:e.defaultAutoArchiveDuration,permission_overwrites:i},reason:t});return this.client.actions.ChannelUpdate.handle(s).updated}setName(e,t){return this.edit({name:e},t)}setParent(e,{lockPermissions:t=true,reason:i}={}){return this.edit({parent:e??null,lockPermissions:t},i)}async setPosition(e,{relative:t,reason:i}={}){const s=await g.setPosition(this,e,t,this.guild._sortedChannels(this),this.client.api.guilds(this.guild.id).channels,i);this.client.actions.GuildChannelsPositionUpdate.handle({guild_id:this.guild.id,channels:s});return this}clone(e={}){return this.guild.channels.create(e.name??this.name,{permissionOverwrites:this.permissionOverwrites.cache,topic:this.topic,type:this.type,nsfw:this.nsfw,parent:this.parent,bitrate:this.bitrate,userLimit:this.userLimit,rateLimitPerUser:this.rateLimitPerUser,position:this.rawPosition,reason:null,...e})}equals(e){let t=e&&this.id===e.id&&this.type===e.type&&this.topic===e.topic&&this.position===e.position&&this.name===e.name;if(t){if(this.permissionOverwrites&&e.permissionOverwrites){t=this.permissionOverwrites.cache.equals(e.permissionOverwrites.cache)}else{t=!this.permissionOverwrites&&!e.permissionOverwrites}}return t}get deletable(){return this.manageable&&this.guild.rulesChannelId!==this.id&&this.guild.publicUpdatesChannelId!==this.id}get manageable(){if(this.client.user.id===this.guild.ownerId)return true;const e=this.permissionsFor(this.client.user);if(!e)return false;if(e.has(m.FLAGS.ADMINISTRATOR,false))return true;if(this.guild.me.communicationDisabledUntilTimestamp>Date.now())return false;const t=u.includes(this.type)?m.FLAGS.MANAGE_CHANNELS|m.FLAGS.CONNECT:m.FLAGS.VIEW_CHANNEL|m.FLAGS.MANAGE_CHANNELS;return e.has(t,false)}get viewable(){if(this.client.user.id===this.guild.ownerId)return true;const e=this.permissionsFor(this.client.user);if(!e)return false;return e.has(m.FLAGS.VIEW_CHANNEL,false)}async delete(e){await this.client.api.channels(this.id).delete({reason:e});return this}}e.exports=GuildChannel},78632:(e,t,i)=>{"use strict";const s=i(25036);const{Error:r}=i(94436);const o=i(31760);const l=i(97234);class GuildEmoji extends s{constructor(e,t,i){super(e,t,i);this.author=null;Object.defineProperty(this,"_roles",{value:[],writable:true});this._patch(t)}_clone(){const e=super._clone();e._roles=this._roles.slice();return e}_patch(e){super._patch(e);if(e.user)this.author=this.client.users._add(e.user);if(e.roles)this._roles=e.roles}get deletable(){if(!this.guild.me)throw new r("GUILD_UNCACHED_ME");return!this.managed&&this.guild.me.permissions.has(l.FLAGS.MANAGE_EMOJIS_AND_STICKERS)}get roles(){return new o(this)}async fetchAuthor(){if(this.managed){throw new r("EMOJI_MANAGED")}else{if(!this.guild.me)throw new r("GUILD_UNCACHED_ME");if(!this.guild.me.permissions.has(l.FLAGS.MANAGE_EMOJIS_AND_STICKERS)){throw new r("MISSING_MANAGE_EMOJIS_AND_STICKERS_PERMISSION",this.guild)}}const e=await this.client.api.guilds(this.guild.id).emojis(this.id).get();this._patch(e);return this.author}async edit(e,t){const i=e.roles?.map((e=>e.id??e));const s=await this.client.api.guilds(this.guild.id).emojis(this.id).patch({data:{name:e.name,roles:i},reason:t});const r=this._clone();r._patch(s);return r}setName(e,t){return this.edit({name:e},t)}async delete(e){await this.client.api.guilds(this.guild.id).emojis(this.id).delete({reason:e});return this}equals(e){if(e instanceof GuildEmoji){return e.id===this.id&&e.name===this.name&&e.managed===this.managed&&e.available===this.available&&e.requiresColons===this.requiresColons&&e.roles.cache.size===this.roles.cache.size&&e.roles.cache.every((e=>this.roles.cache.has(e.id)))}else{return e.id===this.id&&e.name===this.name&&e.roles.length===this.roles.cache.size&&e.roles.every((e=>this.roles.cache.has(e)))}}}e.exports=GuildEmoji},27081:(e,t,i)=>{"use strict";const s=i(97742);const r=i(99307);const o=i(79721);const l=i(30367);const{Error:c}=i(94436);const u=i(73232);const m=i(97234);const g=new WeakSet;let v=false;class GuildMember extends r{constructor(e,t,i){super(e);this.guild=i;this.joinedTimestamp=null;this.premiumSinceTimestamp=null;this.nickname=null;this.pending=false;this.communicationDisabledUntilTimestamp=null;this._roles=[];if(t)this._patch(t)}_patch(e){if("user"in e){this.user=this.client.users._add(e.user,true)}if("nick"in e)this.nickname=e.nick;if("avatar"in e){this.avatar=e.avatar}else if(typeof this.avatar!=="string"){this.avatar=null}if("joined_at"in e)this.joinedTimestamp=new Date(e.joined_at).getTime();if("premium_since"in e){this.premiumSinceTimestamp=e.premium_since?new Date(e.premium_since).getTime():null}if("roles"in e)this._roles=e.roles;this.pending=e.pending??false;if("communication_disabled_until"in e){this.communicationDisabledUntilTimestamp=e.communication_disabled_until&&Date.parse(e.communication_disabled_until)}}_clone(){const e=super._clone();e._roles=this._roles.slice();return e}get deleted(){if(!v){v=true;s.emitWarning("GuildMember#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}return g.has(this)}set deleted(e){if(!v){v=true;s.emitWarning("GuildMember#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}if(e)g.add(this);else g.delete(this)}get partial(){return this.joinedTimestamp===null}get roles(){return new u(this)}get voice(){return this.guild.voiceStates.cache.get(this.id)??new o(this.guild,{user_id:this.id})}avatarURL({format:e,size:t,dynamic:i}={}){if(!this.avatar)return null;return this.client.rest.cdn.GuildMemberAvatar(this.guild.id,this.id,this.avatar,e,t,i)}displayAvatarURL(e){return this.avatarURL(e)??this.user.displayAvatarURL(e)}get joinedAt(){return this.joinedTimestamp?new Date(this.joinedTimestamp):null}get communicationDisabledUntil(){return this.communicationDisabledUntilTimestamp&&new Date(this.communicationDisabledUntilTimestamp)}get premiumSince(){return this.premiumSinceTimestamp?new Date(this.premiumSinceTimestamp):null}get presence(){return this.guild.presences.resolve(this.id)}get displayColor(){return this.roles.color?.color??0}get displayHexColor(){return this.roles.color?.hexColor??"#000000"}get id(){return this.user.id}get displayName(){return this.nickname??this.user.username}get permissions(){if(this.user.id===this.guild.ownerId)return new m(m.ALL).freeze();return new m(this.roles.cache.map((e=>e.permissions))).freeze()}get manageable(){if(this.user.id===this.guild.ownerId)return false;if(this.user.id===this.client.user.id)return false;if(this.client.user.id===this.guild.ownerId)return true;if(!this.guild.me)throw new c("GUILD_UNCACHED_ME");return this.guild.me.roles.highest.comparePositionTo(this.roles.highest)>0}get kickable(){return this.manageable&&this.guild.me.permissions.has(m.FLAGS.KICK_MEMBERS)}get bannable(){return this.manageable&&this.guild.me.permissions.has(m.FLAGS.BAN_MEMBERS)}get moderatable(){return this.manageable&&(this.guild.me?.permissions.has(m.FLAGS.MODERATE_MEMBERS)??false)}isCommunicationDisabled(){return this.communicationDisabledUntilTimestamp>Date.now()}permissionsIn(e){e=this.guild.channels.resolve(e);if(!e)throw new c("GUILD_CHANNEL_RESOLVE");return e.permissionsFor(this)}edit(e,t){return this.guild.members.edit(this,e,t)}setNickname(e,t){return this.edit({nick:e},t)}createDM(e=false){return this.user.createDM(e)}deleteDM(){return this.user.deleteDM()}kick(e){return this.guild.members.kick(this,e)}ban(e){return this.guild.members.ban(this,e)}disableCommunicationUntil(e,t){return this.edit({communicationDisabledUntil:e},t)}timeout(e,t){return this.disableCommunicationUntil(e&&Date.now()+e,t)}fetch(e=true){return this.guild.members.fetch({user:this.id,cache:true,force:e})}equals(e){return e instanceof this.constructor&&this.id===e.id&&this.partial===e.partial&&this.guild.id===e.guild.id&&this.joinedTimestamp===e.joinedTimestamp&&this.nickname===e.nickname&&this.avatar===e.avatar&&this.pending===e.pending&&this.communicationDisabledUntilTimestamp===e.communicationDisabledUntilTimestamp&&(this._roles===e._roles||this._roles.length===e._roles.length&&this._roles.every(((t,i)=>t===e._roles[i])))}toString(){return`<@${this.nickname?"!":""}${this.user.id}>`}toJSON(){const e=super.toJSON({guild:"guildId",user:"userId",displayName:true,roles:true});e.avatarURL=this.avatarURL();e.displayAvatarURL=this.displayAvatarURL();return e}send(){}}l.applyToClass(GuildMember);t.GuildMember=GuildMember;t.deletedGuildMembers=g},11553:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(99307);const o=i(88128);const l=i(40421);class GuildPreview extends r{constructor(e,t){super(e);if(!t)return;this._patch(t)}_patch(e){this.id=e.id;if("name"in e){this.name=e.name}if("icon"in e){this.icon=e.icon}if("splash"in e){this.splash=e.splash}if("discovery_splash"in e){this.discoverySplash=e.discovery_splash}if("features"in e){this.features=e.features}if("approximate_member_count"in e){this.approximateMemberCount=e.approximate_member_count}if("approximate_presence_count"in e){this.approximatePresenceCount=e.approximate_presence_count}if("description"in e){this.description=e.description}else{this.description??=null}if(!this.emojis){this.emojis=new s}else{this.emojis.clear()}for(const t of e.emojis){this.emojis.set(t.id,new o(this.client,t,this))}}get createdTimestamp(){return l.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}splashURL({format:e,size:t}={}){return this.splash&&this.client.rest.cdn.Splash(this.id,this.splash,e,t)}discoverySplashURL({format:e,size:t}={}){return this.discoverySplash&&this.client.rest.cdn.DiscoverySplash(this.id,this.discoverySplash,e,t)}iconURL({format:e,size:t,dynamic:i}={}){return this.icon&&this.client.rest.cdn.Icon(this.id,this.icon,e,t,i)}async fetch(){const e=await this.client.api.guilds(this.id).preview.get();this._patch(e);return this}toString(){return this.name}toJSON(){const e=super.toJSON();e.iconURL=this.iconURL();e.splashURL=this.splashURL();return e}}e.exports=GuildPreview},88128:(e,t,i)=>{"use strict";const s=i(25036);class GuildPreviewEmoji extends s{constructor(e,t,i){super(e,t,i);this.roles=t.roles}}e.exports=GuildPreviewEmoji},5226:(e,t,i)=>{"use strict";const s=i(99307);const{Error:r}=i(94436);const{GuildScheduledEventEntityTypes:o,GuildScheduledEventStatuses:l,GuildScheduledEventPrivacyLevels:c,Endpoints:u}=i(98422);const m=i(40421);class GuildScheduledEvent extends s{constructor(e,t){super(e);this.id=t.id;this.guildId=t.guild_id;this._patch(t)}_patch(e){if("channel_id"in e){this.channelId=e.channel_id}else{this.channelId??=null}if("creator_id"in e){this.creatorId=e.creator_id}else{this.creatorId??=null}this.name=e.name;if("description"in e){this.description=e.description}else{this.description??=null}this.scheduledStartTimestamp=e.scheduled_start_time?Date.parse(e.scheduled_start_time):null;this.scheduledEndTimestamp=e.scheduled_end_time?Date.parse(e.scheduled_end_time):null;this.privacyLevel=c[e.privacy_level];this.status=l[e.status];this.entityType=o[e.entity_type];if("entity_id"in e){this.entityId=e.entity_id}else{this.entityId??=null}if("user_count"in e){this.userCount=e.user_count}else{this.userCount??=null}if("creator"in e){this.creator=this.client.users._add(e.creator)}else{this.creator??=this.client.users.resolve(this.creatorId)}if("entity_metadata"in e){if(e.entity_metadata){this.entityMetadata={location:e.entity_metadata.location??this.entityMetadata?.location??null}}else{this.entityMetadata=null}}else{this.entityMetadata??=null}}get createdTimestamp(){return m.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}get scheduledStartAt(){return new Date(this.scheduledStartTimestamp)}get scheduledEndAt(){return this.scheduledEndTimestamp&&new Date(this.scheduledEndTimestamp)}get channel(){return this.client.channels.resolve(this.channelId)}get guild(){return this.client.guilds.resolve(this.guildId)}get url(){return u.scheduledEvent(this.client.options.http.scheduledEvent,this.guildId,this.id)}async createInviteURL(e){let t=this.channelId;if(this.entityType==="EXTERNAL"){if(!e?.channel)throw new r("INVITE_OPTIONS_MISSING_CHANNEL");t=this.guild.channels.resolveId(e.channel);if(!t)throw new r("GUILD_CHANNEL_RESOLVE")}const i=await this.guild.invites.create(t,e);return u.invite(this.client.options.http.invite,i.code,this.id)}edit(e){return this.guild.scheduledEvents.edit(this.id,e)}async delete(){await this.guild.scheduledEvents.delete(this.id);return this}setName(e,t){return this.edit({name:e,reason:t})}setScheduledStartTime(e,t){return this.edit({scheduledStartTime:e,reason:t})}setScheduledEndTime(e,t){return this.edit({scheduledEndTime:e,reason:t})}setDescription(e,t){return this.edit({description:e,reason:t})}setStatus(e,t){return this.edit({status:e,reason:t})}setLocation(e,t){return this.edit({entityMetadata:{location:e},reason:t})}fetchSubscribers(e){return this.guild.scheduledEvents.fetchSubscribers(this.id,e)}toString(){return this.url}isActive(){return l[this.status]===l.ACTIVE}isCanceled(){return l[this.status]===l.CANCELED}isCompleted(){return l[this.status]===l.COMPLETED}isScheduled(){return l[this.status]===l.SCHEDULED}}t.GuildScheduledEvent=GuildScheduledEvent},20999:(e,t,i)=>{"use strict";const{setTimeout:s}=i(92332);const r=i(99307);const{Events:o}=i(98422);const l=i(73642);class GuildTemplate extends r{constructor(e,t){super(e);this._patch(t)}_patch(e){if("code"in e){this.code=e.code}if("name"in e){this.name=e.name}if("description"in e){this.description=e.description}if("usage_count"in e){this.usageCount=e.usage_count}if("creator_id"in e){this.creatorId=e.creator_id}if("creator"in e){this.creator=this.client.users._add(e.creator)}if("created_at"in e){this.createdAt=new Date(e.created_at)}if("updated_at"in e){this.updatedAt=new Date(e.updated_at)}if("source_guild_id"in e){this.guildId=e.source_guild_id}if("serialized_source_guild"in e){this.serializedGuild=e.serialized_source_guild}this.unSynced="is_dirty"in e?Boolean(e.is_dirty):null;return this}async createGuild(e,t){const{client:i}=this;const r=await i.api.guilds.templates(this.code).post({data:{name:e,icon:await l.resolveImage(t)}});if(i.guilds.cache.has(r.id))return i.guilds.cache.get(r.id);return new Promise((e=>{const resolveGuild=t=>{i.off(o.GUILD_CREATE,handleGuild);i.decrementMaxListeners();e(t)};const handleGuild=e=>{if(e.id===r.id){clearTimeout(t);resolveGuild(e)}};i.incrementMaxListeners();i.on(o.GUILD_CREATE,handleGuild);const t=s((()=>resolveGuild(i.guilds._add(r))),1e4).unref()}))}async edit({name:e,description:t}={}){const i=await this.client.api.guilds(this.guildId).templates(this.code).patch({data:{name:e,description:t}});return this._patch(i)}async delete(){await this.client.api.guilds(this.guildId).templates(this.code).delete();return this}async sync(){const e=await this.client.api.guilds(this.guildId).templates(this.code).put();return this._patch(e)}get createdTimestamp(){return this.createdAt.getTime()}get updatedTimestamp(){return this.updatedAt.getTime()}get guild(){return this.client.guilds.resolve(this.guildId)}get url(){return`${this.client.options.http.template}/${this.code}`}toString(){return this.code}}GuildTemplate.GUILD_TEMPLATES_PATTERN=/discord(?:app)?\.(?:com\/template|new)\/([\w-]{2,255})/gi;e.exports=GuildTemplate},32879:(e,t,i)=>{"use strict";const s=i(99307);const r=i(41654);class Integration extends s{constructor(e,t,i){super(e);this.guild=i;this.id=t.id;this.name=t.name;this.type=t.type;this.enabled=t.enabled;this.syncing=t.syncing;this.role=this.guild.roles.cache.get(t.role_id);if("enable_emoticons"in t){this.enableEmoticons=t.enable_emoticons}else{this.enableEmoticons??=null}if(t.user){this.user=this.client.users._add(t.user)}else{this.user=null}this.account=t.account;this.syncedAt=t.synced_at;if("subscriber_count"in t){this.subscriberCount=t.subscriber_count}else{this.subscriberCount??=null}if("revoked"in t){this.revoked=t.revoked}else{this.revoked??=null}this._patch(t)}get roles(){const e=this.guild.roles.cache;return e.filter((e=>e.tags?.integrationId===this.id))}_patch(e){if("expire_behavior"in e){this.expireBehavior=e.expire_behavior}if("expire_grace_period"in e){this.expireGracePeriod=e.expire_grace_period}if("application"in e){if(this.application){this.application._patch(e.application)}else{this.application=new r(this.client,e.application)}}else{this.application??=null}}async delete(e){await this.client.api.guilds(this.guild.id).integrations(this.id).delete({reason:e});return this}toJSON(){return super.toJSON({role:"roleId",guild:"guildId",user:"userId"})}}e.exports=Integration},41654:(e,t,i)=>{"use strict";const s=i(39425);class IntegrationApplication extends s{_patch(e){super._patch(e);if("bot"in e){this.bot=this.client.users._add(e.bot)}else{this.bot??=null}if("terms_of_service_url"in e){this.termsOfServiceURL=e.terms_of_service_url}else{this.termsOfServiceURL??=null}if("privacy_policy_url"in e){this.privacyPolicyURL=e.privacy_policy_url}else{this.privacyPolicyURL??=null}if("rpc_origins"in e){this.rpcOrigins=e.rpc_origins}else{this.rpcOrigins??=[]}if("summary"in e){this.summary=e.summary}else{this.summary??=null}if("hook"in e){this.hook=e.hook}else{this.hook??=null}if("cover_image"in e){this.cover=e.cover_image}else{this.cover??=null}if("verify_key"in e){this.verifyKey=e.verify_key}else{this.verifyKey??=null}}}e.exports=IntegrationApplication},63239:(e,t,i)=>{"use strict";const s=i(99307);const{InteractionTypes:r,MessageComponentTypes:o,ApplicationCommandTypes:l}=i(98422);const c=i(97234);const u=i(40421);class Interaction extends s{constructor(e,t){super(e);this.type=r[t.type];this.id=t.id;Object.defineProperty(this,"token",{value:t.token});this.applicationId=t.application_id;this.channelId=t.channel_id??null;this.guildId=t.guild_id??null;this.user=this.client.users._add(t.user??t.member.user);this.member=t.member?this.guild?.members._add(t.member)??t.member:null;this.version=t.version;this.memberPermissions=t.member?.permissions?new c(t.member.permissions).freeze():null;this.locale=t.locale;this.guildLocale=t.guild_locale??null}get createdTimestamp(){return u.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}get channel(){return this.client.channels.cache.get(this.channelId)??null}get guild(){return this.client.guilds.cache.get(this.guildId)??null}inGuild(){return Boolean(this.guildId&&this.member)}inCachedGuild(){return Boolean(this.guild&&this.member)}inRawGuild(){return Boolean(this.guildId&&!this.guild&&this.member)}isApplicationCommand(){return r[this.type]===r.APPLICATION_COMMAND}isCommand(){return r[this.type]===r.APPLICATION_COMMAND&&typeof this.targetId==="undefined"}isContextMenu(){return r[this.type]===r.APPLICATION_COMMAND&&typeof this.targetId!=="undefined"}isUserContextMenu(){return this.isContextMenu()&&l[this.targetType]===l.USER}isMessageContextMenu(){return this.isContextMenu()&&l[this.targetType]===l.MESSAGE}isAutocomplete(){return r[this.type]===r.APPLICATION_COMMAND_AUTOCOMPLETE}isMessageComponent(){return r[this.type]===r.MESSAGE_COMPONENT}isButton(){return r[this.type]===r.MESSAGE_COMPONENT&&o[this.componentType]===o.BUTTON}isSelectMenu(){return r[this.type]===r.MESSAGE_COMPONENT&&o[this.componentType]===o.SELECT_MENU}}e.exports=Interaction},19811:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(33858);const{Events:o}=i(98422);const{InteractionTypes:l,MessageComponentTypes:c}=i(98422);class InteractionCollector extends r{constructor(e,t={}){super(e,t);this.messageId=t.message?.id??null;this.channelId=this.client.channels.resolveId(t.message?.channel)??t.message?.channel_id??this.client.channels.resolveId(t.channel);this.guildId=this.client.guilds.resolveId(t.message?.guild)??t.message?.guild_id??this.client.guilds.resolveId(t.channel?.guild)??this.client.guilds.resolveId(t.guild);this.interactionType=typeof t.interactionType==="number"?l[t.interactionType]:t.interactionType??null;this.componentType=typeof t.componentType==="number"?c[t.componentType]:t.componentType??null;this.users=new s;this.total=0;this.empty=this.empty.bind(this);this.client.incrementMaxListeners();const bulkDeleteListener=e=>{if(e.has(this.messageId))this.stop("messageDelete")};if(this.messageId){this._handleMessageDeletion=this._handleMessageDeletion.bind(this);this.client.on(o.MESSAGE_DELETE,this._handleMessageDeletion);this.client.on(o.MESSAGE_BULK_DELETE,bulkDeleteListener)}if(this.channelId){this._handleChannelDeletion=this._handleChannelDeletion.bind(this);this._handleThreadDeletion=this._handleThreadDeletion.bind(this);this.client.on(o.CHANNEL_DELETE,this._handleChannelDeletion);this.client.on(o.THREAD_DELETE,this._handleThreadDeletion)}if(this.guildId){this._handleGuildDeletion=this._handleGuildDeletion.bind(this);this.client.on(o.GUILD_DELETE,this._handleGuildDeletion)}this.client.on(o.INTERACTION_CREATE,this.handleCollect);this.once("end",(()=>{this.client.removeListener(o.INTERACTION_CREATE,this.handleCollect);this.client.removeListener(o.MESSAGE_DELETE,this._handleMessageDeletion);this.client.removeListener(o.MESSAGE_BULK_DELETE,bulkDeleteListener);this.client.removeListener(o.CHANNEL_DELETE,this._handleChannelDeletion);this.client.removeListener(o.THREAD_DELETE,this._handleThreadDeletion);this.client.removeListener(o.GUILD_DELETE,this._handleGuildDeletion);this.client.decrementMaxListeners()}));this.on("collect",(e=>{this.total++;this.users.set(e.user.id,e.user)}))}collect(e){if(this.interactionType&&e.type!==this.interactionType)return null;if(this.componentType&&e.componentType!==this.componentType)return null;if(this.messageId&&e.message?.id!==this.messageId)return null;if(this.channelId&&e.channelId!==this.channelId)return null;if(this.guildId&&e.guildId!==this.guildId)return null;return e.id}dispose(e){if(this.type&&e.type!==this.type)return null;if(this.componentType&&e.componentType!==this.componentType)return null;if(this.messageId&&e.message?.id!==this.messageId)return null;if(this.channelId&&e.channelId!==this.channelId)return null;if(this.guildId&&e.guildId!==this.guildId)return null;return e.id}empty(){this.total=0;this.collected.clear();this.users.clear();this.checkEnd()}get endReason(){if(this.options.max&&this.total>=this.options.max)return"limit";if(this.options.maxComponents&&this.collected.size>=this.options.maxComponents)return"componentLimit";if(this.options.maxUsers&&this.users.size>=this.options.maxUsers)return"userLimit";return null}_handleMessageDeletion(e){if(e.id===this.messageId){this.stop("messageDelete")}}_handleChannelDeletion(e){if(e.id===this.channelId||e.threads?.cache.has(this.channelId)){this.stop("channelDelete")}}_handleThreadDeletion(e){if(e.id===this.channelId){this.stop("threadDelete")}}_handleGuildDeletion(e){if(e.id===this.guildId){this.stop("guildDelete")}}}e.exports=InteractionCollector},53996:(e,t,i)=>{"use strict";const s=i(95600);class InteractionWebhook{constructor(e,t,i){Object.defineProperty(this,"client",{value:e});this.id=t;Object.defineProperty(this,"token",{value:i,writable:true,configurable:true})}send(){}fetchMessage(){}editMessage(){}deleteMessage(){}get url(){}}s.applyToClass(InteractionWebhook,["sendSlackMessage","edit","delete","createdTimestamp","createdAt"]);e.exports=InteractionWebhook},93979:(e,t,i)=>{"use strict";const s=i(99307);const{GuildScheduledEvent:r}=i(5226);const o=i(41654);const l=i(42706);const{Error:c}=i(94436);const{Endpoints:u}=i(98422);const m=i(97234);class Invite extends s{constructor(e,t){super(e);this._patch(t)}_patch(e){const t=i(92484);this.guild??=null;if(e.guild){this.guild=this.client.guilds.resolve(e.guild.id)??new t(this.client,e.guild)}if("code"in e){this.code=e.code}if("approximate_presence_count"in e){this.presenceCount=e.approximate_presence_count}else{this.presenceCount??=null}if("approximate_member_count"in e){this.memberCount=e.approximate_member_count}else{this.memberCount??=null}if("temporary"in e){this.temporary=e.temporary??null}else{this.temporary??=null}if("max_age"in e){this.maxAge=e.max_age}else{this.maxAge??=null}if("uses"in e){this.uses=e.uses}else{this.uses??=null}if("max_uses"in e){this.maxUses=e.max_uses}else{this.maxUses??=null}if("inviter_id"in e){this.inviterId=e.inviter_id;this.inviter=this.client.users.resolve(e.inviter_id)}else{this.inviterId??=null}if("inviter"in e){this.inviter??=this.client.users._add(e.inviter);this.inviterId=e.inviter.id}else{this.inviter??=null}if("target_user"in e){this.targetUser=this.client.users._add(e.target_user)}else{this.targetUser??=null}if("target_application"in e){this.targetApplication=new o(this.client,e.target_application)}else{this.targetApplication??=null}if("target_type"in e){this.targetType=e.target_type}else{this.targetType??=null}if("channel_id"in e){this.channelId=e.channel_id;this.channel=this.client.channels.cache.get(e.channel_id)}if("channel"in e){this.channel??=this.client.channels._add(e.channel,this.guild,{cache:false});this.channelId??=e.channel.id}if("created_at"in e){this.createdTimestamp=new Date(e.created_at).getTime()}else{this.createdTimestamp??=null}if("expires_at"in e)this._expiresTimestamp=new Date(e.expires_at).getTime();else this._expiresTimestamp??=null;if("stage_instance"in e){this.stageInstance=new l(this.client,e.stage_instance,this.channel.id,this.guild.id)}else{this.stageInstance??=null}if("guild_scheduled_event"in e){this.guildScheduledEvent=new r(this.client,e.guild_scheduled_event)}else{this.guildScheduledEvent??=null}}get createdAt(){return this.createdTimestamp?new Date(this.createdTimestamp):null}get deletable(){const e=this.guild;if(!e||!this.client.guilds.cache.has(e.id))return false;if(!e.me)throw new c("GUILD_UNCACHED_ME");return this.channel.permissionsFor(this.client.user).has(m.FLAGS.MANAGE_CHANNELS,false)||e.me.permissions.has(m.FLAGS.MANAGE_GUILD)}get expiresTimestamp(){return this._expiresTimestamp??(this.createdTimestamp&&this.maxAge?this.createdTimestamp+this.maxAge*1e3:null)}get expiresAt(){const{expiresTimestamp:e}=this;return e?new Date(e):null}get url(){return u.invite(this.client.options.http.invite,this.code)}async delete(e){await this.client.api.invites[this.code].delete({reason:e});return this}toString(){return this.url}toJSON(){return super.toJSON({url:true,expiresTimestamp:true,presenceCount:false,memberCount:false,uses:false,channel:"channelId",inviter:"inviterId",guild:"guildId"})}valueOf(){return this.code}}Invite.INVITES_PATTERN=/discord(?:(?:app)?\.com\/invite|\.gg(?:\/invite)?)\/([\w-]{2,255})/gi;e.exports=Invite},92484:(e,t,i)=>{"use strict";const s=i(79754);const r=i(82252);class InviteGuild extends s{constructor(e,t){super(e,t);this.welcomeScreen=typeof t.welcome_screen!=="undefined"?new r(this,t.welcome_screen):null}}e.exports=InviteGuild},42706:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(99307);class InviteStageInstance extends r{constructor(e,t,i,r){super(e);this.channelId=i;this.guildId=r;this.members=new s;this._patch(t)}_patch(e){if("topic"in e){this.topic=e.topic}if("participant_count"in e){this.participantCount=e.participant_count}if("speaker_count"in e){this.speakerCount=e.speaker_count}this.members.clear();for(const t of e.members){const e=this.guild.members._add(t);this.members.set(e.id,e)}}get channel(){return this.client.channels.resolve(this.channelId)}get guild(){return this.client.guilds.resolve(this.guildId)}}e.exports=InviteStageInstance},4975:(e,t,i)=>{"use strict";const s=i(97742);const{Collection:r}=i(38861);const o=i(99307);const l=i(93497);const c=i(27782);const u=i(19811);const m=i(24681);const g=i(6150);const v=i(74598);const _=i(4405);const T=i(4499);const{Sticker:x}=i(27149);const{Error:S}=i(94436);const A=i(19277);const{InteractionTypes:I,MessageTypes:N,SystemMessageTypes:O}=i(98422);const R=i(62840);const k=i(97234);const P=i(40421);const M=i(28270);const q=new WeakSet;let G=false;class Message extends o{constructor(e,t){super(e);this.channelId=t.channel_id;this.guildId=t.guild_id??this.channel?.guild?.id??null;this._patch(t)}_patch(e){this.id=e.id;this.createdTimestamp=P.timestampFrom(this.id);if("type"in e){this.type=N[e.type];this.system=O.includes(this.type)}else{this.system??=null;this.type??=null}if("content"in e){this.content=e.content}else{this.content??=null}if("author"in e){this.author=this.client.users._add(e.author,!e.webhook_id)}else{this.author??=null}if("pinned"in e){this.pinned=Boolean(e.pinned)}else{this.pinned??=null}if("tts"in e){this.tts=e.tts}else{this.tts??=null}if("nonce"in e){this.nonce=e.nonce}else{this.nonce??=null}if("embeds"in e){this.embeds=e.embeds.map((e=>new g(e,true)))}else{this.embeds=this.embeds?.slice()??[]}if("components"in e){this.components=e.components.map((e=>l.create(e,this.client)))}else{this.components=this.components?.slice()??[]}if("attachments"in e){this.attachments=new r;if(e.attachments){for(const t of e.attachments){this.attachments.set(t.id,new m(t.url,t.filename,t))}}}else{this.attachments=new r(this.attachments)}if("sticker_items"in e||"stickers"in e){this.stickers=new r((e.sticker_items??e.stickers)?.map((e=>[e.id,new x(this.client,e)])))}else{this.stickers=new r(this.stickers)}if(e.edited_timestamp){this.editedTimestamp=new Date(e.edited_timestamp).getTime()}else{this.editedTimestamp??=null}if("reactions"in e){this.reactions=new A(this);if(e.reactions?.length>0){for(const t of e.reactions){this.reactions._add(t)}}}else{this.reactions??=new A(this)}if(!this.mentions){this.mentions=new v(this,e.mentions,e.mention_roles,e.mention_everyone,e.mention_channels,e.referenced_message?.author)}else{this.mentions=new v(this,e.mentions??this.mentions.users,e.mention_roles??this.mentions.roles,e.mention_everyone??this.mentions.everyone,e.mention_channels??this.mentions.crosspostedChannels,e.referenced_message?.author??this.mentions.repliedUser)}if("webhook_id"in e){this.webhookId=e.webhook_id}else{this.webhookId??=null}if("application"in e){this.groupActivityApplication=new c(this.client,e.application)}else{this.groupActivityApplication??=null}if("application_id"in e){this.applicationId=e.application_id}else{this.applicationId??=null}if("activity"in e){this.activity={partyId:e.activity.party_id,type:e.activity.type}}else{this.activity??=null}if("thread"in e){this.client.channels._add(e.thread,this.guild)}if(this.member&&e.member){this.member._patch(e.member)}else if(e.member&&this.guild&&this.author){this.guild.members._add(Object.assign(e.member,{user:this.author}))}if("flags"in e){this.flags=new R(e.flags).freeze()}else{this.flags=new R(this.flags).freeze()}if("message_reference"in e){this.reference={channelId:e.message_reference.channel_id,guildId:e.message_reference.guild_id,messageId:e.message_reference.message_id}}else{this.reference??=null}if(e.referenced_message){this.channel?.messages._add({guild_id:e.message_reference?.guild_id,...e.referenced_message})}if(e.interaction){this.interaction={id:e.interaction.id,type:I[e.interaction.type],commandName:e.interaction.name,user:this.client.users._add(e.interaction.user)}}else{this.interaction??=null}}get deleted(){if(!G){G=true;s.emitWarning("Message#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}return q.has(this)}set deleted(e){if(!G){G=true;s.emitWarning("Message#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}if(e)q.add(this);else q.delete(this)}get channel(){return this.client.channels.resolve(this.channelId)}get partial(){return typeof this.content!=="string"||!this.author}get member(){return this.guild?.members.resolve(this.author)??null}get createdAt(){return new Date(this.createdTimestamp)}get editedAt(){return this.editedTimestamp?new Date(this.editedTimestamp):null}get guild(){return this.client.guilds.resolve(this.guildId)??this.channel?.guild??null}get hasThread(){return this.flags.has(R.FLAGS.HAS_THREAD)}get thread(){return this.channel?.threads?.resolve(this.id)??null}get url(){return`https://discord.com/channels/${this.guildId??"@me"}/${this.channelId}/${this.id}`}get cleanContent(){return this.content!=null?M.cleanContent(this.content,this.channel):null}createReactionCollector(e={}){return new T(this,e)}awaitReactions(e={}){return new Promise(((t,i)=>{const s=this.createReactionCollector(e);s.once("end",((s,r)=>{if(e.errors?.includes(r))i(s);else t(s)}))}))}createMessageComponentCollector(e={}){return new u(this.client,{...e,interactionType:I.MESSAGE_COMPONENT,message:this})}awaitMessageComponent(e={}){const t={...e,max:1};return new Promise(((e,i)=>{const s=this.createMessageComponentCollector(t);s.once("end",((t,s)=>{const r=t.first();if(r)e(r);else i(new S("INTERACTION_COLLECTOR_ERROR",s))}))}))}get editable(){const e=Boolean(this.author.id===this.client.user.id&&!q.has(this)&&(!this.guild||this.channel?.viewable));if(this.channel?.isThread()){return e&&!this.channel.locked}return e}get deletable(){if(q.has(this)){return false}if(!this.guild){return this.author.id===this.client.user.id}if(!this.channel?.viewable){return false}const e=this.channel?.permissionsFor(this.client.user);if(!e)return false;if(e.has(k.FLAGS.ADMINISTRATOR,false))return true;return Boolean(this.author.id===this.client.user.id||e.has(k.FLAGS.MANAGE_MESSAGES,false)&&this.guild.me.communicationDisabledUntilTimestamp<Date.now())}get pinnable(){const{channel:e}=this;return Boolean(!this.system&&!q.has(this)&&(!this.guild||e?.viewable&&e?.permissionsFor(this.client.user)?.has(k.FLAGS.MANAGE_MESSAGES,false)))}async fetchReference(){if(!this.reference)throw new S("MESSAGE_REFERENCE_MISSING");const{channelId:e,messageId:t}=this.reference;const i=this.client.channels.resolve(e);if(!i)throw new S("GUILD_CHANNEL_RESOLVE");const s=await i.messages.fetch(t);return s}get crosspostable(){const e=k.FLAGS.SEND_MESSAGES|(this.author.id===this.client.user.id?k.defaultBit:k.FLAGS.MANAGE_MESSAGES);const{channel:t}=this;return Boolean(t?.type==="GUILD_NEWS"&&!this.flags.has(R.FLAGS.CROSSPOSTED)&&this.type==="DEFAULT"&&t.viewable&&t.permissionsFor(this.client.user)?.has(e,false)&&!q.has(this))}edit(e){if(!this.channel)return Promise.reject(new S("CHANNEL_NOT_CACHED"));return this.channel.messages.edit(this,e)}crosspost(){if(!this.channel)return Promise.reject(new S("CHANNEL_NOT_CACHED"));return this.channel.messages.crosspost(this.id)}async pin(){if(!this.channel)throw new S("CHANNEL_NOT_CACHED");await this.channel.messages.pin(this.id);return this}async unpin(){if(!this.channel)throw new S("CHANNEL_NOT_CACHED");await this.channel.messages.unpin(this.id);return this}async react(e){if(!this.channel)throw new S("CHANNEL_NOT_CACHED");await this.channel.messages.react(this.id,e);return this.client.actions.MessageReactionAdd.handle({user:this.client.user,channel:this.channel,message:this,emoji:M.resolvePartialEmoji(e)},true).reaction}async delete(){if(!this.channel)throw new S("CHANNEL_NOT_CACHED");await this.channel.messages.delete(this.id);return this}reply(e){if(!this.channel)return Promise.reject(new S("CHANNEL_NOT_CACHED"));let t;if(e instanceof _){t=e}else{t=_.create(this,e,{reply:{messageReference:this,failIfNotExists:e?.failIfNotExists??this.client.options.failIfNotExists}})}return this.channel.send(t)}startThread(e={}){if(!this.channel)return Promise.reject(new S("CHANNEL_NOT_CACHED"));if(!["GUILD_TEXT","GUILD_NEWS"].includes(this.channel.type)){return Promise.reject(new S("MESSAGE_THREAD_PARENT"))}if(this.hasThread)return Promise.reject(new S("MESSAGE_EXISTING_THREAD"));return this.channel.threads.create({...e,startMessage:this})}fetch(e=true){if(!this.channel)return Promise.reject(new S("CHANNEL_NOT_CACHED"));return this.channel.messages.fetch(this.id,{force:e})}fetchWebhook(){if(!this.webhookId)return Promise.reject(new S("WEBHOOK_MESSAGE"));if(this.webhookId===this.applicationId)return Promise.reject(new S("WEBHOOK_APPLICATION"));return this.client.fetchWebhook(this.webhookId)}suppressEmbeds(e=true){const t=new R(this.flags.bitfield);if(e){t.add(R.FLAGS.SUPPRESS_EMBEDS)}else{t.remove(R.FLAGS.SUPPRESS_EMBEDS)}return this.edit({flags:t})}removeAttachments(){return this.edit({attachments:[]})}resolveComponent(e){return this.components.flatMap((e=>e.components)).find((t=>t.customId===e))??null}equals(e,t){if(!e)return false;const i=!e.author&&!e.attachments;if(i)return this.id===e.id&&this.embeds.length===e.embeds.length;let s=this.id===e.id&&this.author.id===e.author.id&&this.content===e.content&&this.tts===e.tts&&this.nonce===e.nonce&&this.embeds.length===e.embeds.length&&this.attachments.length===e.attachments.length;if(s&&t){s=this.mentions.everyone===e.mentions.everyone&&this.createdTimestamp===new Date(t.timestamp).getTime()&&this.editedTimestamp===new Date(t.edited_timestamp).getTime()}return s}inGuild(){return Boolean(this.guildId)}toString(){return this.content}toJSON(){return super.toJSON({channel:"channelId",author:"authorId",groupActivityApplication:"groupActivityApplicationId",guild:"guildId",cleanContent:true,member:false,reactions:false})}}t.Message=Message;t.deletedMessages=q},50024:(e,t,i)=>{"use strict";const s=i(93497);const{MessageComponentTypes:r}=i(98422);class MessageActionRow extends s{constructor(e={},t=null){super({type:"ACTION_ROW"});this.components=e.components?.map((e=>s.create(e,t)))??[]}addComponents(...e){this.components.push(...e.flat(Infinity).map((e=>s.create(e))));return this}setComponents(...e){this.spliceComponents(0,this.components.length,e);return this}spliceComponents(e,t,...i){this.components.splice(e,t,...i.flat(Infinity).map((e=>s.create(e))));return this}toJSON(){return{components:this.components.map((e=>e.toJSON())),type:r[this.type]}}}e.exports=MessageActionRow},24681:(e,t,i)=>{"use strict";const s=i(28270);class MessageAttachment{constructor(e,t=null,i){this.attachment=e;this.name=t;if(i)this._patch(i)}setDescription(e){this.description=e;return this}setFile(e,t=null){this.attachment=e;this.name=t;return this}setName(e){this.name=e;return this}setSpoiler(e=true){if(e===this.spoiler)return this;if(!e){while(this.spoiler){this.name=this.name.slice("SPOILER_".length)}return this}this.name=`SPOILER_${this.name}`;return this}_patch(e){this.id=e.id;if("size"in e){this.size=e.size}if("url"in e){this.url=e.url}if("proxy_url"in e){this.proxyURL=e.proxy_url}if("height"in e){this.height=e.height}else{this.height??=null}if("width"in e){this.width=e.width}else{this.width??=null}if("content_type"in e){this.contentType=e.content_type}else{this.contentType??=null}if("description"in e){this.description=e.description}else{this.description??=null}this.ephemeral=e.ephemeral??false}get spoiler(){return s.basename(this.url??this.name).startsWith("SPOILER_")}toJSON(){return s.flatten(this)}}e.exports=MessageAttachment},14609:(e,t,i)=>{"use strict";const s=i(93497);const{RangeError:r}=i(94436);const{MessageButtonStyles:o,MessageComponentTypes:l}=i(98422);const c=i(28270);class MessageButton extends s{constructor(e={}){super({type:"BUTTON"});this.setup(e)}setup(e){this.label=e.label??null;this.customId=e.custom_id??e.customId??null;this.style=e.style?MessageButton.resolveStyle(e.style):null;this.emoji=e.emoji?c.resolvePartialEmoji(e.emoji):null;this.url=e.url??null;this.disabled=e.disabled??false}setCustomId(e){this.customId=c.verifyString(e,r,"BUTTON_CUSTOM_ID");return this}setDisabled(e=true){this.disabled=e;return this}setEmoji(e){this.emoji=c.resolvePartialEmoji(e);return this}setLabel(e){this.label=c.verifyString(e,r,"BUTTON_LABEL");return this}setStyle(e){this.style=MessageButton.resolveStyle(e);return this}setURL(e){this.url=c.verifyString(e,r,"BUTTON_URL");return this}toJSON(){return{custom_id:this.customId,disabled:this.disabled,emoji:this.emoji,label:this.label,style:o[this.style],type:l[this.type],url:this.url}}static resolveStyle(e){return typeof e==="string"?e:o[e]}}e.exports=MessageButton},75121:(e,t,i)=>{"use strict";const s=i(33858);const{Events:r}=i(98422);class MessageCollector extends s{constructor(e,t={}){super(e.client,t);this.channel=e;this.received=0;const bulkDeleteListener=e=>{for(const t of e.values())this.handleDispose(t)};this._handleChannelDeletion=this._handleChannelDeletion.bind(this);this._handleThreadDeletion=this._handleThreadDeletion.bind(this);this._handleGuildDeletion=this._handleGuildDeletion.bind(this);this.client.incrementMaxListeners();this.client.on(r.MESSAGE_CREATE,this.handleCollect);this.client.on(r.MESSAGE_DELETE,this.handleDispose);this.client.on(r.MESSAGE_BULK_DELETE,bulkDeleteListener);this.client.on(r.CHANNEL_DELETE,this._handleChannelDeletion);this.client.on(r.THREAD_DELETE,this._handleThreadDeletion);this.client.on(r.GUILD_DELETE,this._handleGuildDeletion);this.once("end",(()=>{this.client.removeListener(r.MESSAGE_CREATE,this.handleCollect);this.client.removeListener(r.MESSAGE_DELETE,this.handleDispose);this.client.removeListener(r.MESSAGE_BULK_DELETE,bulkDeleteListener);this.client.removeListener(r.CHANNEL_DELETE,this._handleChannelDeletion);this.client.removeListener(r.THREAD_DELETE,this._handleThreadDeletion);this.client.removeListener(r.GUILD_DELETE,this._handleGuildDeletion);this.client.decrementMaxListeners()}))}collect(e){if(e.channelId!==this.channel.id)return null;this.received++;return e.id}dispose(e){return e.channelId===this.channel.id?e.id:null}get endReason(){if(this.options.max&&this.collected.size>=this.options.max)return"limit";if(this.options.maxProcessed&&this.received===this.options.maxProcessed)return"processedLimit";return null}_handleChannelDeletion(e){if(e.id===this.channel.id||e.id===this.channel.parentId){this.stop("channelDelete")}}_handleThreadDeletion(e){if(e.id===this.channel.id){this.stop("threadDelete")}}_handleGuildDeletion(e){if(e.id===this.channel.guild?.id){this.stop("guildDelete")}}}e.exports=MessageCollector},82908:(e,t,i)=>{"use strict";const s=i(63239);const r=i(53996);const o=i(84259);const{MessageComponentTypes:l}=i(98422);class MessageComponentInteraction extends s{constructor(e,t){super(e,t);this.message=this.channel?.messages._add(t.message)??t.message;this.customId=t.data.custom_id;this.componentType=MessageComponentInteraction.resolveType(t.data.component_type);this.deferred=false;this.ephemeral=null;this.replied=false;this.webhook=new r(this.client,this.applicationId,this.token)}get component(){return this.message.components.flatMap((e=>e.components)).find((e=>(e.customId??e.custom_id)===this.customId))}static resolveType(e){return typeof e==="string"?e:l[e]}deferReply(){}reply(){}fetchReply(){}editReply(){}deleteReply(){}followUp(){}deferUpdate(){}update(){}}o.applyToClass(MessageComponentInteraction);e.exports=MessageComponentInteraction},65107:(e,t,i)=>{"use strict";const s=i(53496);class MessageContextMenuInteraction extends s{get targetMessage(){return this.options.getMessage("message")}}e.exports=MessageContextMenuInteraction},6150:(e,t,i)=>{"use strict";const s=i(97742);const{RangeError:r}=i(94436);const o=i(28270);let l=false;let c=false;class MessageEmbed{constructor(e={},t=false){this.setup(e,t)}setup(e,t){this.type=e.type??"rich";this.title=e.title??null;this.description=e.description??null;this.url=e.url??null;this.color="color"in e?o.resolveColor(e.color):null;this.timestamp="timestamp"in e?new Date(e.timestamp).getTime():null;this.fields=[];if(e.fields){this.fields=t?e.fields.map(o.cloneObject):this.constructor.normalizeFields(e.fields)}this.thumbnail=e.thumbnail?{url:e.thumbnail.url,proxyURL:e.thumbnail.proxyURL??e.thumbnail.proxy_url,height:e.thumbnail.height,width:e.thumbnail.width}:null;this.image=e.image?{url:e.image.url,proxyURL:e.image.proxyURL??e.image.proxy_url,height:e.image.height,width:e.image.width}:null;this.video=e.video?{url:e.video.url,proxyURL:e.video.proxyURL??e.video.proxy_url,height:e.video.height,width:e.video.width}:null;this.author=e.author?{name:e.author.name,url:e.author.url,iconURL:e.author.iconURL??e.author.icon_url,proxyIconURL:e.author.proxyIconURL??e.author.proxy_icon_url}:null;this.provider=e.provider?{name:e.provider.name,url:e.provider.name}:null;this.footer=e.footer?{text:e.footer.text,iconURL:e.footer.iconURL??e.footer.icon_url,proxyIconURL:e.footer.proxyIconURL??e.footer.proxy_icon_url}:null}get createdAt(){return this.timestamp?new Date(this.timestamp):null}get hexColor(){return this.color?`#${this.color.toString(16).padStart(6,"0")}`:null}get length(){return(this.title?.length??0)+(this.description?.length??0)+(this.fields.length>=1?this.fields.reduce(((e,t)=>e+t.name.length+t.value.length),0):0)+(this.footer?.text.length??0)+(this.author?.name.length??0)}equals(e){return this.type===e.type&&this.author?.name===e.author?.name&&this.author?.url===e.author?.url&&this.author?.iconURL===(e.author?.iconURL??e.author?.icon_url)&&this.color===e.color&&this.title===e.title&&this.description===e.description&&this.url===e.url&&this.timestamp===e.timestamp&&this.fields.length===e.fields.length&&this.fields.every(((t,i)=>this._fieldEquals(t,e.fields[i])))&&this.footer?.text===e.footer?.text&&this.footer?.iconURL===(e.footer?.iconURL??e.footer?.icon_url)&&this.image?.url===e.image?.url&&this.thumbnail?.url===e.thumbnail?.url&&this.video?.url===e.video?.url&&this.provider?.name===e.provider?.name&&this.provider?.url===e.provider?.url}_fieldEquals(e,t){return e.name===t.name&&e.value===t.value&&e.inline===t.inline}addField(e,t,i){return this.addFields({name:e,value:t,inline:i})}addFields(...e){this.fields.push(...this.constructor.normalizeFields(e));return this}spliceFields(e,t,...i){this.fields.splice(e,t,...this.constructor.normalizeFields(...i));return this}setFields(...e){this.spliceFields(0,this.fields.length,e);return this}setAuthor(e,t,i){if(e===null){this.author={};return this}if(typeof e==="string"){if(!l){s.emitWarning("Passing strings for MessageEmbed#setAuthor is deprecated. Pass a sole object instead.","DeprecationWarning");l=true}e={name:e,url:i,iconURL:t}}const{name:c,url:u,iconURL:m}=e;this.author={name:o.verifyString(c,r,"EMBED_AUTHOR_NAME"),url:u,iconURL:m};return this}setColor(e){this.color=o.resolveColor(e);return this}setDescription(e){this.description=o.verifyString(e,r,"EMBED_DESCRIPTION");return this}setFooter(e,t){if(e===null){this.footer={};return this}if(typeof e==="string"){if(!c){s.emitWarning("Passing strings for MessageEmbed#setFooter is deprecated. Pass a sole object instead.","DeprecationWarning");c=true}e={text:e,iconURL:t}}const{text:i,iconURL:l}=e;this.footer={text:o.verifyString(i,r,"EMBED_FOOTER_TEXT"),iconURL:l};return this}setImage(e){this.image={url:e};return this}setThumbnail(e){this.thumbnail={url:e};return this}setTimestamp(e=Date.now()){if(e instanceof Date)e=e.getTime();this.timestamp=e;return this}setTitle(e){this.title=o.verifyString(e,r,"EMBED_TITLE");return this}setURL(e){this.url=e;return this}toJSON(){return{title:this.title,type:"rich",description:this.description,url:this.url,timestamp:this.timestamp&&new Date(this.timestamp),color:this.color,fields:this.fields,thumbnail:this.thumbnail,image:this.image,author:this.author&&{name:this.author.name,url:this.author.url,icon_url:this.author.iconURL},footer:this.footer&&{text:this.footer.text,icon_url:this.footer.iconURL}}}static normalizeField(e,t,i=false){return{name:o.verifyString(e,r,"EMBED_FIELD_NAME",false),value:o.verifyString(t,r,"EMBED_FIELD_VALUE",false),inline:i}}static normalizeFields(...e){return e.flat(2).map((e=>this.normalizeField(e.name,e.value,typeof e.inline==="boolean"?e.inline:false)))}}e.exports=MessageEmbed},74598:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const{ChannelTypes:r}=i(98422);const o=i(28270);class MessageMentions{constructor(e,t,i,o,l,c){Object.defineProperty(this,"client",{value:e.client});Object.defineProperty(this,"guild",{value:e.guild});Object.defineProperty(this,"_content",{value:e.content});this.everyone=Boolean(o);if(t){if(t instanceof s){this.users=new s(t)}else{this.users=new s;for(const i of t){if(i.member&&e.guild){e.guild.members._add(Object.assign(i.member,{user:i}))}const t=e.client.users._add(i);this.users.set(t.id,t)}}}else{this.users=new s}if(i instanceof s){this.roles=new s(i)}else if(i){this.roles=new s;const t=e.guild;if(t){for(const e of i){const i=t.roles.cache.get(e);if(i)this.roles.set(i.id,i)}}}else{this.roles=new s}this._members=null;this._channels=null;if(l){if(l instanceof s){this.crosspostedChannels=new s(l)}else{this.crosspostedChannels=new s;const e=Object.keys(r);for(const t of l){const i=e[t.type];this.crosspostedChannels.set(t.id,{channelId:t.id,guildId:t.guild_id,type:i??"UNKNOWN",name:t.name})}}}else{this.crosspostedChannels=new s}this.repliedUser=c?this.client.users._add(c):null}get members(){if(this._members)return this._members;if(!this.guild)return null;this._members=new s;this.users.forEach((e=>{const t=this.guild.members.resolve(e);if(t)this._members.set(t.user.id,t)}));return this._members}get channels(){if(this._channels)return this._channels;this._channels=new s;let e;while((e=this.constructor.CHANNELS_PATTERN.exec(this._content))!==null){const t=this.client.channels.cache.get(e[1]);if(t)this._channels.set(t.id,t)}return this._channels}has(e,{ignoreDirect:t=false,ignoreRoles:s=false,ignoreEveryone:r=false}={}){if(!r&&this.everyone)return true;const{GuildMember:o}=i(27081);if(!s&&e instanceof o){for(const t of this.roles.values())if(e.roles.cache.has(t.id))return true}if(!t){const t=this.guild?.roles.resolveId(e)??this.client.channels.resolveId(e)??this.client.users.resolveId(e);return typeof t==="string"&&(this.users.has(t)||this.channels.has(t)||this.roles.has(t))}return false}toJSON(){return o.flatten(this,{members:true,channels:true})}}MessageMentions.EVERYONE_PATTERN=/@(everyone|here)/g;MessageMentions.USERS_PATTERN=/<@!?(\d{17,19})>/g;MessageMentions.ROLES_PATTERN=/<@&(\d{17,19})>/g;MessageMentions.CHANNELS_PATTERN=/<#(\d{17,19})>/g;e.exports=MessageMentions},4405:(e,t,i)=>{"use strict";const{Buffer:s}=i(72254);const r=i(93497);const o=i(6150);const{RangeError:l}=i(94436);const c=i(73642);const u=i(62840);const m=i(28270);class MessagePayload{constructor(e,t){this.target=e;this.options=t;this.data=null;this.files=null}get isWebhook(){const e=i(95600);const t=i(12333);return this.target instanceof e||this.target instanceof t}get isUser(){const e=i(96283);const{GuildMember:t}=i(27081);return this.target instanceof e||this.target instanceof t}get isMessage(){const{Message:e}=i(4975);return this.target instanceof e}get isMessageManager(){const e=i(68207);return this.target instanceof e}get isInteraction(){const e=i(63239);const t=i(53996);return this.target instanceof e||this.target instanceof t}makeContent(){let e;if(this.options.content===null){e=""}else if(typeof this.options.content!=="undefined"){e=m.verifyString(this.options.content,l,"MESSAGE_CONTENT_TYPE",false)}return e}resolveData(){if(this.data)return this;const e=this.isInteraction;const t=this.isWebhook;const i=this.makeContent();const s=Boolean(this.options.tts);let c;if(typeof this.options.nonce!=="undefined"){c=this.options.nonce;if(typeof c==="number"?!Number.isInteger(c):typeof c!=="string"){throw new l("MESSAGE_NONCE_TYPE")}}const g=this.options.components?.map((e=>r.create(e).toJSON()));let v;let _;if(t){v=this.options.username??this.target.name;if(this.options.avatarURL)_=this.options.avatarURL}let T;if(this.isMessage||this.isMessageManager){T=this.options.flags!=null?new u(this.options.flags).bitfield:this.target.flags?.bitfield}else if(e&&this.options.ephemeral){T=u.FLAGS.EPHEMERAL}let x=typeof this.options.allowedMentions==="undefined"?this.target.client.options.allowedMentions:this.options.allowedMentions;if(x){x=m.cloneObject(x);x.replied_user=x.repliedUser;delete x.repliedUser}let S;if(typeof this.options.reply==="object"){const e=this.options.reply.messageReference;const t=this.isMessage?e.id??e:this.target.messages.resolveId(e);if(t){S={message_id:t,fail_if_not_exists:this.options.reply.failIfNotExists??this.target.client.options.failIfNotExists}}}const A=this.options.files?.map(((e,t)=>({id:t.toString(),description:e.description})));if(Array.isArray(this.options.attachments)){this.options.attachments.push(...A??[])}else{this.options.attachments=A}this.data={content:i,tts:s,nonce:c,embeds:this.options.embeds?.map((e=>new o(e).toJSON())),components:g,username:v,avatar_url:_,allowed_mentions:typeof i==="undefined"&&typeof S==="undefined"?undefined:x,flags:T,message_reference:S,attachments:this.options.attachments,sticker_ids:this.options.stickers?.map((e=>e.id??e))};return this}async resolveFiles(){if(this.files)return this;this.files=await Promise.all(this.options.files?.map((e=>this.constructor.resolveFile(e)))??[]);return this}static async resolveFile(e){let t;let i;const findName=e=>{if(typeof e==="string"){return m.basename(e)}if(e.path){return m.basename(e.path)}return"file.jpg"};const r=typeof e==="string"||e instanceof s||typeof e.pipe==="function";if(r){t=e;i=findName(t)}else{t=e.attachment;i=e.name??findName(t)}const o=await c.resolveFile(t);return{attachment:t,name:i,file:o}}static create(e,t,i={}){return new this(e,typeof t!=="object"||t===null?{content:t,...i}:{...t,...i})}}e.exports=MessagePayload},2190:(e,t,i)=>{"use strict";const s=i(78632);const r=i(84722);const o=i(95502);const l=i(28270);class MessageReaction{constructor(e,t,i){Object.defineProperty(this,"client",{value:e});this.message=i;this.me=t.me;this.users=new o(this,this.me?[e.user]:[]);this._emoji=new r(this,t.emoji);this._patch(t)}_patch(e){if("count"in e){this.count??=e.count}}async remove(){await this.client.api.channels(this.message.channelId).messages(this.message.id).reactions(this._emoji.identifier).delete();return this}get emoji(){if(this._emoji instanceof s)return this._emoji;if(this._emoji.id){const e=this.message.client.emojis.cache;if(e.has(this._emoji.id)){const t=e.get(this._emoji.id);this._emoji=t;return t}}return this._emoji}get partial(){return this.count===null}async fetch(){const e=await this.message.fetch();const t=e.reactions.cache.get(this.emoji.id??this.emoji.name);this._patch(t??{count:0});return this}toJSON(){return l.flatten(this,{emoji:"emojiId",message:"messageId"})}_add(e){if(this.partial)return;this.users.cache.set(e.id,e);if(!this.me||e.id!==this.message.client.user.id||this.count===0)this.count++;this.me??=e.id===this.message.client.user.id}_remove(e){if(this.partial)return;this.users.cache.delete(e.id);if(!this.me||e.id!==this.message.client.user.id)this.count--;if(e.id===this.message.client.user.id)this.me=false;if(this.count<=0&&this.users.cache.size===0){this.message.reactions.cache.delete(this.emoji.id??this.emoji.name)}}}e.exports=MessageReaction},57456:(e,t,i)=>{"use strict";const s=i(93497);const{MessageComponentTypes:r}=i(98422);const o=i(28270);class MessageSelectMenu extends s{constructor(e={}){super({type:"SELECT_MENU"});this.setup(e)}setup(e){this.customId=e.custom_id??e.customId??null;this.placeholder=e.placeholder??null;this.minValues=e.min_values??e.minValues??null;this.maxValues=e.max_values??e.maxValues??null;this.options=this.constructor.normalizeOptions(e.options??[]);this.disabled=e.disabled??false}setCustomId(e){this.customId=o.verifyString(e,RangeError,"SELECT_MENU_CUSTOM_ID");return this}setDisabled(e=true){this.disabled=e;return this}setMaxValues(e){this.maxValues=e;return this}setMinValues(e){this.minValues=e;return this}setPlaceholder(e){this.placeholder=o.verifyString(e,RangeError,"SELECT_MENU_PLACEHOLDER");return this}addOptions(...e){this.options.push(...this.constructor.normalizeOptions(e));return this}setOptions(...e){this.spliceOptions(0,this.options.length,e);return this}spliceOptions(e,t,...i){this.options.splice(e,t,...this.constructor.normalizeOptions(...i));return this}toJSON(){return{custom_id:this.customId,disabled:this.disabled,placeholder:this.placeholder,min_values:this.minValues,max_values:this.maxValues??(this.minValues?this.options.length:undefined),options:this.options,type:typeof this.type==="string"?r[this.type]:this.type}}static normalizeOption(e){let{label:t,value:i,description:s,emoji:r}=e;t=o.verifyString(t,RangeError,"SELECT_OPTION_LABEL");i=o.verifyString(i,RangeError,"SELECT_OPTION_VALUE");r=r?o.resolvePartialEmoji(r):null;s=s?o.verifyString(s,RangeError,"SELECT_OPTION_DESCRIPTION",true):null;return{label:t,value:i,description:s,emoji:r,default:e.default??false}}static normalizeOptions(...e){return e.flat(Infinity).map((e=>this.normalizeOption(e)))}}e.exports=MessageSelectMenu},4917:(e,t,i)=>{"use strict";const s=i(9493);const{Error:r}=i(94436);class NewsChannel extends s{async addFollower(e,t){const i=this.guild.channels.resolveId(e);if(!i)throw new r("GUILD_CHANNEL_RESOLVE");await this.client.api.channels(this.id).followers.post({data:{webhook_channel_id:i},reason:t});return this}}e.exports=NewsChannel},23319:(e,t,i)=>{"use strict";const s=i(38307);const r=i(97234);class OAuth2Guild extends s{constructor(e,t){super(e,t);this.owner=t.owner;this.permissions=new r(BigInt(t.permissions)).freeze()}}e.exports=OAuth2Guild},84641:(e,t,i)=>{"use strict";const{Channel:s}=i(26481);const{Error:r}=i(94436);class PartialGroupDMChannel extends s{constructor(e,t){super(e,t);this.name=t.name;this.icon=t.icon;this.recipients=t.recipients}iconURL({format:e,size:t}={}){return this.icon&&this.client.rest.cdn.GDMIcon(this.id,this.icon,e,t)}delete(){return Promise.reject(new r("DELETE_GROUP_DM_CHANNEL"))}fetch(){return Promise.reject(new r("FETCH_GROUP_DM_CHANNEL"))}}e.exports=PartialGroupDMChannel},13727:(e,t,i)=>{"use strict";const s=i(99307);const{Role:r}=i(20339);const{TypeError:o}=i(94436);const{OverwriteTypes:l}=i(98422);const c=i(97234);class PermissionOverwrites extends s{constructor(e,t,i){super(e);Object.defineProperty(this,"channel",{value:i});if(t)this._patch(t)}_patch(e){this.id=e.id;if("type"in e){this.type=typeof e.type==="number"?l[e.type]:e.type}if("deny"in e){this.deny=new c(BigInt(e.deny)).freeze()}if("allow"in e){this.allow=new c(BigInt(e.allow)).freeze()}}async edit(e,t){await this.channel.permissionOverwrites.upsert(this.id,e,{type:l[this.type],reason:t},this);return this}async delete(e){await this.channel.permissionOverwrites.delete(this.id,e);return this}toJSON(){return{id:this.id,type:l[this.type],allow:this.allow,deny:this.deny}}static resolveOverwriteOptions(e,{allow:t,deny:i}={}){t=new c(t);i=new c(i);for(const[s,r]of Object.entries(e)){if(r===true){t.add(s);i.remove(s)}else if(r===false){t.remove(s);i.add(s)}else if(r===null){t.remove(s);i.remove(s)}}return{allow:t,deny:i}}static resolve(e,t){if(e instanceof this)return e.toJSON();if(typeof e.id==="string"&&e.type in l){return{id:e.id,type:l[e.type],allow:c.resolve(e.allow??c.defaultBit).toString(),deny:c.resolve(e.deny??c.defaultBit).toString()}}const i=t.roles.resolve(e.id)??t.client.users.resolve(e.id);if(!i)throw new o("INVALID_TYPE","parameter","User nor a Role");const s=i instanceof r?l.role:l.member;return{id:i.id,type:s,allow:c.resolve(e.allow??c.defaultBit).toString(),deny:c.resolve(e.deny??c.defaultBit).toString()}}}e.exports=PermissionOverwrites},98916:(e,t,i)=>{"use strict";const s=i(99307);const{Emoji:r}=i(63855);const o=i(6261);const{ActivityTypes:l}=i(98422);const c=i(28270);class Presence extends s{constructor(e,t={}){super(e);this.userId=t.user.id;this.guild=t.guild??null;this._patch(t)}get user(){return this.client.users.resolve(this.userId)}get member(){return this.guild.members.resolve(this.userId)}_patch(e){if("status"in e){this.status=e.status}else{this.status??="offline"}if("activities"in e){this.activities=e.activities.map((e=>new Activity(this,e)))}else{this.activities??=[]}if("client_status"in e){this.clientStatus=e.client_status}else{this.clientStatus??=null}return this}_clone(){const e=Object.assign(Object.create(this),this);e.activities=this.activities.map((e=>e._clone()));return e}equals(e){return this===e||e&&this.status===e.status&&this.activities.length===e.activities.length&&this.activities.every(((t,i)=>t.equals(e.activities[i])))&&this.clientStatus?.web===e.clientStatus?.web&&this.clientStatus?.mobile===e.clientStatus?.mobile&&this.clientStatus?.desktop===e.clientStatus?.desktop}toJSON(){return c.flatten(this)}}class Activity{constructor(e,t){Object.defineProperty(this,"presence",{value:e});this.id=t.id;this.name=t.name;this.type=typeof t.type==="number"?l[t.type]:t.type;this.url=t.url??null;this.details=t.details??null;this.state=t.state??null;this.applicationId=t.application_id??null;this.timestamps=t.timestamps?{start:t.timestamps.start?new Date(Number(t.timestamps.start)):null,end:t.timestamps.end?new Date(Number(t.timestamps.end)):null}:null;this.syncId=t.sync_id??null;this.platform=t.platform??null;this.party=t.party??null;this.assets=t.assets?new RichPresenceAssets(this,t.assets):null;this.flags=new o(t.flags).freeze();this.emoji=t.emoji?new r(e.client,t.emoji):null;this.sessionId=t.session_id??null;this.buttons=t.buttons??[];this.createdTimestamp=new Date(t.created_at).getTime()}equals(e){return this===e||e&&this.name===e.name&&this.type===e.type&&this.url===e.url&&this.state===e.state&&this.details===e.details}get createdAt(){return new Date(this.createdTimestamp)}toString(){return this.name}_clone(){return Object.assign(Object.create(this),this)}}class RichPresenceAssets{constructor(e,t){Object.defineProperty(this,"activity",{value:e});this.largeText=t.large_text??null;this.smallText=t.small_text??null;this.largeImage=t.large_image??null;this.smallImage=t.small_image??null}smallImageURL({format:e,size:t}={}){return this.smallImage&&this.activity.presence.client.rest.cdn.AppAsset(this.activity.applicationId,this.smallImage,{format:e,size:t})}largeImageURL({format:e,size:t}={}){if(!this.largeImage)return null;if(/^spotify:/.test(this.largeImage)){return`https://i.scdn.co/image/${this.largeImage.slice(8)}`}else if(/^twitch:/.test(this.largeImage)){return`https://static-cdn.jtvnw.net/previews-ttv/live_user_${this.largeImage.slice(7)}.png`}return this.activity.presence.client.rest.cdn.AppAsset(this.activity.applicationId,this.largeImage,{format:e,size:t})}}t.Presence=Presence;t.Activity=Activity;t.RichPresenceAssets=RichPresenceAssets},4499:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(33858);const{Events:o}=i(98422);class ReactionCollector extends r{constructor(e,t={}){super(e.client,t);this.message=e;this.users=new s;this.total=0;this.empty=this.empty.bind(this);this._handleChannelDeletion=this._handleChannelDeletion.bind(this);this._handleThreadDeletion=this._handleThreadDeletion.bind(this);this._handleGuildDeletion=this._handleGuildDeletion.bind(this);this._handleMessageDeletion=this._handleMessageDeletion.bind(this);const bulkDeleteListener=e=>{if(e.has(this.message.id))this.stop("messageDelete")};this.client.incrementMaxListeners();this.client.on(o.MESSAGE_REACTION_ADD,this.handleCollect);this.client.on(o.MESSAGE_REACTION_REMOVE,this.handleDispose);this.client.on(o.MESSAGE_REACTION_REMOVE_ALL,this.empty);this.client.on(o.MESSAGE_DELETE,this._handleMessageDeletion);this.client.on(o.MESSAGE_BULK_DELETE,bulkDeleteListener);this.client.on(o.CHANNEL_DELETE,this._handleChannelDeletion);this.client.on(o.THREAD_DELETE,this._handleThreadDeletion);this.client.on(o.GUILD_DELETE,this._handleGuildDeletion);this.once("end",(()=>{this.client.removeListener(o.MESSAGE_REACTION_ADD,this.handleCollect);this.client.removeListener(o.MESSAGE_REACTION_REMOVE,this.handleDispose);this.client.removeListener(o.MESSAGE_REACTION_REMOVE_ALL,this.empty);this.client.removeListener(o.MESSAGE_DELETE,this._handleMessageDeletion);this.client.removeListener(o.MESSAGE_BULK_DELETE,bulkDeleteListener);this.client.removeListener(o.CHANNEL_DELETE,this._handleChannelDeletion);this.client.removeListener(o.THREAD_DELETE,this._handleThreadDeletion);this.client.removeListener(o.GUILD_DELETE,this._handleGuildDeletion);this.client.decrementMaxListeners()}));this.on("collect",((e,t)=>{if(e.count===1){this.emit("create",e,t)}this.total++;this.users.set(t.id,t)}));this.on("remove",((e,t)=>{this.total--;if(!this.collected.some((e=>e.users.cache.has(t.id))))this.users.delete(t.id)}))}collect(e){if(e.message.id!==this.message.id)return null;return ReactionCollector.key(e)}dispose(e,t){if(e.message.id!==this.message.id)return null;if(this.collected.has(ReactionCollector.key(e))&&this.users.has(t.id)){this.emit("remove",e,t)}return e.count?null:ReactionCollector.key(e)}empty(){this.total=0;this.collected.clear();this.users.clear();this.checkEnd()}get endReason(){if(this.options.max&&this.total>=this.options.max)return"limit";if(this.options.maxEmojis&&this.collected.size>=this.options.maxEmojis)return"emojiLimit";if(this.options.maxUsers&&this.users.size>=this.options.maxUsers)return"userLimit";return null}_handleMessageDeletion(e){if(e.id===this.message.id){this.stop("messageDelete")}}_handleChannelDeletion(e){if(e.id===this.message.channelId||e.threads?.cache.has(this.message.channelId)){this.stop("channelDelete")}}_handleThreadDeletion(e){if(e.id===this.message.channelId){this.stop("threadDelete")}}_handleGuildDeletion(e){if(e.id===this.message.guild?.id){this.stop("guildDelete")}}static key(e){return e.emoji.id??e.emoji.name}}e.exports=ReactionCollector},84722:(e,t,i)=>{"use strict";const{Emoji:s}=i(63855);const r=i(28270);class ReactionEmoji extends s{constructor(e,t){super(e.message.client,t);this.reaction=e}toJSON(){return r.flatten(this,{identifier:true})}valueOf(){return this.id}}e.exports=ReactionEmoji},20339:(e,t,i)=>{"use strict";const s=i(97742);const r=i(99307);const{Error:o}=i(94436);const l=i(97234);const c=i(40421);const u=i(28270);let m=false;const g=new WeakSet;let v=false;class Role extends r{constructor(e,t,i){super(e);this.guild=i;this.icon=null;this.unicodeEmoji=null;if(t)this._patch(t)}_patch(e){this.id=e.id;if("name"in e){this.name=e.name}if("color"in e){this.color=e.color}if("hoist"in e){this.hoist=e.hoist}if("position"in e){this.rawPosition=e.position}if("permissions"in e){this.permissions=new l(BigInt(e.permissions)).freeze()}if("managed"in e){this.managed=e.managed}if("mentionable"in e){this.mentionable=e.mentionable}if("icon"in e)this.icon=e.icon;if("unicode_emoji"in e)this.unicodeEmoji=e.unicode_emoji;this.tags=e.tags?{}:null;if(e.tags){if("bot_id"in e.tags){this.tags.botId=e.tags.bot_id}if("integration_id"in e.tags){this.tags.integrationId=e.tags.integration_id}if("premium_subscriber"in e.tags){this.tags.premiumSubscriberRole=true}}}get createdTimestamp(){return c.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}get deleted(){if(!v){v=true;s.emitWarning("Role#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}return g.has(this)}set deleted(e){if(!v){v=true;s.emitWarning("Role#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}if(e)g.add(this);else g.delete(this)}get hexColor(){return`#${this.color.toString(16).padStart(6,"0")}`}get members(){return this.guild.members.cache.filter((e=>e.roles.cache.has(this.id)))}get editable(){if(this.managed)return false;const e=this.guild.members.resolve(this.client.user);if(!e.permissions.has(l.FLAGS.MANAGE_ROLES))return false;return e.roles.highest.comparePositionTo(this)>0}get position(){const e=this.guild._sortedRoles();return[...e.values()].indexOf(e.get(this.id))}comparePositionTo(e){return this.guild.roles.comparePositions(this,e)}edit(e,t){return this.guild.roles.edit(this,e,t)}permissionsIn(e,t=true){e=this.guild.channels.resolve(e);if(!e)throw new o("GUILD_CHANNEL_RESOLVE");return e.rolePermissions(this,t)}setName(e,t){return this.edit({name:e},t)}setColor(e,t){return this.edit({color:e},t)}setHoist(e=true,t){return this.edit({hoist:e},t)}setPermissions(e,t){return this.edit({permissions:e},t)}setMentionable(e=true,t){return this.edit({mentionable:e},t)}setIcon(e,t){return this.edit({icon:e},t)}setUnicodeEmoji(e,t){return this.edit({unicodeEmoji:e},t)}async setPosition(e,{relative:t,reason:i}={}){const s=await u.setPosition(this,e,t,this.guild._sortedRoles(),this.client.api.guilds(this.guild.id).roles,i);this.client.actions.GuildRolesPositionUpdate.handle({guild_id:this.guild.id,roles:s});return this}async delete(e){await this.guild.roles.delete(this.id,e);return this}iconURL({format:e,size:t}={}){if(!this.icon)return null;return this.client.rest.cdn.RoleIcon(this.id,this.icon,e,t)}equals(e){return e&&this.id===e.id&&this.name===e.name&&this.color===e.color&&this.hoist===e.hoist&&this.position===e.position&&this.permissions.bitfield===e.permissions.bitfield&&this.managed===e.managed&&this.icon===e.icon&&this.unicodeEmoji===e.unicodeEmoji}toString(){if(this.id===this.guild.id)return"@everyone";return`<@&${this.id}>`}toJSON(){return{...super.toJSON({createdTimestamp:true}),permissions:this.permissions.toJSON()}}static comparePositions(e,t){if(!m){s.emitWarning("The Role.comparePositions method is deprecated. Use RoleManager#comparePositions instead.","DeprecationWarning");m=true}return e.guild.roles.comparePositions(e,t)}}t.Role=Role;t.deletedRoles=g},55294:(e,t,i)=>{"use strict";const s=i(82908);class SelectMenuInteraction extends s{constructor(e,t){super(e,t);this.values=t.data.values??[]}}e.exports=SelectMenuInteraction},37920:(e,t,i)=>{"use strict";const s=i(32728);class StageChannel extends s{_patch(e){super._patch(e);if("topic"in e){this.topic=e.topic}}get stageInstance(){return this.guild.stageInstances.cache.find((e=>e.channelId===this.id))??null}createStageInstance(e){return this.guild.stageInstances.create(this.id,e)}setTopic(e,t){return this.edit({topic:e},t)}}e.exports=StageChannel},9162:(e,t,i)=>{"use strict";const s=i(97742);const r=i(99307);const{PrivacyLevels:o}=i(98422);const l=i(40421);const c=new WeakSet;let u=false;class StageInstance extends r{constructor(e,t){super(e);this.id=t.id;this._patch(t)}_patch(e){if("guild_id"in e){this.guildId=e.guild_id}if("channel_id"in e){this.channelId=e.channel_id}if("topic"in e){this.topic=e.topic}if("privacy_level"in e){this.privacyLevel=o[e.privacy_level]}if("discoverable_disabled"in e){this.discoverableDisabled=e.discoverable_disabled}else{this.discoverableDisabled??=null}}get channel(){return this.client.channels.resolve(this.channelId)}get deleted(){if(!u){u=true;s.emitWarning("StageInstance#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}return c.has(this)}set deleted(e){if(!u){u=true;s.emitWarning("StageInstance#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}if(e)c.add(this);else c.delete(this)}get guild(){return this.client.guilds.resolve(this.guildId)}edit(e){return this.guild.stageInstances.edit(this.channelId,e)}async delete(){await this.guild.stageInstances.delete(this.channelId);const e=this._clone();c.add(e);return e}setTopic(e){return this.guild.stageInstances.edit(this.channelId,{topic:e})}get createdTimestamp(){return l.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}}t.StageInstance=StageInstance;t.deletedStageInstances=c},27149:(e,t,i)=>{"use strict";const s=i(97742);const r=i(99307);const{StickerFormatTypes:o,StickerTypes:l}=i(98422);const c=i(40421);const u=new WeakSet;let m=false;class Sticker extends r{constructor(e,t){super(e);this._patch(t)}_patch(e){this.id=e.id;if("description"in e){this.description=e.description}else{this.description??=null}if("type"in e){this.type=l[e.type]}else{this.type??=null}if("format_type"in e){this.format=o[e.format_type]}if("name"in e){this.name=e.name}if("pack_id"in e){this.packId=e.pack_id}else{this.packId??=null}if("tags"in e){this.tags=e.tags.split(", ")}else{this.tags??=null}if("available"in e){this.available=e.available}else{this.available??=null}if("guild_id"in e){this.guildId=e.guild_id}else{this.guildId??=null}if("user"in e){this.user=this.client.users._add(e.user)}else{this.user??=null}if("sort_value"in e){this.sortValue=e.sort_value}else{this.sortValue??=null}}get createdTimestamp(){return c.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}get deleted(){if(!m){m=true;s.emitWarning("Sticker#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}return u.has(this)}set deleted(e){if(!m){m=true;s.emitWarning("Sticker#deleted is deprecated, see https://github.com/discordjs/discord.js/issues/7091.","DeprecationWarning")}if(e)u.add(this);else u.delete(this)}get partial(){return!this.type}get guild(){return this.client.guilds.resolve(this.guildId)}get url(){return this.client.rest.cdn.Sticker(this.id,this.format)}async fetch(){const e=await this.client.api.stickers(this.id).get();this._patch(e);return this}async fetchPack(){return(this.packId&&(await this.client.fetchPremiumStickerPacks()).get(this.packId))??null}async fetchUser(){if(this.partial)await this.fetch();if(!this.guildId)throw new Error("NOT_GUILD_STICKER");const e=await this.client.api.guilds(this.guildId).stickers(this.id).get();this._patch(e);return this.user}edit(e,t){return this.guild.stickers.edit(this,e,t)}async delete(e){await this.guild.stickers.delete(this,e);return this}equals(e){if(e instanceof Sticker){return e.id===this.id&&e.description===this.description&&e.type===this.type&&e.format===this.format&&e.name===this.name&&e.packId===this.packId&&e.tags.length===this.tags.length&&e.tags.every((e=>this.tags.includes(e)))&&e.available===this.available&&e.guildId===this.guildId&&e.sortValue===this.sortValue}else{return e.id===this.id&&e.description===this.description&&e.name===this.name&&e.tags===this.tags.join(", ")}}}t.Sticker=Sticker;t.deletedStickers=u},96958:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(99307);const{Sticker:o}=i(27149);const l=i(40421);class StickerPack extends r{constructor(e,t){super(e);this.id=t.id;this.stickers=new s(t.stickers.map((t=>[t.id,new o(e,t)])));this.name=t.name;this.skuId=t.sku_id;this.coverStickerId=t.cover_sticker_id??null;this.description=t.description;this.bannerId=t.banner_asset_id??null}get createdTimestamp(){return l.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}get coverSticker(){return this.coverStickerId&&this.stickers.get(this.coverStickerId)}bannerURL({format:e,size:t}={}){return this.bannerId&&this.client.rest.cdn.StickerPackBanner(this.bannerId,e,t)}}e.exports=StickerPack},86977:(e,t,i)=>{"use strict";const s=i(58354);class StoreChannel extends s{constructor(e,t,i){super(e,t,i);this.nsfw=Boolean(t.nsfw)}_patch(e){super._patch(e);if("nsfw"in e){this.nsfw=Boolean(e.nsfw)}}createInvite(e){return this.guild.invites.create(this.id,e)}fetchInvites(e=true){return this.guild.invites.fetch({channelId:this.id,cache:e})}}e.exports=StoreChannel},90339:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(99307);const o=i(27775);const l=i(40421);class Team extends r{constructor(e,t){super(e);this._patch(t)}_patch(e){this.id=e.id;if("name"in e){this.name=e.name}if("icon"in e){this.icon=e.icon}else{this.icon??=null}if("owner_user_id"in e){this.ownerId=e.owner_user_id}else{this.ownerId??=null}this.members=new s;for(const t of e.members){const e=new o(this,t);this.members.set(e.id,e)}}get owner(){return this.members.get(this.ownerId)??null}get createdTimestamp(){return l.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}iconURL({format:e,size:t}={}){if(!this.icon)return null;return this.client.rest.cdn.TeamIcon(this.id,this.icon,{format:e,size:t})}toString(){return this.name}toJSON(){return super.toJSON({createdTimestamp:true})}}e.exports=Team},27775:(e,t,i)=>{"use strict";const s=i(99307);const{MembershipStates:r}=i(98422);class TeamMember extends s{constructor(e,t){super(e.client);this.team=e;this._patch(t)}_patch(e){if("permissions"in e){this.permissions=e.permissions}if("membership_state"in e){this.membershipState=r[e.membership_state]}if("user"in e){this.user=this.client.users._add(e.user)}}get id(){return this.user.id}toString(){return this.user.toString()}}e.exports=TeamMember},27005:(e,t,i)=>{"use strict";const s=i(9493);class TextChannel extends s{_patch(e){super._patch(e);if("rate_limit_per_user"in e){this.rateLimitPerUser=e.rate_limit_per_user}}setRateLimitPerUser(e,t){return this.edit({rateLimitPerUser:e},t)}}e.exports=TextChannel},49595:(e,t,i)=>{"use strict";const{Channel:s}=i(26481);const r=i(30367);const{RangeError:o}=i(94436);const l=i(68207);const c=i(57283);const u=i(97234);class ThreadChannel extends s{constructor(e,t,i,s=false){super(e?.client??i,t,false);this.guild=e;this.guildId=e?.id??t.guild_id;this.messages=new l(this);this.members=new c(this);if(t)this._patch(t,s)}_patch(e,t=false){super._patch(e);if("name"in e){this.name=e.name}if("guild_id"in e){this.guildId=e.guild_id}if("parent_id"in e){this.parentId=e.parent_id}else{this.parentId??=null}if("thread_metadata"in e){this.locked=e.thread_metadata.locked??false;this.invitable=this.type==="GUILD_PRIVATE_THREAD"?e.thread_metadata.invitable??false:null;this.archived=e.thread_metadata.archived;this.autoArchiveDuration=e.thread_metadata.auto_archive_duration;this.archiveTimestamp=new Date(e.thread_metadata.archive_timestamp).getTime()}else{this.locked??=null;this.archived??=null;this.autoArchiveDuration??=null;this.archiveTimestamp??=null;this.invitable??=null}if("owner_id"in e){this.ownerId=e.owner_id}else{this.ownerId??=null}if("last_message_id"in e){this.lastMessageId=e.last_message_id}else{this.lastMessageId??=null}if("last_pin_timestamp"in e){this.lastPinTimestamp=e.last_pin_timestamp?new Date(e.last_pin_timestamp).getTime():null}else{this.lastPinTimestamp??=null}if("rate_limit_per_user"in e||!t){this.rateLimitPerUser=e.rate_limit_per_user??0}else{this.rateLimitPerUser??=null}if("message_count"in e){this.messageCount=e.message_count}else{this.messageCount??=null}if("member_count"in e){this.memberCount=e.member_count}else{this.memberCount??=null}if(e.member&&this.client.user)this.members._add({user_id:this.client.user.id,...e.member});if(e.messages)for(const t of e.messages)this.messages._add(t)}get guildMembers(){return this.members.cache.mapValues((e=>e.guildMember))}get archivedAt(){if(!this.archiveTimestamp)return null;return new Date(this.archiveTimestamp)}get parent(){return this.guild.channels.resolve(this.parentId)}async join(){await this.members.add("@me");return this}async leave(){await this.members.remove("@me");return this}permissionsFor(e,t){return this.parent?.permissionsFor(e,t)??null}async fetchOwner({cache:e=true,force:t=false}={}){if(!t){const e=this.members.cache.get(this.ownerId);if(e)return e}const i=await this.members.fetch(e);return i.get(this.ownerId)??null}fetchStarterMessage(e){return this.parent.messages.fetch(this.id,e)}async edit(e,t){let i=e.autoArchiveDuration;if(e.autoArchiveDuration==="MAX"){i=1440;if(this.guild.features.includes("SEVEN_DAY_THREAD_ARCHIVE")){i=10080}else if(this.guild.features.includes("THREE_DAY_THREAD_ARCHIVE")){i=4320}}const s=await this.client.api.channels(this.id).patch({data:{name:(e.name??this.name).trim(),archived:e.archived,auto_archive_duration:i,rate_limit_per_user:e.rateLimitPerUser,locked:e.locked,invitable:this.type==="GUILD_PRIVATE_THREAD"?e.invitable:undefined},reason:t});return this.client.actions.ChannelUpdate.handle(s).updated}setArchived(e=true,t){return this.edit({archived:e},t)}setAutoArchiveDuration(e,t){return this.edit({autoArchiveDuration:e},t)}setInvitable(e=true,t){if(this.type!=="GUILD_PRIVATE_THREAD")return Promise.reject(new o("THREAD_INVITABLE_TYPE",this.type));return this.edit({invitable:e},t)}setLocked(e=true,t){return this.edit({locked:e},t)}setName(e,t){return this.edit({name:e},t)}setRateLimitPerUser(e,t){return this.edit({rateLimitPerUser:e},t)}get joined(){return this.members.cache.has(this.client.user?.id)}get editable(){return this.ownerId===this.client.user.id&&(this.type!=="GUILD_PRIVATE_THREAD"||this.joined)||this.manageable}get joinable(){return!this.archived&&!this.joined&&this.permissionsFor(this.client.user)?.has(this.type==="GUILD_PRIVATE_THREAD"?u.FLAGS.MANAGE_THREADS:u.FLAGS.VIEW_CHANNEL,false)}get manageable(){const e=this.permissionsFor(this.client.user);if(!e)return false;if(e.has(u.FLAGS.ADMINISTRATOR,false))return true;return this.guild.me.communicationDisabledUntilTimestamp<Date.now()&&e.has(u.FLAGS.MANAGE_THREADS,false)}get viewable(){if(this.client.user.id===this.guild.ownerId)return true;const e=this.permissionsFor(this.client.user);if(!e)return false;return e.has(u.FLAGS.VIEW_CHANNEL,false)}get sendable(){const e=this.permissionsFor(this.client.user);if(!e)return false;if(e.has(u.FLAGS.ADMINISTRATOR,false))return true;return!(this.archived&&this.locked&&!this.manageable)&&(this.type!=="GUILD_PRIVATE_THREAD"||this.joined||this.manageable)&&e.has(u.FLAGS.SEND_MESSAGES_IN_THREADS,false)&&this.guild.me.communicationDisabledUntilTimestamp<Date.now()}get unarchivable(){return this.archived&&(this.locked?this.manageable:this.sendable)}async delete(e){await this.client.api.channels(this.id).delete({reason:e});return this}get lastMessage(){}get lastPinAt(){}send(){}sendTyping(){}createMessageCollector(){}awaitMessages(){}createMessageComponentCollector(){}awaitMessageComponent(){}bulkDelete(){}}r.applyToClass(ThreadChannel,true);e.exports=ThreadChannel},89044:(e,t,i)=>{"use strict";const s=i(99307);const r=i(1447);class ThreadMember extends s{constructor(e,t){super(e.client);this.thread=e;this.joinedTimestamp=null;this.id=t.user_id;this._patch(t)}_patch(e){if("join_timestamp"in e)this.joinedTimestamp=new Date(e.join_timestamp).getTime();if("flags"in e){this.flags=new r(e.flags).freeze()}}get guildMember(){return this.thread.guild.members.resolve(this.id)}get joinedAt(){return this.joinedTimestamp?new Date(this.joinedTimestamp):null}get user(){return this.client.users.resolve(this.id)}get manageable(){return!this.thread.archived&&this.thread.editable}async remove(e){await this.thread.members.remove(this.id,e);return this}}e.exports=ThreadMember},93985:(e,t,i)=>{"use strict";const s=i(99307);class Typing extends s{constructor(e,t,i){super(e.client);this.channel=e;this.user=t;this._patch(i)}_patch(e){if("timestamp"in e){this.startedTimestamp=e.timestamp*1e3}}inGuild(){return this.guild!==null}get startedAt(){return new Date(this.startedTimestamp)}get guild(){return this.channel.guild??null}get member(){return this.guild?.members.resolve(this.user)??null}}e.exports=Typing},96283:(e,t,i)=>{"use strict";const s=i(99307);const r=i(30367);const{Error:o}=i(94436);const l=i(40421);const c=i(90690);class User extends s{constructor(e,t){super(e);this.id=t.id;this.bot=null;this.system=null;this.flags=null;this._patch(t)}_patch(e){if("username"in e){this.username=e.username}else{this.username??=null}if("bot"in e){this.bot=Boolean(e.bot)}else if(!this.partial&&typeof this.bot!=="boolean"){this.bot=false}if("discriminator"in e){this.discriminator=e.discriminator}else{this.discriminator??=null}if("avatar"in e){this.avatar=e.avatar}else{this.avatar??=null}if("banner"in e){this.banner=e.banner}else if(this.banner!==null){this.banner??=undefined}if("accent_color"in e){this.accentColor=e.accent_color}else if(this.accentColor!==null){this.accentColor??=undefined}if("system"in e){this.system=Boolean(e.system)}else if(!this.partial&&typeof this.system!=="boolean"){this.system=false}if("public_flags"in e){this.flags=new c(e.public_flags)}}get partial(){return typeof this.username!=="string"}get createdTimestamp(){return l.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}avatarURL({format:e,size:t,dynamic:i}={}){if(!this.avatar)return null;return this.client.rest.cdn.Avatar(this.id,this.avatar,e,t,i)}get defaultAvatarURL(){return this.client.rest.cdn.DefaultAvatar(this.discriminator%5)}displayAvatarURL(e){return this.avatarURL(e)??this.defaultAvatarURL}get hexAccentColor(){if(typeof this.accentColor!=="number")return this.accentColor;return`#${this.accentColor.toString(16).padStart(6,"0")}`}bannerURL({format:e,size:t,dynamic:i}={}){if(typeof this.banner==="undefined")throw new o("USER_BANNER_NOT_FETCHED");if(!this.banner)return null;return this.client.rest.cdn.Banner(this.id,this.banner,e,t,i)}get tag(){return typeof this.username==="string"?`${this.username}#${this.discriminator}`:null}get dmChannel(){return this.client.users.dmChannel(this.id)}createDM(e=false){return this.client.users.createDM(this.id,e)}deleteDM(){return this.client.users.deleteDM(this.id)}equals(e){return e&&this.id===e.id&&this.username===e.username&&this.discriminator===e.discriminator&&this.avatar===e.avatar&&this.flags?.bitfield===e.flags?.bitfield&&this.banner===e.banner&&this.accentColor===e.accentColor}_equals(e){return e&&this.id===e.id&&this.username===e.username&&this.discriminator===e.discriminator&&this.avatar===e.avatar&&this.flags?.bitfield===e.public_flags&&("banner"in e?this.banner===e.banner:true)&&("accent_color"in e?this.accentColor===e.accent_color:true)}fetchFlags(e=false){return this.client.users.fetchFlags(this.id,{force:e})}fetch(e=true){return this.client.users.fetch(this.id,{force:e})}toString(){return`<@${this.id}>`}toJSON(...e){const t=super.toJSON({createdTimestamp:true,defaultAvatarURL:true,hexAccentColor:true,tag:true},...e);t.avatarURL=this.avatarURL();t.displayAvatarURL=this.displayAvatarURL();t.bannerURL=this.banner?this.bannerURL():this.banner;return t}send(){}}r.applyToClass(User);e.exports=User},30796:(e,t,i)=>{"use strict";const s=i(53496);class UserContextMenuInteraction extends s{get targetUser(){return this.options.getUser("user")}get targetMember(){return this.options.getMember("user")}}e.exports=UserContextMenuInteraction},73776:(e,t,i)=>{"use strict";const s=i(97742);const r=i(32728);const o=i(97234);let l=false;class VoiceChannel extends r{get editable(){if(!l){s.emitWarning("The VoiceChannel#editable getter is deprecated. Use VoiceChannel#manageable instead.","DeprecationWarning");l=true}return this.manageable}get joinable(){if(!super.joinable)return false;if(this.full&&!this.permissionsFor(this.client.user).has(o.FLAGS.MOVE_MEMBERS,false))return false;return true}get speakable(){const e=this.permissionsFor(this.client.user);if(!e)return false;if(e.has(o.FLAGS.ADMINISTRATOR,false))return true;return this.guild.me.communicationDisabledUntilTimestamp<Date.now()&&e.has(o.FLAGS.SPEAK,false)}setBitrate(e,t){return this.edit({bitrate:e},t)}setUserLimit(e,t){return this.edit({userLimit:e},t)}}e.exports=VoiceChannel},87193:(e,t,i)=>{"use strict";const s=i(28270);class VoiceRegion{constructor(e){this.id=e.id;this.name=e.name;this.vip=e.vip;this.deprecated=e.deprecated;this.optimal=e.optimal;this.custom=e.custom}toJSON(){return s.flatten(this)}}e.exports=VoiceRegion},79721:(e,t,i)=>{"use strict";const s=i(99307);const{Error:r,TypeError:o}=i(94436);class VoiceState extends s{constructor(e,t){super(e.client);this.guild=e;this.id=t.user_id;this._patch(t)}_patch(e){if("deaf"in e){this.serverDeaf=e.deaf}else{this.serverDeaf??=null}if("mute"in e){this.serverMute=e.mute}else{this.serverMute??=null}if("self_deaf"in e){this.selfDeaf=e.self_deaf}else{this.selfDeaf??=null}if("self_mute"in e){this.selfMute=e.self_mute}else{this.selfMute??=null}if("self_video"in e){this.selfVideo=e.self_video}else{this.selfVideo??=null}if("session_id"in e){this.sessionId=e.session_id}else{this.sessionId??=null}if("self_video"in e){this.streaming=e.self_stream??false}else{this.streaming??=null}if("channel_id"in e){this.channelId=e.channel_id}else{this.channelId??=null}if("suppress"in e){this.suppress=e.suppress}if("request_to_speak_timestamp"in e){this.requestToSpeakTimestamp=new Date(e.request_to_speak_timestamp).getTime()}else{this.requestToSpeakTimestamp??=null}return this}get member(){return this.guild.members.cache.get(this.id)??null}get channel(){return this.guild.channels.cache.get(this.channelId)??null}get deaf(){return this.serverDeaf||this.selfDeaf}get mute(){return this.serverMute||this.selfMute}setMute(e=true,t){return this.guild.members.edit(this.id,{mute:e},t)}setDeaf(e=true,t){return this.guild.members.edit(this.id,{deaf:e},t)}disconnect(e){return this.setChannel(null,e)}setChannel(e,t){return this.guild.members.edit(this.id,{channel:e},t)}async setRequestToSpeak(e=true){if(this.channel?.type!=="GUILD_STAGE_VOICE")throw new r("VOICE_NOT_STAGE_CHANNEL");if(this.client.user.id!==this.id)throw new r("VOICE_STATE_NOT_OWN");await this.client.api.guilds(this.guild.id,"voice-states","@me").patch({data:{channel_id:this.channelId,request_to_speak_timestamp:e?(new Date).toISOString():null}})}async setSuppressed(e=true){if(typeof e!=="boolean")throw new o("VOICE_STATE_INVALID_TYPE","suppressed");if(this.channel?.type!=="GUILD_STAGE_VOICE")throw new r("VOICE_NOT_STAGE_CHANNEL");const t=this.client.user.id===this.id?"@me":this.id;await this.client.api.guilds(this.guild.id,"voice-states",t).patch({data:{channel_id:this.channelId,suppress:e}})}toJSON(){return super.toJSON({id:true,serverDeaf:true,serverMute:true,selfDeaf:true,selfMute:true,sessionId:true,channelId:"channel"})}}e.exports=VoiceState},95600:(e,t,i)=>{"use strict";const s=i(97742);const r=i(4405);const{Error:o}=i(94436);const{WebhookTypes:l}=i(98422);const c=i(73642);const u=i(40421);let m=false;class Webhook{constructor(e,t){Object.defineProperty(this,"client",{value:e});if(t)this._patch(t)}_patch(e){if("name"in e){this.name=e.name}Object.defineProperty(this,"token",{value:e.token??null,writable:true,configurable:true});if("avatar"in e){this.avatar=e.avatar}this.id=e.id;if("type"in e){this.type=l[e.type]}if("guild_id"in e){this.guildId=e.guild_id}if("channel_id"in e){this.channelId=e.channel_id}if("user"in e){this.owner=this.client.users?._add(e.user)??e.user}else{this.owner??=null}if("source_guild"in e){this.sourceGuild=this.client.guilds?.resolve(e.source_guild.id)??e.source_guild}else{this.sourceGuild??=null}if("source_channel"in e){this.sourceChannel=this.client.channels?.resolve(e.source_channel?.id)??e.source_channel}else{this.sourceChannel??=null}}async send(e){if(!this.token)throw new o("WEBHOOK_TOKEN_UNAVAILABLE");let t;if(e instanceof r){t=e.resolveData()}else{t=r.create(this,e).resolveData()}const{data:i,files:s}=await t.resolveFiles();const l=await this.client.api.webhooks(this.id,this.token).post({data:i,files:s,query:{thread_id:t.options.threadId,wait:true},auth:false});return this.client.channels?.cache.get(l.channel_id)?.messages._add(l,false)??l}async sendSlackMessage(e){if(!this.token)throw new o("WEBHOOK_TOKEN_UNAVAILABLE");const t=await this.client.api.webhooks(this.id,this.token).slack.post({query:{wait:true},auth:false,data:e});return t.toString()==="ok"}async edit({name:e=this.name,avatar:t,channel:i},s){if(t&&!(typeof t==="string"&&t.startsWith("data:"))){t=await c.resolveImage(t)}i&&=i.id??i;const r=await this.client.api.webhooks(this.id,i?undefined:this.token).patch({data:{name:e,avatar:t,channel_id:i},reason:s,auth:!this.token||Boolean(i)});this.name=r.name;this.avatar=r.avatar;this.channelId=r.channel_id;return this}async fetchMessage(e,t={cache:true}){if(typeof t==="boolean"){if(!m){s.emitWarning("Passing a boolean to cache the message in Webhook#fetchMessage is deprecated. Pass an object instead.","DeprecationWarning");m=true}t={cache:t}}if(!this.token)throw new o("WEBHOOK_TOKEN_UNAVAILABLE");const i=await this.client.api.webhooks(this.id,this.token).messages(e).get({query:{thread_id:t.threadId},auth:false});return this.client.channels?.cache.get(i.channel_id)?.messages._add(i,t.cache)??i}async editMessage(e,t){if(!this.token)throw new o("WEBHOOK_TOKEN_UNAVAILABLE");let i;if(t instanceof r)i=t;else i=r.create(this,t);const{data:s,files:l}=await i.resolveData().resolveFiles();const c=await this.client.api.webhooks(this.id,this.token).messages(typeof e==="string"?e:e.id).patch({data:s,files:l,query:{thread_id:i.options.threadId},auth:false});const u=this.client.channels?.cache.get(c.channel_id)?.messages;if(!u)return c;const m=u.cache.get(c.id);if(!m)return u._add(c);const g=m._clone();g._patch(c);return g}async delete(e){await this.client.api.webhooks(this.id,this.token).delete({reason:e,auth:!this.token})}async deleteMessage(e,t){if(!this.token)throw new o("WEBHOOK_TOKEN_UNAVAILABLE");await this.client.api.webhooks(this.id,this.token).messages(typeof e==="string"?e:e.id).delete({query:{thread_id:t},auth:false})}get createdTimestamp(){return u.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}get url(){return this.client.options.http.api+this.client.api.webhooks(this.id,this.token)}avatarURL({format:e,size:t}={}){if(!this.avatar)return null;return this.client.rest.cdn.Avatar(this.id,this.avatar,e,t)}isChannelFollower(){return this.type==="Channel Follower"}isIncoming(){return this.type==="Incoming"}static applyToClass(e,t=[]){for(const i of["send","sendSlackMessage","fetchMessage","edit","editMessage","delete","deleteMessage","createdTimestamp","createdAt","url"]){if(t.includes(i))continue;Object.defineProperty(e.prototype,i,Object.getOwnPropertyDescriptor(Webhook.prototype,i))}}}e.exports=Webhook},67350:(e,t,i)=>{"use strict";const s=i(99307);const{Emoji:r}=i(63855);class WelcomeChannel extends s{constructor(e,t){super(e.client);this.guild=e;this.description=t.description;this._emoji={name:t.emoji_name,id:t.emoji_id};this.channelId=t.channel_id}get channel(){return this.client.channels.resolve(this.channelId)}get emoji(){return this.client.emojis.resolve(this._emoji.id)??new r(this.client,this._emoji)}}e.exports=WelcomeChannel},82252:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(99307);const o=i(67350);class WelcomeScreen extends r{constructor(e,t){super(e.client);this.guild=e;this.description=t.description??null;this.welcomeChannels=new s;for(const e of t.welcome_channels){const t=new o(this.guild,e);this.welcomeChannels.set(t.channelId,t)}}get enabled(){return this.guild.features.includes("WELCOME_SCREEN_ENABLED")}}e.exports=WelcomeScreen},24528:(e,t,i)=>{"use strict";const{Collection:s}=i(38861);const r=i(99307);const o=i(66490);class Widget extends r{constructor(e,t){super(e);this._patch(t)}_patch(e){this.id=e.id;if("name"in e){this.name=e.name}if("instant_invite"in e){this.instantInvite=e.instant_invite}this.channels=new s;for(const t of e.channels){this.channels.set(t.id,t)}this.members=new s;for(const t of e.members){this.members.set(t.id,new o(this.client,t))}if("presence_count"in e){this.presenceCount=e.presence_count}}async fetch(){const e=await this.client.api.guilds(this.id,"widget.json").get();this._patch(e);return this}}e.exports=Widget},66490:(e,t,i)=>{"use strict";const s=i(99307);class WidgetMember extends s{constructor(e,t){super(e);this.id=t.id;this.username=t.username;this.discriminator=t.discriminator;this.avatar=t.avatar;this.status=t.status;this.deaf=t.deaf??null;this.mute=t.mute??null;this.selfDeaf=t.self_deaf??null;this.selfMute=t.self_mute??null;this.suppress=t.suppress??null;this.channelId=t.channel_id??null;this.avatarURL=t.avatar_url;this.activity=t.activity??null}}e.exports=WidgetMember},39425:(e,t,i)=>{"use strict";const{ClientApplicationAssetTypes:s,Endpoints:r}=i(98422);const o=i(40421);const l=i(99307);const c=Object.keys(s);class Application extends l{constructor(e,t){super(e);this._patch(t)}_patch(e){this.id=e.id;if("name"in e){this.name=e.name}else{this.name??=null}if("description"in e){this.description=e.description}else{this.description??=null}if("icon"in e){this.icon=e.icon}else{this.icon??=null}}get createdTimestamp(){return o.timestampFrom(this.id)}get createdAt(){return new Date(this.createdTimestamp)}iconURL({format:e,size:t}={}){if(!this.icon)return null;return this.client.rest.cdn.AppIcon(this.id,this.icon,{format:e,size:t})}coverURL({format:e,size:t}={}){if(!this.cover)return null;return r.CDN(this.client.options.http.cdn).AppIcon(this.id,this.cover,{format:e,size:t})}async fetchAssets(){const e=await this.client.api.oauth2.applications(this.id).assets.get();return e.map((e=>({id:e.id,name:e.name,type:c[e.type-1]})))}toString(){return this.name}toJSON(){return super.toJSON({createdTimestamp:true})}}e.exports=Application},33858:(e,t,i)=>{"use strict";const s=i(15673);const{setTimeout:r}=i(92332);const{Collection:o}=i(38861);const{TypeError:l}=i(94436);const c=i(28270);class Collector extends s{constructor(e,t={}){super();Object.defineProperty(this,"client",{value:e});this.filter=t.filter??(()=>true);this.options=t;this.collected=new o;this.ended=false;this._timeout=null;this._idletimeout=null;if(typeof this.filter!=="function"){throw new l("INVALID_TYPE","options.filter","function")}this.handleCollect=this.handleCollect.bind(this);this.handleDispose=this.handleDispose.bind(this);if(t.time)this._timeout=r((()=>this.stop("time")),t.time).unref();if(t.idle)this._idletimeout=r((()=>this.stop("idle")),t.idle).unref()}async handleCollect(...e){const t=await this.collect(...e);if(t&&await this.filter(...e,this.collected)){this.collected.set(t,e[0]);this.emit("collect",...e);if(this._idletimeout){clearTimeout(this._idletimeout);this._idletimeout=r((()=>this.stop("idle")),this.options.idle).unref()}}this.checkEnd()}async handleDispose(...e){if(!this.options.dispose)return;const t=this.dispose(...e);if(!t||!await this.filter(...e)||!this.collected.has(t))return;this.collected.delete(t);this.emit("dispose",...e);this.checkEnd()}get next(){return new Promise(((e,t)=>{if(this.ended){t(this.collected);return}const cleanup=()=>{this.removeListener("collect",onCollect);this.removeListener("end",onEnd)};const onCollect=t=>{cleanup();e(t)};const onEnd=()=>{cleanup();t(this.collected)};this.on("collect",onCollect);this.on("end",onEnd)}))}stop(e="user"){if(this.ended)return;if(this._timeout){clearTimeout(this._timeout);this._timeout=null}if(this._idletimeout){clearTimeout(this._idletimeout);this._idletimeout=null}this.ended=true;this.emit("end",this.collected,e)}resetTimer({time:e,idle:t}={}){if(this._timeout){clearTimeout(this._timeout);this._timeout=r((()=>this.stop("time")),e??this.options.time).unref()}if(this._idletimeout){clearTimeout(this._idletimeout);this._idletimeout=r((()=>this.stop("idle")),t??this.options.idle).unref()}}checkEnd(){const e=this.endReason;if(e)this.stop(e);return Boolean(e)}async*[Symbol.asyncIterator](){const e=[];const onCollect=t=>e.push(t);this.on("collect",onCollect);try{while(e.length||!this.ended){if(e.length){yield e.shift()}else{await new Promise((e=>{const tick=()=>{this.removeListener("collect",tick);this.removeListener("end",tick);return e()};this.on("collect",tick);this.on("end",tick)}))}}}finally{this.removeListener("collect",onCollect)}}toJSON(){return c.flatten(this)}get endReason(){}collect(){}dispose(){}}e.exports=Collector},84259:(e,t,i)=>{"use strict";const{Error:s}=i(94436);const{InteractionResponseTypes:r}=i(98422);const o=i(62840);const l=i(4405);class InteractionResponses{async deferReply(e={}){if(this.deferred||this.replied)throw new s("INTERACTION_ALREADY_REPLIED");this.ephemeral=e.ephemeral??false;await this.client.api.interactions(this.id,this.token).callback.post({data:{type:r.DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE,data:{flags:e.ephemeral?o.FLAGS.EPHEMERAL:undefined}},auth:false});this.deferred=true;return e.fetchReply?this.fetchReply():undefined}async reply(e){if(this.deferred||this.replied)throw new s("INTERACTION_ALREADY_REPLIED");this.ephemeral=e.ephemeral??false;let t;if(e instanceof l)t=e;else t=l.create(this,e);const{data:i,files:o}=await t.resolveData().resolveFiles();await this.client.api.interactions(this.id,this.token).callback.post({data:{type:r.CHANNEL_MESSAGE_WITH_SOURCE,data:i},files:o,auth:false});this.replied=true;return e.fetchReply?this.fetchReply():undefined}fetchReply(){return this.webhook.fetchMessage("@original")}async editReply(e){if(!this.deferred&&!this.replied)throw new s("INTERACTION_NOT_REPLIED");const t=await this.webhook.editMessage("@original",e);this.replied=true;return t}async deleteReply(){if(this.ephemeral)throw new s("INTERACTION_EPHEMERAL_REPLIED");await this.webhook.deleteMessage("@original")}followUp(e){if(!this.deferred&&!this.replied)return Promise.reject(new s("INTERACTION_NOT_REPLIED"));return this.webhook.send(e)}async deferUpdate(e={}){if(this.deferred||this.replied)throw new s("INTERACTION_ALREADY_REPLIED");await this.client.api.interactions(this.id,this.token).callback.post({data:{type:r.DEFERRED_MESSAGE_UPDATE},auth:false});this.deferred=true;return e.fetchReply?this.fetchReply():undefined}async update(e){if(this.deferred||this.replied)throw new s("INTERACTION_ALREADY_REPLIED");let t;if(e instanceof l)t=e;else t=l.create(this,e);const{data:i,files:o}=await t.resolveData().resolveFiles();await this.client.api.interactions(this.id,this.token).callback.post({data:{type:r.UPDATE_MESSAGE,data:i},files:o,auth:false});this.replied=true;return e.fetchReply?this.fetchReply():undefined}static applyToClass(e,t=[]){const i=["deferReply","reply","fetchReply","editReply","deleteReply","followUp","deferUpdate","update"];for(const s of i){if(t.includes(s))continue;Object.defineProperty(e.prototype,s,Object.getOwnPropertyDescriptor(InteractionResponses.prototype,s))}}}e.exports=InteractionResponses},30367:(e,t,i)=>{"use strict";const s=i(75121);const r=i(4405);const o=i(40421);const{Collection:l}=i(38861);const{InteractionTypes:c}=i(98422);const{TypeError:u,Error:m}=i(94436);const g=i(19811);class TextBasedChannel{constructor(){this.messages=new v(this);this.lastMessageId=null;this.lastPinTimestamp=null}get lastMessage(){return this.messages.resolve(this.lastMessageId)}get lastPinAt(){return this.lastPinTimestamp?new Date(this.lastPinTimestamp):null}async send(e){const t=i(96283);const{GuildMember:s}=i(27081);if(this instanceof t||this instanceof s){const t=await this.createDM();return t.send(e)}let o;if(e instanceof r){o=e.resolveData()}else{o=r.create(this,e).resolveData()}const{data:l,files:c}=await o.resolveFiles();const u=await this.client.api.channels[this.id].messages.post({data:l,files:c});return this.messages.cache.get(u.id)??this.messages._add(u)}async sendTyping(){await this.client.api.channels(this.id).typing.post()}createMessageCollector(e={}){return new s(this,e)}awaitMessages(e={}){return new Promise(((t,i)=>{const s=this.createMessageCollector(e);s.once("end",((s,r)=>{if(e.errors?.includes(r)){i(s)}else{t(s)}}))}))}createMessageComponentCollector(e={}){return new g(this.client,{...e,interactionType:c.MESSAGE_COMPONENT,channel:this})}awaitMessageComponent(e={}){const t={...e,max:1};return new Promise(((e,i)=>{const s=this.createMessageComponentCollector(t);s.once("end",((t,s)=>{const r=t.first();if(r)e(r);else i(new m("INTERACTION_COLLECTOR_ERROR",s))}))}))}async bulkDelete(e,t=false){if(Array.isArray(e)||e instanceof l){let i=e instanceof l?[...e.keys()]:e.map((e=>e.id??e));if(t){i=i.filter((e=>Date.now()-o.timestampFrom(e)<12096e5))}if(i.length===0)return new l;if(i.length===1){await this.client.api.channels(this.id).messages(i[0]).delete();const e=this.client.actions.MessageDelete.getMessage({message_id:i[0]},this);return e?new l([[e.id,e]]):new l}await this.client.api.channels[this.id].messages["bulk-delete"].post({data:{messages:i}});return i.reduce(((e,t)=>e.set(t,this.client.actions.MessageDeleteBulk.getMessage({message_id:t},this))),new l)}if(!isNaN(e)){const i=await this.messages.fetch({limit:e});return this.bulkDelete(i,t)}throw new u("MESSAGE_BULK_DELETE_TYPE")}static applyToClass(e,t=false,i=[]){const s=["send"];if(t){s.push("lastMessage","lastPinAt","bulkDelete","sendTyping","createMessageCollector","awaitMessages","createMessageComponentCollector","awaitMessageComponent")}for(const t of s){if(i.includes(t))continue;Object.defineProperty(e.prototype,t,Object.getOwnPropertyDescriptor(TextBasedChannel.prototype,t))}}}e.exports=TextBasedChannel;const v=i(68207)},6261:(e,t,i)=>{"use strict";const s=i(64973);class ActivityFlags extends s{}ActivityFlags.FLAGS={INSTANCE:1<<0,JOIN:1<<1,SPECTATE:1<<2,JOIN_REQUEST:1<<3,SYNC:1<<4,PLAY:1<<5,PARTY_PRIVACY_FRIENDS:1<<6,PARTY_PRIVACY_VOICE_CHANNEL:1<<7,EMBEDDED:1<<8};e.exports=ActivityFlags},64834:(e,t,i)=>{"use strict";const s=i(64973);class ApplicationFlags extends s{}ApplicationFlags.FLAGS={GATEWAY_PRESENCE:1<<12,GATEWAY_PRESENCE_LIMITED:1<<13,GATEWAY_GUILD_MEMBERS:1<<14,GATEWAY_GUILD_MEMBERS_LIMITED:1<<15,VERIFICATION_PENDING_GUILD_LIMIT:1<<16,EMBEDDED:1<<17,GATEWAY_MESSAGE_CONTENT:1<<18,GATEWAY_MESSAGE_CONTENT_LIMITED:1<<19};e.exports=ApplicationFlags},64973:(e,t,i)=>{"use strict";const{RangeError:s}=i(94436);class BitField{constructor(e=this.constructor.defaultBit){this.bitfield=this.constructor.resolve(e)}any(e){return(this.bitfield&this.constructor.resolve(e))!==this.constructor.defaultBit}equals(e){return this.bitfield===this.constructor.resolve(e)}has(e){e=this.constructor.resolve(e);return(this.bitfield&e)===e}missing(e,...t){return new this.constructor(e).remove(this).toArray(...t)}freeze(){return Object.freeze(this)}add(...e){let t=this.constructor.defaultBit;for(const i of e){t|=this.constructor.resolve(i)}if(Object.isFrozen(this))return new this.constructor(this.bitfield|t);this.bitfield|=t;return this}remove(...e){let t=this.constructor.defaultBit;for(const i of e){t|=this.constructor.resolve(i)}if(Object.isFrozen(this))return new this.constructor(this.bitfield&~t);this.bitfield&=~t;return this}serialize(...e){const t={};for(const[i,s]of Object.entries(this.constructor.FLAGS))t[i]=this.has(s,...e);return t}toArray(...e){return Object.keys(this.constructor.FLAGS).filter((t=>this.has(t,...e)))}toJSON(){return typeof this.bitfield==="number"?this.bitfield:this.bitfield.toString()}valueOf(){return this.bitfield}*[Symbol.iterator](){yield*this.toArray()}static resolve(e){const{defaultBit:t}=this;if(typeof t===typeof e&&e>=t)return e;if(e instanceof BitField)return e.bitfield;if(Array.isArray(e))return e.map((e=>this.resolve(e))).reduce(((e,t)=>e|t),t);if(typeof e==="string"){if(typeof this.FLAGS[e]!=="undefined")return this.FLAGS[e];if(!isNaN(e))return typeof t==="bigint"?BigInt(e):Number(e)}throw new s("BITFIELD_INVALID",e)}}BitField.FLAGS={};BitField.defaultBit=0;e.exports=BitField},98422:(e,t,i)=>{"use strict";const s=i(97742);const r=t.Package=i(8526);const{Error:o,RangeError:l,TypeError:c}=i(94436);t.UserAgent=`DiscordBot (${r.homepage}, ${r.version}) Node.js/${s.version}`;t.WSCodes={1e3:"WS_CLOSE_REQUESTED",4004:"TOKEN_INVALID",4010:"SHARDING_INVALID",4011:"SHARDING_REQUIRED",4013:"INVALID_INTENTS",4014:"DISALLOWED_INTENTS"};const u=["webp","png","jpg","jpeg","gif"];const m=[16,32,56,64,96,128,256,300,512,600,1024,2048,4096];function makeImageUrl(e,{format:t="webp",size:i}={}){if(!["undefined","number"].includes(typeof i))throw new c("INVALID_TYPE","size","number");if(t&&!u.includes(t))throw new o("IMAGE_FORMAT",t);if(i&&!m.includes(i))throw new l("IMAGE_SIZE",i);return`${e}.${t}${i?`?size=${i}`:""}`}t.Endpoints={CDN(e){return{Emoji:(t,i="webp")=>`${e}/emojis/${t}.${i}`,Asset:t=>`${e}/assets/${t}`,DefaultAvatar:t=>`${e}/embed/avatars/${t}.png`,Avatar:(t,i,s,r,o=false)=>{if(o&&i.startsWith("a_"))s="gif";return makeImageUrl(`${e}/avatars/${t}/${i}`,{format:s,size:r})},GuildMemberAvatar:(t,i,s,r="webp",o,l=false)=>{if(l&&s.startsWith("a_"))r="gif";return makeImageUrl(`${e}/guilds/${t}/users/${i}/avatars/${s}`,{format:r,size:o})},Banner:(t,i,s,r,o=false)=>{if(o&&i.startsWith("a_"))s="gif";return makeImageUrl(`${e}/banners/${t}/${i}`,{format:s,size:r})},Icon:(t,i,s,r,o=false)=>{if(o&&i.startsWith("a_"))s="gif";return makeImageUrl(`${e}/icons/${t}/${i}`,{format:s,size:r})},AppIcon:(t,i,s)=>makeImageUrl(`${e}/app-icons/${t}/${i}`,s),AppAsset:(t,i,s)=>makeImageUrl(`${e}/app-assets/${t}/${i}`,s),StickerPackBanner:(t,i,s)=>makeImageUrl(`${e}/app-assets/710982414301790216/store/${t}`,{size:s,format:i}),GDMIcon:(t,i,s,r)=>makeImageUrl(`${e}/channel-icons/${t}/${i}`,{size:r,format:s}),Splash:(t,i,s,r)=>makeImageUrl(`${e}/splashes/${t}/${i}`,{size:r,format:s}),DiscoverySplash:(t,i,s,r)=>makeImageUrl(`${e}/discovery-splashes/${t}/${i}`,{size:r,format:s}),TeamIcon:(t,i,s)=>makeImageUrl(`${e}/team-icons/${t}/${i}`,s),Sticker:(t,i)=>`${e}/stickers/${t}.${i==="LOTTIE"?"json":"png"}`,RoleIcon:(t,i,s="webp",r)=>makeImageUrl(`${e}/role-icons/${t}/${i}`,{size:r,format:s})}},invite:(e,t,i)=>i?`${e}/${t}?event=${i}`:`${e}/${t}`,scheduledEvent:(e,t,i)=>`${e}/${t}/${i}`,botGateway:"/gateway/bot"};t.Status={READY:0,CONNECTING:1,RECONNECTING:2,IDLE:3,NEARLY:4,DISCONNECTED:5,WAITING_FOR_GUILDS:6,IDENTIFYING:7,RESUMING:8};t.Opcodes={DISPATCH:0,HEARTBEAT:1,IDENTIFY:2,STATUS_UPDATE:3,VOICE_STATE_UPDATE:4,VOICE_GUILD_PING:5,RESUME:6,RECONNECT:7,REQUEST_GUILD_MEMBERS:8,INVALID_SESSION:9,HELLO:10,HEARTBEAT_ACK:11};t.Events={RATE_LIMIT:"rateLimit",INVALID_REQUEST_WARNING:"invalidRequestWarning",API_RESPONSE:"apiResponse",API_REQUEST:"apiRequest",CLIENT_READY:"ready",APPLICATION_COMMAND_CREATE:"applicationCommandCreate",APPLICATION_COMMAND_DELETE:"applicationCommandDelete",APPLICATION_COMMAND_UPDATE:"applicationCommandUpdate",GUILD_CREATE:"guildCreate",GUILD_DELETE:"guildDelete",GUILD_UPDATE:"guildUpdate",GUILD_UNAVAILABLE:"guildUnavailable",GUILD_MEMBER_ADD:"guildMemberAdd",GUILD_MEMBER_REMOVE:"guildMemberRemove",GUILD_MEMBER_UPDATE:"guildMemberUpdate",GUILD_MEMBER_AVAILABLE:"guildMemberAvailable",GUILD_MEMBERS_CHUNK:"guildMembersChunk",GUILD_INTEGRATIONS_UPDATE:"guildIntegrationsUpdate",GUILD_ROLE_CREATE:"roleCreate",GUILD_ROLE_DELETE:"roleDelete",INVITE_CREATE:"inviteCreate",INVITE_DELETE:"inviteDelete",GUILD_ROLE_UPDATE:"roleUpdate",GUILD_EMOJI_CREATE:"emojiCreate",GUILD_EMOJI_DELETE:"emojiDelete",GUILD_EMOJI_UPDATE:"emojiUpdate",GUILD_BAN_ADD:"guildBanAdd",GUILD_BAN_REMOVE:"guildBanRemove",CHANNEL_CREATE:"channelCreate",CHANNEL_DELETE:"channelDelete",CHANNEL_UPDATE:"channelUpdate",CHANNEL_PINS_UPDATE:"channelPinsUpdate",MESSAGE_CREATE:"messageCreate",MESSAGE_DELETE:"messageDelete",MESSAGE_UPDATE:"messageUpdate",MESSAGE_BULK_DELETE:"messageDeleteBulk",MESSAGE_REACTION_ADD:"messageReactionAdd",MESSAGE_REACTION_REMOVE:"messageReactionRemove",MESSAGE_REACTION_REMOVE_ALL:"messageReactionRemoveAll",MESSAGE_REACTION_REMOVE_EMOJI:"messageReactionRemoveEmoji",THREAD_CREATE:"threadCreate",THREAD_DELETE:"threadDelete",THREAD_UPDATE:"threadUpdate",THREAD_LIST_SYNC:"threadListSync",THREAD_MEMBER_UPDATE:"threadMemberUpdate",THREAD_MEMBERS_UPDATE:"threadMembersUpdate",USER_UPDATE:"userUpdate",PRESENCE_UPDATE:"presenceUpdate",VOICE_SERVER_UPDATE:"voiceServerUpdate",VOICE_STATE_UPDATE:"voiceStateUpdate",TYPING_START:"typingStart",WEBHOOKS_UPDATE:"webhookUpdate",INTERACTION_CREATE:"interactionCreate",ERROR:"error",WARN:"warn",DEBUG:"debug",CACHE_SWEEP:"cacheSweep",SHARD_DISCONNECT:"shardDisconnect",SHARD_ERROR:"shardError",SHARD_RECONNECTING:"shardReconnecting",SHARD_READY:"shardReady",SHARD_RESUME:"shardResume",INVALIDATED:"invalidated",RAW:"raw",STAGE_INSTANCE_CREATE:"stageInstanceCreate",STAGE_INSTANCE_UPDATE:"stageInstanceUpdate",STAGE_INSTANCE_DELETE:"stageInstanceDelete",GUILD_STICKER_CREATE:"stickerCreate",GUILD_STICKER_DELETE:"stickerDelete",GUILD_STICKER_UPDATE:"stickerUpdate",GUILD_SCHEDULED_EVENT_CREATE:"guildScheduledEventCreate",GUILD_SCHEDULED_EVENT_UPDATE:"guildScheduledEventUpdate",GUILD_SCHEDULED_EVENT_DELETE:"guildScheduledEventDelete",GUILD_SCHEDULED_EVENT_USER_ADD:"guildScheduledEventUserAdd",GUILD_SCHEDULED_EVENT_USER_REMOVE:"guildScheduledEventUserRemove"};t.ShardEvents={CLOSE:"close",DESTROYED:"destroyed",INVALID_SESSION:"invalidSession",READY:"ready",RESUMED:"resumed",ALL_READY:"allReady"};t.PartialTypes=keyMirror(["USER","CHANNEL","GUILD_MEMBER","MESSAGE","REACTION","GUILD_SCHEDULED_EVENT"]);t.WSEvents=keyMirror(["READY","RESUMED","APPLICATION_COMMAND_CREATE","APPLICATION_COMMAND_DELETE","APPLICATION_COMMAND_UPDATE","GUILD_CREATE","GUILD_DELETE","GUILD_UPDATE","INVITE_CREATE","INVITE_DELETE","GUILD_MEMBER_ADD","GUILD_MEMBER_REMOVE","GUILD_MEMBER_UPDATE","GUILD_MEMBERS_CHUNK","GUILD_INTEGRATIONS_UPDATE","GUILD_ROLE_CREATE","GUILD_ROLE_DELETE","GUILD_ROLE_UPDATE","GUILD_BAN_ADD","GUILD_BAN_REMOVE","GUILD_EMOJIS_UPDATE","CHANNEL_CREATE","CHANNEL_DELETE","CHANNEL_UPDATE","CHANNEL_PINS_UPDATE","MESSAGE_CREATE","MESSAGE_DELETE","MESSAGE_UPDATE","MESSAGE_DELETE_BULK","MESSAGE_REACTION_ADD","MESSAGE_REACTION_REMOVE","MESSAGE_REACTION_REMOVE_ALL","MESSAGE_REACTION_REMOVE_EMOJI","THREAD_CREATE","THREAD_UPDATE","THREAD_DELETE","THREAD_LIST_SYNC","THREAD_MEMBER_UPDATE","THREAD_MEMBERS_UPDATE","USER_UPDATE","PRESENCE_UPDATE","TYPING_START","VOICE_STATE_UPDATE","VOICE_SERVER_UPDATE","WEBHOOKS_UPDATE","INTERACTION_CREATE","STAGE_INSTANCE_CREATE","STAGE_INSTANCE_UPDATE","STAGE_INSTANCE_DELETE","GUILD_STICKERS_UPDATE","GUILD_SCHEDULED_EVENT_CREATE","GUILD_SCHEDULED_EVENT_UPDATE","GUILD_SCHEDULED_EVENT_DELETE","GUILD_SCHEDULED_EVENT_USER_ADD","GUILD_SCHEDULED_EVENT_USER_REMOVE"]);t.InviteScopes=["applications.builds.read","applications.commands","applications.entitlements","applications.store.update","bot","connections","email","identify","guilds","guilds.join","gdm.join","webhook.incoming"];t.IntegrationExpireBehaviors=createEnum(["REMOVE_ROLE","KICK"]);t.MessageTypes=["DEFAULT","RECIPIENT_ADD","RECIPIENT_REMOVE","CALL","CHANNEL_NAME_CHANGE","CHANNEL_ICON_CHANGE","CHANNEL_PINNED_MESSAGE","GUILD_MEMBER_JOIN","USER_PREMIUM_GUILD_SUBSCRIPTION","USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_1","USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_2","USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_3","CHANNEL_FOLLOW_ADD",null,"GUILD_DISCOVERY_DISQUALIFIED","GUILD_DISCOVERY_REQUALIFIED","GUILD_DISCOVERY_GRACE_PERIOD_INITIAL_WARNING","GUILD_DISCOVERY_GRACE_PERIOD_FINAL_WARNING","THREAD_CREATED","REPLY","APPLICATION_COMMAND","THREAD_STARTER_MESSAGE","GUILD_INVITE_REMINDER","CONTEXT_MENU_COMMAND"];t.SweeperKeys=["applicationCommands","bans","emojis","invites","guildMembers","messages","presences","reactions","stageInstances","stickers","threadMembers","threads","users","voiceStates"];t.SystemMessageTypes=t.MessageTypes.filter((e=>e&&!["DEFAULT","REPLY","APPLICATION_COMMAND","CONTEXT_MENU_COMMAND"].includes(e)));t.ActivityTypes=createEnum(["PLAYING","STREAMING","LISTENING","WATCHING","CUSTOM","COMPETING"]);t.ChannelTypes=createEnum(["GUILD_TEXT","DM","GUILD_VOICE","GROUP_DM","GUILD_CATEGORY","GUILD_NEWS","GUILD_STORE",...Array(3).fill(null),"GUILD_NEWS_THREAD","GUILD_PUBLIC_THREAD","GUILD_PRIVATE_THREAD","GUILD_STAGE_VOICE"]);t.TextBasedChannelTypes=["DM","GUILD_TEXT","GUILD_NEWS","GUILD_NEWS_THREAD","GUILD_PUBLIC_THREAD","GUILD_PRIVATE_THREAD"];t.ThreadChannelTypes=["GUILD_NEWS_THREAD","GUILD_PUBLIC_THREAD","GUILD_PRIVATE_THREAD"];t.VoiceBasedChannelTypes=["GUILD_VOICE","GUILD_STAGE_VOICE"];t.ClientApplicationAssetTypes={SMALL:1,BIG:2};t.Colors={DEFAULT:0,WHITE:16777215,AQUA:1752220,GREEN:5763719,BLUE:3447003,YELLOW:16705372,PURPLE:10181046,LUMINOUS_VIVID_PINK:15277667,FUCHSIA:15418782,GOLD:15844367,ORANGE:15105570,RED:15548997,GREY:9807270,NAVY:3426654,DARK_AQUA:1146986,DARK_GREEN:2067276,DARK_BLUE:2123412,DARK_PURPLE:7419530,DARK_VIVID_PINK:11342935,DARK_GOLD:12745742,DARK_ORANGE:11027200,DARK_RED:10038562,DARK_GREY:9936031,DARKER_GREY:8359053,LIGHT_GREY:12370112,DARK_NAVY:2899536,BLURPLE:5793266,GREYPLE:10070709,DARK_BUT_NOT_BLACK:2895667,NOT_QUITE_BLACK:2303786};t.ExplicitContentFilterLevels=createEnum(["DISABLED","MEMBERS_WITHOUT_ROLES","ALL_MEMBERS"]);t.VerificationLevels=createEnum(["NONE","LOW","MEDIUM","HIGH","VERY_HIGH"]);t.APIErrors={UNKNOWN_ACCOUNT:10001,UNKNOWN_APPLICATION:10002,UNKNOWN_CHANNEL:10003,UNKNOWN_GUILD:10004,UNKNOWN_INTEGRATION:10005,UNKNOWN_INVITE:10006,UNKNOWN_MEMBER:10007,UNKNOWN_MESSAGE:10008,UNKNOWN_OVERWRITE:10009,UNKNOWN_PROVIDER:10010,UNKNOWN_ROLE:10011,UNKNOWN_TOKEN:10012,UNKNOWN_USER:10013,UNKNOWN_EMOJI:10014,UNKNOWN_WEBHOOK:10015,UNKNOWN_WEBHOOK_SERVICE:10016,UNKNOWN_SESSION:10020,UNKNOWN_BAN:10026,UNKNOWN_SKU:10027,UNKNOWN_STORE_LISTING:10028,UNKNOWN_ENTITLEMENT:10029,UNKNOWN_BUILD:10030,UNKNOWN_LOBBY:10031,UNKNOWN_BRANCH:10032,UNKNOWN_STORE_DIRECTORY_LAYOUT:10033,UNKNOWN_REDISTRIBUTABLE:10036,UNKNOWN_GIFT_CODE:10038,UNKNOWN_STREAM:10049,UNKNOWN_PREMIUM_SERVER_SUBSCRIBE_COOLDOWN:10050,UNKNOWN_GUILD_TEMPLATE:10057,UNKNOWN_DISCOVERABLE_SERVER_CATEGORY:10059,UNKNOWN_STICKER:10060,UNKNOWN_INTERACTION:10062,UNKNOWN_APPLICATION_COMMAND:10063,UNKNOWN_APPLICATION_COMMAND_PERMISSIONS:10066,UNKNOWN_STAGE_INSTANCE:10067,UNKNOWN_GUILD_MEMBER_VERIFICATION_FORM:10068,UNKNOWN_GUILD_WELCOME_SCREEN:10069,UNKNOWN_GUILD_SCHEDULED_EVENT:10070,UNKNOWN_GUILD_SCHEDULED_EVENT_USER:10071,BOT_PROHIBITED_ENDPOINT:20001,BOT_ONLY_ENDPOINT:20002,CANNOT_SEND_EXPLICIT_CONTENT:20009,NOT_AUTHORIZED:20012,SLOWMODE_RATE_LIMIT:20016,ACCOUNT_OWNER_ONLY:20018,ANNOUNCEMENT_EDIT_LIMIT_EXCEEDED:20022,CHANNEL_HIT_WRITE_RATELIMIT:20028,SERVER_HIT_WRITE_RATELIMIT:20029,CONTENT_NOT_ALLOWED:20031,GUILD_PREMIUM_LEVEL_TOO_LOW:20035,MAXIMUM_GUILDS:30001,MAXIMUM_FRIENDS:30002,MAXIMUM_PINS:30003,MAXIMUM_RECIPIENTS:30004,MAXIMUM_ROLES:30005,MAXIMUM_WEBHOOKS:30007,MAXIMUM_EMOJIS:30008,MAXIMUM_REACTIONS:30010,MAXIMUM_CHANNELS:30013,MAXIMUM_ATTACHMENTS:30015,MAXIMUM_INVITES:30016,MAXIMUM_ANIMATED_EMOJIS:30018,MAXIMUM_SERVER_MEMBERS:30019,MAXIMUM_NUMBER_OF_SERVER_CATEGORIES:30030,GUILD_ALREADY_HAS_TEMPLATE:30031,MAXIMUM_THREAD_PARTICIPANTS:30033,MAXIMUM_NON_GUILD_MEMBERS_BANS:30035,MAXIMUM_BAN_FETCHES:30037,MAXIMUM_NUMBER_OF_UNCOMPLETED_GUILD_SCHEDULED_EVENTS_REACHED:30038,MAXIMUM_NUMBER_OF_STICKERS_REACHED:30039,MAXIMUM_PRUNE_REQUESTS:30040,MAXIMUM_GUILD_WIDGET_SETTINGS_UPDATE:30042,UNAUTHORIZED:40001,ACCOUNT_VERIFICATION_REQUIRED:40002,DIRECT_MESSAGES_TOO_FAST:40003,REQUEST_ENTITY_TOO_LARGE:40005,FEATURE_TEMPORARILY_DISABLED:40006,USER_BANNED:40007,TARGET_USER_NOT_CONNECTED_TO_VOICE:40032,ALREADY_CROSSPOSTED:40033,MISSING_ACCESS:50001,INVALID_ACCOUNT_TYPE:50002,CANNOT_EXECUTE_ON_DM:50003,EMBED_DISABLED:50004,CANNOT_EDIT_MESSAGE_BY_OTHER:50005,CANNOT_SEND_EMPTY_MESSAGE:50006,CANNOT_MESSAGE_USER:50007,CANNOT_SEND_MESSAGES_IN_VOICE_CHANNEL:50008,CHANNEL_VERIFICATION_LEVEL_TOO_HIGH:50009,OAUTH2_APPLICATION_BOT_ABSENT:50010,MAXIMUM_OAUTH2_APPLICATIONS:50011,INVALID_OAUTH_STATE:50012,MISSING_PERMISSIONS:50013,INVALID_AUTHENTICATION_TOKEN:50014,NOTE_TOO_LONG:50015,INVALID_BULK_DELETE_QUANTITY:50016,CANNOT_PIN_MESSAGE_IN_OTHER_CHANNEL:50019,INVALID_OR_TAKEN_INVITE_CODE:50020,CANNOT_EXECUTE_ON_SYSTEM_MESSAGE:50021,CANNOT_EXECUTE_ON_CHANNEL_TYPE:50024,INVALID_OAUTH_TOKEN:50025,MISSING_OAUTH_SCOPE:50026,INVALID_WEBHOOK_TOKEN:50027,INVALID_ROLE:50028,INVALID_RECIPIENTS:50033,BULK_DELETE_MESSAGE_TOO_OLD:50034,INVALID_FORM_BODY:50035,INVITE_ACCEPTED_TO_GUILD_NOT_CONTAINING_BOT:50036,INVALID_API_VERSION:50041,FILE_UPLOADED_EXCEEDS_MAXIMUM_SIZE:50045,INVALID_FILE_UPLOADED:50046,CANNOT_SELF_REDEEM_GIFT:50054,INVALID_GUILD:50055,PAYMENT_SOURCE_REQUIRED:50070,CANNOT_DELETE_COMMUNITY_REQUIRED_CHANNEL:50074,INVALID_STICKER_SENT:50081,INVALID_OPERATION_ON_ARCHIVED_THREAD:50083,INVALID_THREAD_NOTIFICATION_SETTINGS:50084,PARAMETER_EARLIER_THAN_CREATION:50085,GUILD_NOT_AVAILABLE_IN_LOCATION:50095,GUILD_MONETIZATION_REQUIRED:50097,INSUFFICIENT_BOOSTS:50101,INVALID_JSON:50109,TWO_FACTOR_REQUIRED:60003,NO_USERS_WITH_DISCORDTAG_EXIST:80004,REACTION_BLOCKED:90001,RESOURCE_OVERLOADED:13e4,STAGE_ALREADY_OPEN:150006,CANNOT_REPLY_WITHOUT_READ_MESSAGE_HISTORY_PERMISSION:160002,MESSAGE_ALREADY_HAS_THREAD:160004,THREAD_LOCKED:160005,MAXIMUM_ACTIVE_THREADS:160006,MAXIMUM_ACTIVE_ANNOUNCEMENT_THREADS:160007,INVALID_JSON_FOR_UPLOADED_LOTTIE_FILE:170001,UPLOADED_LOTTIES_CANNOT_CONTAIN_RASTERIZED_IMAGES:170002,STICKER_MAXIMUM_FRAMERATE_EXCEEDED:170003,STICKER_FRAME_COUNT_EXCEEDS_MAXIMUM_OF_1000_FRAMES:170004,LOTTIE_ANIMATION_MAXIMUM_DIMENSIONS_EXCEEDED:170005,STICKER_FRAME_RATE_IS_TOO_SMALL_OR_TOO_LARGE:170006,STICKER_ANIMATION_DURATION_EXCEEDS_MAXIMUM_OF_5_SECONDS:170007,CANNOT_UPDATE_A_FINISHED_EVENT:18e4,FAILED_TO_CREATE_STAGE_NEEDED_FOR_STAGE_EVENT:180002};t.DefaultMessageNotificationLevels=createEnum(["ALL_MESSAGES","ONLY_MENTIONS"]);t.MembershipStates=createEnum([null,"INVITED","ACCEPTED"]);t.WebhookTypes=createEnum([null,"Incoming","Channel Follower","Application"]);t.StickerTypes=createEnum([null,"STANDARD","GUILD"]);t.StickerFormatTypes=createEnum([null,"PNG","APNG","LOTTIE"]);t.OverwriteTypes=createEnum(["role","member"]);t.ApplicationCommandTypes=createEnum([null,"CHAT_INPUT","USER","MESSAGE"]);t.ApplicationCommandOptionTypes=createEnum([null,"SUB_COMMAND","SUB_COMMAND_GROUP","STRING","INTEGER","BOOLEAN","USER","CHANNEL","ROLE","MENTIONABLE","NUMBER"]);t.ApplicationCommandPermissionTypes=createEnum([null,"ROLE","USER"]);t.InteractionTypes=createEnum([null,"PING","APPLICATION_COMMAND","MESSAGE_COMPONENT","APPLICATION_COMMAND_AUTOCOMPLETE"]);t.InteractionResponseTypes=createEnum([null,"PONG",null,null,"CHANNEL_MESSAGE_WITH_SOURCE","DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE","DEFERRED_MESSAGE_UPDATE","UPDATE_MESSAGE","APPLICATION_COMMAND_AUTOCOMPLETE_RESULT"]);t.MessageComponentTypes=createEnum([null,"ACTION_ROW","BUTTON","SELECT_MENU"]);t.MessageButtonStyles=createEnum([null,"PRIMARY","SECONDARY","SUCCESS","DANGER","LINK"]);t.MFALevels=createEnum(["NONE","ELEVATED"]);t.NSFWLevels=createEnum(["DEFAULT","EXPLICIT","SAFE","AGE_RESTRICTED"]);t.PrivacyLevels=createEnum([null,"PUBLIC","GUILD_ONLY"]);t.GuildScheduledEventPrivacyLevels=createEnum([null,null,"GUILD_ONLY"]);t.PremiumTiers=createEnum(["NONE","TIER_1","TIER_2","TIER_3"]);t.GuildScheduledEventStatuses=createEnum([null,"SCHEDULED","ACTIVE","COMPLETED","CANCELED"]);t.GuildScheduledEventEntityTypes=createEnum([null,"STAGE_INSTANCE","VOICE","EXTERNAL"]);t._cleanupSymbol=Symbol("djsCleanup");function keyMirror(e){let t=Object.create(null);for(const i of e)t[i]=i;return t}function createEnum(e){const t={};for(const[i,s]of e.entries()){if(s===null)continue;t[s]=i;t[i]=s}return t}},73642:(e,t,i)=>{"use strict";const{Buffer:s}=i(72254);const r=i(87561);const o=i(49411);const l=i(84492);const c=i(80467);const{Error:u,TypeError:m}=i(94436);const g=i(93979);class DataResolver extends(null){static resolveCode(e,t){return e.matchAll(t).next().value?.[1]??e}static resolveInviteCode(e){return this.resolveCode(e,g.INVITES_PATTERN)}static resolveGuildTemplateCode(e){const t=i(20999);return this.resolveCode(e,t.GUILD_TEMPLATES_PATTERN)}static async resolveImage(e){if(!e)return null;if(typeof e==="string"&&e.startsWith("data:")){return e}const t=await this.resolveFileAsBuffer(e);return DataResolver.resolveBase64(t)}static resolveBase64(e){if(s.isBuffer(e))return`data:image/jpg;base64,${e.toString("base64")}`;return e}static async resolveFile(e){if(s.isBuffer(e)||e instanceof l.Readable)return e;if(typeof e==="string"){if(/^https?:\/\//.test(e)){const t=await c(e);return t.body}return new Promise(((t,i)=>{const s=o.resolve(e);r.stat(s,((e,o)=>{if(e)return i(e);if(!o.isFile())return i(new u("FILE_NOT_FOUND",s));return t(r.createReadStream(s))}))}))}throw new m("REQ_RESOURCE_TYPE")}static async resolveFileAsBuffer(e){const t=await this.resolveFile(e);if(s.isBuffer(t))return t;const i=[];for await(const e of t)i.push(e);return s.concat(i)}}e.exports=DataResolver},37695:(e,t,i)=>{"use strict";const{blockQuote:s,bold:r,channelMention:o,codeBlock:l,formatEmoji:c,hideLinkEmbed:u,hyperlink:m,inlineCode:g,italic:v,memberNicknameMention:_,quote:T,roleMention:x,spoiler:S,strikethrough:A,time:I,TimestampStyles:N,underscore:O,userMention:R}=i(50938);class Formatters extends(null){}Formatters.blockQuote=s;Formatters.bold=r;Formatters.channelMention=o;Formatters.codeBlock=l;Formatters.formatEmoji=c;Formatters.hideLinkEmbed=u;Formatters.hyperlink=m;Formatters.inlineCode=g;Formatters.italic=v;Formatters.memberNicknameMention=_;Formatters.quote=T;Formatters.roleMention=x;Formatters.spoiler=S;Formatters.strikethrough=A;Formatters.time=I;Formatters.TimestampStyles=N;Formatters.underscore=O;Formatters.userMention=R;e.exports=Formatters},9453:(e,t,i)=>{"use strict";const s=i(64973);class Intents extends s{}Intents.FLAGS={GUILDS:1<<0,GUILD_MEMBERS:1<<1,GUILD_BANS:1<<2,GUILD_EMOJIS_AND_STICKERS:1<<3,GUILD_INTEGRATIONS:1<<4,GUILD_WEBHOOKS:1<<5,GUILD_INVITES:1<<6,GUILD_VOICE_STATES:1<<7,GUILD_PRESENCES:1<<8,GUILD_MESSAGES:1<<9,GUILD_MESSAGE_REACTIONS:1<<10,GUILD_MESSAGE_TYPING:1<<11,DIRECT_MESSAGES:1<<12,DIRECT_MESSAGE_REACTIONS:1<<13,DIRECT_MESSAGE_TYPING:1<<14,GUILD_SCHEDULED_EVENTS:1<<16};e.exports=Intents},48435:(e,t,i)=>{"use strict";const{setInterval:s}=i(92332);const{Collection:r}=i(38861);const{_cleanupSymbol:o}=i(98422);const l=i(13813);const{TypeError:c}=i(5229);class LimitedCollection extends r{constructor(e={},t){if(typeof e!=="object"||e===null){throw new c("INVALID_TYPE","options","object",true)}const{maxSize:i=Infinity,keepOverLimit:r=null,sweepInterval:o=0,sweepFilter:l=null}=e;if(typeof i!=="number"){throw new c("INVALID_TYPE","maxSize","number")}if(r!==null&&typeof r!=="function"){throw new c("INVALID_TYPE","keepOverLimit","function")}if(typeof o!=="number"){throw new c("INVALID_TYPE","sweepInterval","number")}if(l!==null&&typeof l!=="function"){throw new c("INVALID_TYPE","sweepFilter","function")}super(t);this.maxSize=i;this.keepOverLimit=r;this.sweepFilter=l;this.interval=o>0&&o!==Infinity&&l?s((()=>{const e=this.sweepFilter(this);if(e===null)return;if(typeof e!=="function")throw new c("SWEEP_FILTER_RETURN");this.sweep(e)}),o*1e3).unref():null}set(e,t){if(this.maxSize===0)return this;if(this.size>=this.maxSize&&!this.has(e)){for(const[e,t]of this.entries()){const i=this.keepOverLimit?.(t,e,this)??false;if(!i){this.delete(e);break}}}return super.set(e,t)}static filterByLifetime({lifetime:e=14400,getComparisonTimestamp:t=(e=>e?.createdTimestamp),excludeFromSweep:i=(()=>false)}={}){return l.filterByLifetime({lifetime:e,getComparisonTimestamp:t,excludeFromSweep:i})}[o](){return this.interval?()=>clearInterval(this.interval):null}static get[Symbol.species](){return r}}e.exports=LimitedCollection},62840:(e,t,i)=>{"use strict";const s=i(64973);class MessageFlags extends s{}MessageFlags.FLAGS={CROSSPOSTED:1<<0,IS_CROSSPOST:1<<1,SUPPRESS_EMBEDS:1<<2,SOURCE_MESSAGE_DELETED:1<<3,URGENT:1<<4,HAS_THREAD:1<<5,EPHEMERAL:1<<6,LOADING:1<<7};e.exports=MessageFlags},71008:(e,t,i)=>{"use strict";const s=i(97742);class Options extends(null){static createDefault(){return{waitGuildTimeout:15e3,shardCount:1,makeCache:this.cacheWithLimits(this.defaultMakeCacheSettings),messageCacheLifetime:0,messageSweepInterval:0,invalidRequestWarningInterval:0,partials:[],restWsBridgeTimeout:5e3,restRequestTimeout:15e3,restGlobalRateLimit:0,retryLimit:1,restTimeOffset:500,restSweepInterval:60,failIfNotExists:true,userAgentSuffix:[],presence:{},sweepers:{},ws:{large_threshold:50,compress:false,properties:{$os:s.platform,$browser:"discord.js",$device:"discord.js"},version:9},http:{agent:{},version:9,api:"https://discord.com/api",cdn:"https://cdn.discordapp.com",invite:"https://discord.gg",template:"https://discord.new",scheduledEvent:"https://discord.com/events"}}}static cacheWithLimits(e={}){const{Collection:t}=i(38861);const s=i(48435);return i=>{const r=e[i.name];if(r==null){return new t}if(typeof r==="number"){if(r===Infinity){return new t}return new s({maxSize:r})}const o=r.sweepFilter==null||r.sweepInterval==null||r.sweepInterval<=0||r.sweepInterval===Infinity;const l=r.maxSize==null||r.maxSize===Infinity;if(o&&l){return new t}return new s(r)}}static cacheEverything(){const{Collection:e}=i(38861);return()=>new e}static get defaultMakeCacheSettings(){return{MessageManager:200,ChannelManager:{sweepInterval:3600,sweepFilter:i(28270).archivedThreadSweepFilter()},GuildChannelManager:{sweepInterval:3600,sweepFilter:i(28270).archivedThreadSweepFilter()},ThreadManager:{sweepInterval:3600,sweepFilter:i(28270).archivedThreadSweepFilter()}}}}Options.defaultSweeperSettings={threads:{interval:3600,lifetime:14400}};e.exports=Options},97234:(e,t,i)=>{"use strict";const s=i(64973);class Permissions extends s{missing(e,t=true){return t&&this.has(this.constructor.FLAGS.ADMINISTRATOR)?[]:super.missing(e)}any(e,t=true){return t&&super.has(this.constructor.FLAGS.ADMINISTRATOR)||super.any(e)}has(e,t=true){return t&&super.has(this.constructor.FLAGS.ADMINISTRATOR)||super.has(e)}toArray(){return super.toArray(false)}}Permissions.FLAGS={CREATE_INSTANT_INVITE:1n<<0n,KICK_MEMBERS:1n<<1n,BAN_MEMBERS:1n<<2n,ADMINISTRATOR:1n<<3n,MANAGE_CHANNELS:1n<<4n,MANAGE_GUILD:1n<<5n,ADD_REACTIONS:1n<<6n,VIEW_AUDIT_LOG:1n<<7n,PRIORITY_SPEAKER:1n<<8n,STREAM:1n<<9n,VIEW_CHANNEL:1n<<10n,SEND_MESSAGES:1n<<11n,SEND_TTS_MESSAGES:1n<<12n,MANAGE_MESSAGES:1n<<13n,EMBED_LINKS:1n<<14n,ATTACH_FILES:1n<<15n,READ_MESSAGE_HISTORY:1n<<16n,MENTION_EVERYONE:1n<<17n,USE_EXTERNAL_EMOJIS:1n<<18n,VIEW_GUILD_INSIGHTS:1n<<19n,CONNECT:1n<<20n,SPEAK:1n<<21n,MUTE_MEMBERS:1n<<22n,DEAFEN_MEMBERS:1n<<23n,MOVE_MEMBERS:1n<<24n,USE_VAD:1n<<25n,CHANGE_NICKNAME:1n<<26n,MANAGE_NICKNAMES:1n<<27n,MANAGE_ROLES:1n<<28n,MANAGE_WEBHOOKS:1n<<29n,MANAGE_EMOJIS_AND_STICKERS:1n<<30n,USE_APPLICATION_COMMANDS:1n<<31n,REQUEST_TO_SPEAK:1n<<32n,MANAGE_EVENTS:1n<<33n,MANAGE_THREADS:1n<<34n,USE_PUBLIC_THREADS:1n<<35n,CREATE_PUBLIC_THREADS:1n<<35n,USE_PRIVATE_THREADS:1n<<36n,CREATE_PRIVATE_THREADS:1n<<36n,USE_EXTERNAL_STICKERS:1n<<37n,SEND_MESSAGES_IN_THREADS:1n<<38n,START_EMBEDDED_ACTIVITIES:1n<<39n,MODERATE_MEMBERS:1n<<40n};Permissions.ALL=Object.values(Permissions.FLAGS).reduce(((e,t)=>e|t),0n);Permissions.DEFAULT=BigInt(104324673);Permissions.STAGE_MODERATOR=Permissions.FLAGS.MANAGE_CHANNELS|Permissions.FLAGS.MUTE_MEMBERS|Permissions.FLAGS.MOVE_MEMBERS;Permissions.defaultBit=BigInt(0);e.exports=Permissions},40421:e=>{"use strict";const t=14200704e5;let i=BigInt(0);class SnowflakeUtil extends(null){static generate(e=Date.now()){if(e instanceof Date)e=e.getTime();if(typeof e!=="number"||isNaN(e)){throw new TypeError(`"timestamp" argument must be a number (received ${isNaN(e)?"NaN":typeof e})`)}if(i>=4095n)i=BigInt(0);return(BigInt(e-t)<<22n|1n<<17n|i++).toString()}static deconstruct(e){const i=BigInt(e);return{timestamp:Number(i>>22n)+t,get date(){return new Date(this.timestamp)},workerId:Number(i>>17n&0b11111n),processId:Number(i>>12n&0b11111n),increment:Number(i&0b111111111111n),binary:i.toString(2).padStart(64,"0")}}static timestampFrom(e){return Number(BigInt(e)>>22n)+t}static get EPOCH(){return t}}e.exports=SnowflakeUtil},13813:(e,t,i)=>{"use strict";const{setInterval:s}=i(92332);const{Events:r,ThreadChannelTypes:o,SweeperKeys:l}=i(98422);const{TypeError:c}=i(5229);class Sweepers{constructor(e,t){Object.defineProperty(this,"client",{value:e});this.options=t;this.intervals=Object.fromEntries(l.map((e=>[e,null])));for(const e of l){if(!(e in t))continue;this._validateProperties(e);const i={...this.options[e]};if(!("filter"in i)){switch(e){case"invites":i.filter=this.constructor.expiredInviteSweepFilter(i.lifetime);break;case"messages":i.filter=this.constructor.outdatedMessageSweepFilter(i.lifetime);break;case"threads":i.filter=this.constructor.archivedThreadSweepFilter(i.lifetime)}}this._initInterval(e,`sweep${e[0].toUpperCase()}${e.slice(1)}`,i)}}sweepApplicationCommands(e){const{guilds:t,items:i}=this._sweepGuildDirectProp("commands",e,{emit:false});const s=this.client.application?.commands.cache.sweep(e)??0;this.client.emit(r.CACHE_SWEEP,`Swept ${s} global application commands and ${i} guild commands in ${t} guilds.`);return i+s}sweepBans(e){return this._sweepGuildDirectProp("bans",e).items}sweepEmojis(e){return this._sweepGuildDirectProp("emojis",e).items}sweepInvites(e){return this._sweepGuildDirectProp("invites",e).items}sweepGuildMembers(e){return this._sweepGuildDirectProp("members",e,{outputName:"guild members"}).items}sweepMessages(e){if(typeof e!=="function"){throw new c("INVALID_TYPE","filter","function")}let t=0;let i=0;for(const s of this.client.channels.cache.values()){if(!s.isText())continue;t++;i+=s.messages.cache.sweep(e)}this.client.emit(r.CACHE_SWEEP,`Swept ${i} messages in ${t} text-based channels.`);return i}sweepPresences(e){return this._sweepGuildDirectProp("presences",e).items}sweepReactions(e){if(typeof e!=="function"){throw new c("INVALID_TYPE","filter","function")}let t=0;let i=0;let s=0;for(const r of this.client.channels.cache.values()){if(!r.isText())continue;t++;for(const t of r.messages.cache.values()){i++;s+=t.reactions.cache.sweep(e)}}this.client.emit(r.CACHE_SWEEP,`Swept ${s} reactions on ${i} messages in ${t} text-based channels.`);return s}sweepStageInstances(e){return this._sweepGuildDirectProp("stageInstances",e,{outputName:"stage instances"}).items}sweepThreadMembers(e){if(typeof e!=="function"){throw new c("INVALID_TYPE","filter","function")}let t=0;let i=0;for(const s of this.client.channels.cache.values()){if(!o.includes(s.type))continue;t++;i+=s.members.cache.sweep(e)}this.client.emit(r.CACHE_SWEEP,`Swept ${i} thread members in ${t} threads.`);return i}sweepThreads(e){if(typeof e!=="function"){throw new c("INVALID_TYPE","filter","function")}let t=0;for(const[i,s]of this.client.channels.cache.entries()){if(!o.includes(s.type))continue;if(e(s,i,this.client.channels.cache)){t++;this.client.channels._remove(i)}}this.client.emit(r.CACHE_SWEEP,`Swept ${t} threads.`);return t}sweepUsers(e){if(typeof e!=="function"){throw new c("INVALID_TYPE","filter","function")}const t=this.client.users.cache.sweep(e);this.client.emit(r.CACHE_SWEEP,`Swept ${t} users.`);return t}sweepVoiceStates(e){return this._sweepGuildDirectProp("voiceStates",e,{outputName:"voice states"}).items}destroy(){for(const e of l){if(this.intervals[e])clearInterval(this.intervals[e])}}static filterByLifetime({lifetime:e=14400,getComparisonTimestamp:t=(e=>e?.createdTimestamp),excludeFromSweep:i=(()=>false)}={}){if(typeof e!=="number"){throw new c("INVALID_TYPE","lifetime","number")}if(typeof t!=="function"){throw new c("INVALID_TYPE","getComparisonTimestamp","function")}if(typeof i!=="function"){throw new c("INVALID_TYPE","excludeFromSweep","function")}return()=>{if(e<=0)return null;const s=e*1e3;const r=Date.now();return(e,o,l)=>{if(i(e,o,l)){return false}const c=t(e,o,l);if(!c||typeof c!=="number")return false;return r-c>s}}}static archivedThreadSweepFilter(e=14400){return this.filterByLifetime({lifetime:e,getComparisonTimestamp:e=>e.archiveTimestamp,excludeFromSweep:e=>!e.archived})}static expiredInviteSweepFilter(e=14400){return this.filterByLifetime({lifetime:e,getComparisonTimestamp:e=>e.expiresTimestamp})}static outdatedMessageSweepFilter(e=3600){return this.filterByLifetime({lifetime:e,getComparisonTimestamp:e=>e.editedTimestamp??e.createdTimestamp})}_sweepGuildDirectProp(e,t,{emit:i=true,outputName:s}={}){if(typeof t!=="function"){throw new c("INVALID_TYPE","filter","function")}let o=0;let l=0;for(const i of this.client.guilds.cache.values()){const{cache:s}=i[e];o++;l+=s.sweep(t)}if(i){this.client.emit(r.CACHE_SWEEP,`Swept ${l} ${s??e} in ${o} guilds.`)}return{guilds:o,items:l}}_validateProperties(e){const t=this.options[e];if(typeof t!=="object"){throw new c("INVALID_TYPE",`sweepers.${e}`,"object",true)}if(typeof t.interval!=="number"){throw new c("INVALID_TYPE",`sweepers.${e}.interval`,"number")}if(["invites","messages","threads"].includes(e)&&!("filter"in t)){if(typeof t.lifetime!=="number"){throw new c("INVALID_TYPE",`sweepers.${e}.lifetime`,"number")}return}if(typeof t.filter!=="function"){throw new c("INVALID_TYPE",`sweepers.${e}.filter`,"function")}}_initInterval(e,t,i){if(i.interval<=0||i.interval===Infinity)return;this.intervals[e]=s((()=>{const e=i.filter();if(e===null)return;if(typeof e!=="function")throw new c("SWEEP_FILTER_RETURN");this[t](e)}),i.interval*1e3).unref()}}e.exports=Sweepers},25354:(e,t,i)=>{"use strict";const s=i(64973);class SystemChannelFlags extends s{}SystemChannelFlags.FLAGS={SUPPRESS_JOIN_NOTIFICATIONS:1<<0,SUPPRESS_PREMIUM_SUBSCRIPTIONS:1<<1,SUPPRESS_GUILD_REMINDER_NOTIFICATIONS:1<<2,SUPPRESS_JOIN_NOTIFICATION_REPLIES:1<<3};e.exports=SystemChannelFlags},1447:(e,t,i)=>{"use strict";const s=i(64973);class ThreadMemberFlags extends s{}ThreadMemberFlags.FLAGS={};e.exports=ThreadMemberFlags},90690:(e,t,i)=>{"use strict";const s=i(64973);class UserFlags extends s{}UserFlags.FLAGS={DISCORD_EMPLOYEE:1<<0,PARTNERED_SERVER_OWNER:1<<1,HYPESQUAD_EVENTS:1<<2,BUGHUNTER_LEVEL_1:1<<3,HOUSE_BRAVERY:1<<6,HOUSE_BRILLIANCE:1<<7,HOUSE_BALANCE:1<<8,EARLY_SUPPORTER:1<<9,TEAM_USER:1<<10,BUGHUNTER_LEVEL_2:1<<14,VERIFIED_BOT:1<<16,EARLY_VERIFIED_BOT_DEVELOPER:1<<17,DISCORD_CERTIFIED_MODERATOR:1<<18,BOT_HTTP_INTERACTIONS:1<<19};e.exports=UserFlags},28270:(e,t,i)=>{"use strict";const{parse:s}=i(49411);const r=i(97742);const{Collection:o}=i(38861);const l=i(80467);const{Colors:c,Endpoints:u}=i(98422);const m=i(71008);const{Error:g,RangeError:v,TypeError:_}=i(94436);const has=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);const isObject=e=>typeof e==="object"&&e!==null;let T=false;class Util extends(null){static flatten(e,...t){if(!isObject(e))return e;const i=Object.keys(e).filter((e=>!e.startsWith("_"))).map((e=>({[e]:true})));t=i.length?Object.assign(...i,...t):Object.assign({},...t);const s={};for(let[i,r]of Object.entries(t)){if(!r)continue;r=r===true?i:r;const t=e[i];const l=isObject(t);const c=l&&typeof t.valueOf==="function"?t.valueOf():null;if(t instanceof o)s[r]=Array.from(t.keys());else if(c instanceof o)s[r]=Array.from(c.keys());else if(Array.isArray(t))s[r]=t.map((e=>Util.flatten(e)));else if(typeof c!=="object")s[r]=c;else if(!l)s[r]=t}return s}static splitMessage(e,{maxLength:t=2e3,char:i="\n",prepend:s="",append:r=""}={}){e=Util.verifyString(e);if(e.length<=t)return[e];let o=[e];if(Array.isArray(i)){while(i.length>0&&o.some((e=>e.length>t))){const e=i.shift();if(e instanceof RegExp){o=o.flatMap((t=>t.match(e)))}else{o=o.flatMap((t=>t.split(e)))}}}else{o=e.split(i)}if(o.some((e=>e.length>t)))throw new v("SPLIT_MAX_LEN");const l=[];let c="";for(const e of o){if(c&&(c+i+e+r).length>t){l.push(c+r);c=s}c+=(c&&c!==s?i:"")+e}return l.concat(c).filter((e=>e))}static escapeMarkdown(e,{codeBlock:t=true,inlineCode:i=true,bold:s=true,italic:r=true,underline:o=true,strikethrough:l=true,spoiler:c=true,codeBlockContent:u=true,inlineCodeContent:m=true}={}){if(!u){return e.split("```").map(((e,t,u)=>{if(t%2&&t!==u.length-1)return e;return Util.escapeMarkdown(e,{inlineCode:i,bold:s,italic:r,underline:o,strikethrough:l,spoiler:c,inlineCodeContent:m})})).join(t?"\\`\\`\\`":"```")}if(!m){return e.split(/(?<=^|[^`])`(?=[^`]|$)/g).map(((e,i,u)=>{if(i%2&&i!==u.length-1)return e;return Util.escapeMarkdown(e,{codeBlock:t,bold:s,italic:r,underline:o,strikethrough:l,spoiler:c})})).join(i?"\\`":"`")}if(i)e=Util.escapeInlineCode(e);if(t)e=Util.escapeCodeBlock(e);if(r)e=Util.escapeItalic(e);if(s)e=Util.escapeBold(e);if(o)e=Util.escapeUnderline(e);if(l)e=Util.escapeStrikethrough(e);if(c)e=Util.escapeSpoiler(e);return e}static escapeCodeBlock(e){return e.replaceAll("```","\\`\\`\\`")}static escapeInlineCode(e){return e.replace(/(?<=^|[^`])`(?=[^`]|$)/g,"\\`")}static escapeItalic(e){let t=0;e=e.replace(/(?<=^|[^*])\*([^*]|\*\*|$)/g,((e,i)=>{if(i==="**")return++t%2?`\\*${i}`:`${i}\\*`;return`\\*${i}`}));t=0;return e.replace(/(?<=^|[^_])_([^_]|__|$)/g,((e,i)=>{if(i==="__")return++t%2?`\\_${i}`:`${i}\\_`;return`\\_${i}`}))}static escapeBold(e){let t=0;return e.replace(/\*\*(\*)?/g,((e,i)=>{if(i)return++t%2?`${i}\\*\\*`:`\\*\\*${i}`;return"\\*\\*"}))}static escapeUnderline(e){let t=0;return e.replace(/__(_)?/g,((e,i)=>{if(i)return++t%2?`${i}\\_\\_`:`\\_\\_${i}`;return"\\_\\_"}))}static escapeStrikethrough(e){return e.replaceAll("~~","\\~\\~")}static escapeSpoiler(e){return e.replaceAll("||","\\|\\|")}static async fetchRecommendedShards(e,{guildsPerShard:t=1e3,multipleOf:i=1}={}){if(!e)throw new g("TOKEN_MISSING");const s=m.createDefault();const r=await l(`${s.http.api}/v${s.http.version}${u.botGateway}`,{method:"GET",headers:{Authorization:`Bot ${e.replace(/^Bot\s*/i,"")}`}});if(!r.ok){if(r.status===401)throw new g("TOKEN_INVALID");throw r}const{shards:o}=await r.json();return Math.ceil(o*(1e3/t)/i)*i}static parseEmoji(e){if(e.includes("%"))e=decodeURIComponent(e);if(!e.includes(":"))return{animated:false,name:e,id:null};const t=e.match(/<?(?:(a):)?(\w{2,32}):(\d{17,19})?>?/);return t&&{animated:Boolean(t[1]),name:t[2],id:t[3]??null}}static resolvePartialEmoji(e){if(!e)return null;if(typeof e==="string")return/^\d{17,19}$/.test(e)?{id:e}:Util.parseEmoji(e);const{id:t,name:i,animated:s}=e;if(!t&&!i)return null;return{id:t,name:i,animated:Boolean(s)}}static cloneObject(e){return Object.assign(Object.create(e),e)}static mergeDefault(e,t){if(!t)return e;for(const i in e){if(!has(t,i)||t[i]===undefined){t[i]=e[i]}else if(t[i]===Object(t[i])){t[i]=Util.mergeDefault(e[i],t[i])}}return t}static makeError(e){const t=new Error(e.message);t.name=e.name;t.stack=e.stack;return t}static makePlainError(e){return{name:e.name,message:e.message,stack:e.stack}}static moveElementInArray(e,t,i,s=false){const r=e.indexOf(t);i=(s?r:0)+i;if(i>-1&&i<e.length){const t=e.splice(r,1)[0];e.splice(i,0,t)}return e.indexOf(t)}static verifyString(e,t=Error,i=`Expected a string, got ${e} instead.`,s=true){if(typeof e!=="string")throw new t(i);if(!s&&e.length===0)throw new t(i);return e}static resolveColor(e){if(typeof e==="string"){if(e==="RANDOM")return Math.floor(Math.random()*(16777215+1));if(e==="DEFAULT")return 0;e=c[e]??parseInt(e.replace("#",""),16)}else if(Array.isArray(e)){e=(e[0]<<16)+(e[1]<<8)+e[2]}if(e<0||e>16777215)throw new v("COLOR_RANGE");else if(Number.isNaN(e))throw new _("COLOR_CONVERT");return e}static discordSort(e){const t=e.first()instanceof x;return e.sorted(t?(e,t)=>e.rawPosition-t.rawPosition||Number(BigInt(e.id)-BigInt(t.id)):(e,t)=>e.rawPosition-t.rawPosition||Number(BigInt(t.id)-BigInt(e.id)))}static async setPosition(e,t,i,s,r,o){let l=[...s.values()];Util.moveElementInArray(l,e,t,i);l=l.map(((e,t)=>({id:e.id,position:t})));await r.patch({data:l,reason:o});return l}static basename(e,t){const i=s(e);return t&&i.ext.startsWith(t)?i.name:i.base.split("?")[0]}static removeMentions(e){if(!T){r.emitWarning("The Util.removeMentions method is deprecated. Use MessageOptions#allowedMentions instead.","DeprecationWarning");T=true}return Util._removeMentions(e)}static _removeMentions(e){return e.replaceAll("@","@​")}static cleanContent(e,t){e=e.replace(/<@!?[0-9]+>/g,(e=>{const i=e.replace(/<|!|>|@/g,"");if(t.type==="DM"){const s=t.client.users.cache.get(i);return s?Util._removeMentions(`@${s.username}`):e}const s=t.guild.members.cache.get(i);if(s){return Util._removeMentions(`@${s.displayName}`)}else{const s=t.client.users.cache.get(i);return s?Util._removeMentions(`@${s.username}`):e}})).replace(/<#[0-9]+>/g,(e=>{const i=t.client.channels.cache.get(e.replace(/<|#|>/g,""));return i?`#${i.name}`:e})).replace(/<@&[0-9]+>/g,(e=>{if(t.type==="DM")return e;const i=t.guild.roles.cache.get(e.replace(/<|@|>|&/g,""));return i?`@${i.name}`:e}));return e}static cleanCodeBlockContent(e){return e.replaceAll("```","`​``")}static archivedThreadSweepFilter(e=14400){const t=i(13813).archivedThreadSweepFilter(e);t.isDefault=true;return t}}e.exports=Util;const x=i(58354)},81205:(e,t,i)=>{var s=i(1223);var noop=function(){};var isRequest=function(e){return e.setHeader&&typeof e.abort==="function"};var isChildProcess=function(e){return e.stdio&&Array.isArray(e.stdio)&&e.stdio.length===3};var eos=function(e,t,i){if(typeof t==="function")return eos(e,null,t);if(!t)t={};i=s(i||noop);var r=e._writableState;var o=e._readableState;var l=t.readable||t.readable!==false&&e.readable;var c=t.writable||t.writable!==false&&e.writable;var u=false;var onlegacyfinish=function(){if(!e.writable)onfinish()};var onfinish=function(){c=false;if(!l)i.call(e)};var onend=function(){l=false;if(!c)i.call(e)};var onexit=function(t){i.call(e,t?new Error("exited with error code: "+t):null)};var onerror=function(t){i.call(e,t)};var onclose=function(){process.nextTick(onclosenexttick)};var onclosenexttick=function(){if(u)return;if(l&&!(o&&(o.ended&&!o.destroyed)))return i.call(e,new Error("premature close"));if(c&&!(r&&(r.ended&&!r.destroyed)))return i.call(e,new Error("premature close"))};var onrequest=function(){e.req.on("finish",onfinish)};if(isRequest(e)){e.on("complete",onfinish);e.on("abort",onclose);if(e.req)onrequest();else e.on("request",onrequest)}else if(c&&!r){e.on("end",onlegacyfinish);e.on("close",onlegacyfinish)}if(isChildProcess(e))e.on("exit",onexit);e.on("end",onend);e.on("finish",onfinish);if(t.error!==false)e.on("error",onerror);e.on("close",onclose);return function(){u=true;e.removeListener("complete",onfinish);e.removeListener("abort",onclose);e.removeListener("request",onrequest);if(e.req)e.req.removeListener("finish",onfinish);e.removeListener("end",onlegacyfinish);e.removeListener("close",onlegacyfinish);e.removeListener("finish",onfinish);e.removeListener("exit",onexit);e.removeListener("end",onend);e.removeListener("error",onerror);e.removeListener("close",onclose)}};e.exports=eos},55447:(e,t,i)=>{"use strict";const s=i(71017);const r=i(32081);const o=i(72746);const l=i(85515);const c=i(20502);const u=i(41554);const m=i(21766);const g=i(31330);const v=i(24931);const _=i(64689);const T=i(10166);const x=1e3*1e3*10;function handleArgs(e,t,i){let r;i=Object.assign({extendEnv:true,env:{}},i);if(i.extendEnv){i.env=Object.assign({},process.env,i.env)}if(i.__winShell===true){delete i.__winShell;r={command:e,args:t,options:i,file:e,original:{cmd:e,args:t}}}else{r=o._parse(e,t,i)}i=Object.assign({maxBuffer:x,buffer:true,stripEof:true,preferLocal:true,localDir:r.options.cwd||process.cwd(),encoding:"utf8",reject:true,cleanup:true},r.options);i.stdio=T(i);if(i.preferLocal){i.env=c.env(Object.assign({},i,{cwd:i.localDir}))}if(i.detached){i.cleanup=false}if(process.platform==="win32"&&s.basename(r.command)==="cmd.exe"){r.args.unshift("/q")}return{cmd:r.command,args:r.args,opts:i,parsed:r}}function handleInput(e,t){if(t===null||t===undefined){return}if(u(t)){t.pipe(e.stdin)}else{e.stdin.end(t)}}function handleOutput(e,t){if(t&&e.stripEof){t=l(t)}return t}function handleShell(e,t,i){let s="/bin/sh";let r=["-c",t];i=Object.assign({},i);if(process.platform==="win32"){i.__winShell=true;s=process.env.comspec||"cmd.exe";r=["/s","/c",`"${t}"`];i.windowsVerbatimArguments=true}if(i.shell){s=i.shell;delete i.shell}return e(s,r,i)}function getStream(e,t,{encoding:i,buffer:s,maxBuffer:r}){if(!e[t]){return null}let o;if(!s){o=new Promise(((i,s)=>{e[t].once("end",i).once("error",s)}))}else if(i){o=m(e[t],{encoding:i,maxBuffer:r})}else{o=m.buffer(e[t],{maxBuffer:r})}return o.catch((e=>{e.stream=t;e.message=`${t} ${e.message}`;throw e}))}function makeError(e,t){const{stdout:i,stderr:s}=e;let r=e.error;const{code:o,signal:l}=e;const{parsed:c,joinedCmd:u}=t;const m=t.timedOut||false;if(!r){let e="";if(Array.isArray(c.opts.stdio)){if(c.opts.stdio[2]!=="inherit"){e+=e.length>0?s:`\n${s}`}if(c.opts.stdio[1]!=="inherit"){e+=`\n${i}`}}else if(c.opts.stdio!=="inherit"){e=`\n${s}${i}`}r=new Error(`Command failed: ${u}${e}`);r.code=o<0?_(o):o}r.stdout=i;r.stderr=s;r.failed=true;r.signal=l||null;r.cmd=u;r.timedOut=m;return r}function joinCmd(e,t){let i=e;if(Array.isArray(t)&&t.length>0){i+=" "+t.join(" ")}return i}e.exports=(e,t,i)=>{const s=handleArgs(e,t,i);const{encoding:l,buffer:c,maxBuffer:u}=s.opts;const m=joinCmd(e,t);let _;try{_=r.spawn(s.cmd,s.args,s.opts)}catch(e){return Promise.reject(e)}let T;if(s.opts.cleanup){T=v((()=>{_.kill()}))}let x=null;let S=false;const cleanup=()=>{if(x){clearTimeout(x);x=null}if(T){T()}};if(s.opts.timeout>0){x=setTimeout((()=>{x=null;S=true;_.kill(s.opts.killSignal)}),s.opts.timeout)}const A=new Promise((e=>{_.on("exit",((t,i)=>{cleanup();e({code:t,signal:i})}));_.on("error",(t=>{cleanup();e({error:t})}));if(_.stdin){_.stdin.on("error",(t=>{cleanup();e({error:t})}))}}));function destroy(){if(_.stdout){_.stdout.destroy()}if(_.stderr){_.stderr.destroy()}}const handlePromise=()=>g(Promise.all([A,getStream(_,"stdout",{encoding:l,buffer:c,maxBuffer:u}),getStream(_,"stderr",{encoding:l,buffer:c,maxBuffer:u})]).then((e=>{const t=e[0];t.stdout=e[1];t.stderr=e[2];if(t.error||t.code!==0||t.signal!==null){const e=makeError(t,{joinedCmd:m,parsed:s,timedOut:S});e.killed=e.killed||_.killed;if(!s.opts.reject){return e}throw e}return{stdout:handleOutput(s.opts,t.stdout),stderr:handleOutput(s.opts,t.stderr),code:0,failed:false,killed:false,signal:null,cmd:m,timedOut:false}})),destroy);o._enoent.hookChildProcess(_,s.parsed);handleInput(_,s.opts.input);_.then=(e,t)=>handlePromise().then(e,t);_.catch=e=>handlePromise().catch(e);return _};e.exports.stdout=(...t)=>e.exports(...t).then((e=>e.stdout));e.exports.stderr=(...t)=>e.exports(...t).then((e=>e.stderr));e.exports.shell=(t,i)=>handleShell(e.exports,t,i);e.exports.sync=(e,t,i)=>{const s=handleArgs(e,t,i);const o=joinCmd(e,t);if(u(s.opts.input)){throw new TypeError("The `input` option cannot be a stream in sync mode")}const l=r.spawnSync(s.cmd,s.args,s.opts);l.code=l.status;if(l.error||l.status!==0||l.signal!==null){const e=makeError(l,{joinedCmd:o,parsed:s});if(!s.opts.reject){return e}throw e}return{stdout:handleOutput(s.opts,l.stdout),stderr:handleOutput(s.opts,l.stderr),code:0,failed:false,signal:null,cmd:o,timedOut:false}};e.exports.shellSync=(t,i)=>handleShell(e.exports.sync,t,i)},64689:(e,t,i)=>{"use strict";const s=i(73837);let r;if(typeof s.getSystemErrorName==="function"){e.exports=s.getSystemErrorName}else{try{r=process.binding("uv");if(typeof r.errname!=="function"){throw new TypeError("uv.errname is not a function")}}catch(e){console.error("execa/lib/errname: unable to establish process.binding('uv')",e);r=null}e.exports=e=>errname(r,e)}e.exports.__test__=errname;function errname(e,t){if(e){return e.errname(t)}if(!(t<0)){throw new Error("err >= 0")}return`Unknown system error ${t}`}},10166:e=>{"use strict";const t=["stdin","stdout","stderr"];const hasAlias=e=>t.some((t=>Boolean(e[t])));e.exports=e=>{if(!e){return null}if(e.stdio&&hasAlias(e)){throw new Error(`It's not possible to provide \`stdio\` in combination with one of ${t.map((e=>`\`${e}\``)).join(", ")}`)}if(typeof e.stdio==="string"){return e.stdio}const i=e.stdio||[];if(!Array.isArray(i)){throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`${typeof i}\``)}const s=[];const r=Math.max(i.length,t.length);for(let o=0;o<r;o++){let r=null;if(i[o]!==undefined){r=i[o]}else if(e[t[o]]!==undefined){r=e[t[o]]}s[o]=r}return s}},64334:(e,t,i)=>{var s=i(85443);var r=i(73837);var o=i(71017);var l=i(13685);var c=i(95687);var u=i(57310).parse;var m=i(57147);var g=i(12781).Stream;var v=i(43583);var _=i(14812);var T=i(17142);e.exports=FormData;r.inherits(FormData,s);function FormData(e){if(!(this instanceof FormData)){return new FormData(e)}this._overheadLength=0;this._valueLength=0;this._valuesToMeasure=[];s.call(this);e=e||{};for(var t in e){this[t]=e[t]}}FormData.LINE_BREAK="\r\n";FormData.DEFAULT_CONTENT_TYPE="application/octet-stream";FormData.prototype.append=function(e,t,i){i=i||{};if(typeof i=="string"){i={filename:i}}var o=s.prototype.append.bind(this);if(typeof t=="number"){t=""+t}if(r.isArray(t)){this._error(new Error("Arrays are not supported."));return}var l=this._multiPartHeader(e,t,i);var c=this._multiPartFooter();o(l);o(t);o(c);this._trackLength(l,t,i)};FormData.prototype._trackLength=function(e,t,i){var s=0;if(i.knownLength!=null){s+=+i.knownLength}else if(Buffer.isBuffer(t)){s=t.length}else if(typeof t==="string"){s=Buffer.byteLength(t)}this._valueLength+=s;this._overheadLength+=Buffer.byteLength(e)+FormData.LINE_BREAK.length;if(!t||!t.path&&!(t.readable&&t.hasOwnProperty("httpVersion"))&&!(t instanceof g)){return}if(!i.knownLength){this._valuesToMeasure.push(t)}};FormData.prototype._lengthRetriever=function(e,t){if(e.hasOwnProperty("fd")){if(e.end!=undefined&&e.end!=Infinity&&e.start!=undefined){t(null,e.end+1-(e.start?e.start:0))}else{m.stat(e.path,(function(i,s){var r;if(i){t(i);return}r=s.size-(e.start?e.start:0);t(null,r)}))}}else if(e.hasOwnProperty("httpVersion")){t(null,+e.headers["content-length"])}else if(e.hasOwnProperty("httpModule")){e.on("response",(function(i){e.pause();t(null,+i.headers["content-length"])}));e.resume()}else{t("Unknown stream")}};FormData.prototype._multiPartHeader=function(e,t,i){if(typeof i.header=="string"){return i.header}var s=this._getContentDisposition(t,i);var r=this._getContentType(t,i);var o="";var l={"Content-Disposition":["form-data",'name="'+e+'"'].concat(s||[]),"Content-Type":[].concat(r||[])};if(typeof i.header=="object"){T(l,i.header)}var c;for(var u in l){if(!l.hasOwnProperty(u))continue;c=l[u];if(c==null){continue}if(!Array.isArray(c)){c=[c]}if(c.length){o+=u+": "+c.join("; ")+FormData.LINE_BREAK}}return"--"+this.getBoundary()+FormData.LINE_BREAK+o+FormData.LINE_BREAK};FormData.prototype._getContentDisposition=function(e,t){var i,s;if(typeof t.filepath==="string"){i=o.normalize(t.filepath).replace(/\\/g,"/")}else if(t.filename||e.name||e.path){i=o.basename(t.filename||e.name||e.path)}else if(e.readable&&e.hasOwnProperty("httpVersion")){i=o.basename(e.client._httpMessage.path||"")}if(i){s='filename="'+i+'"'}return s};FormData.prototype._getContentType=function(e,t){var i=t.contentType;if(!i&&e.name){i=v.lookup(e.name)}if(!i&&e.path){i=v.lookup(e.path)}if(!i&&e.readable&&e.hasOwnProperty("httpVersion")){i=e.headers["content-type"]}if(!i&&(t.filepath||t.filename)){i=v.lookup(t.filepath||t.filename)}if(!i&&typeof e=="object"){i=FormData.DEFAULT_CONTENT_TYPE}return i};FormData.prototype._multiPartFooter=function(){return function(e){var t=FormData.LINE_BREAK;var i=this._streams.length===0;if(i){t+=this._lastBoundary()}e(t)}.bind(this)};FormData.prototype._lastBoundary=function(){return"--"+this.getBoundary()+"--"+FormData.LINE_BREAK};FormData.prototype.getHeaders=function(e){var t;var i={"content-type":"multipart/form-data; boundary="+this.getBoundary()};for(t in e){if(e.hasOwnProperty(t)){i[t.toLowerCase()]=e[t]}}return i};FormData.prototype.setBoundary=function(e){this._boundary=e};FormData.prototype.getBoundary=function(){if(!this._boundary){this._generateBoundary()}return this._boundary};FormData.prototype.getBuffer=function(){var e=new Buffer.alloc(0);var t=this.getBoundary();for(var i=0,s=this._streams.length;i<s;i++){if(typeof this._streams[i]!=="function"){if(Buffer.isBuffer(this._streams[i])){e=Buffer.concat([e,this._streams[i]])}else{e=Buffer.concat([e,Buffer.from(this._streams[i])])}if(typeof this._streams[i]!=="string"||this._streams[i].substring(2,t.length+2)!==t){e=Buffer.concat([e,Buffer.from(FormData.LINE_BREAK)])}}}return Buffer.concat([e,Buffer.from(this._lastBoundary())])};FormData.prototype._generateBoundary=function(){var e="--------------------------";for(var t=0;t<24;t++){e+=Math.floor(Math.random()*10).toString(16)}this._boundary=e};FormData.prototype.getLengthSync=function(){var e=this._overheadLength+this._valueLength;if(this._streams.length){e+=this._lastBoundary().length}if(!this.hasKnownLength()){this._error(new Error("Cannot calculate proper length in synchronous way."))}return e};FormData.prototype.hasKnownLength=function(){var e=true;if(this._valuesToMeasure.length){e=false}return e};FormData.prototype.getLength=function(e){var t=this._overheadLength+this._valueLength;if(this._streams.length){t+=this._lastBoundary().length}if(!this._valuesToMeasure.length){process.nextTick(e.bind(this,null,t));return}_.parallel(this._valuesToMeasure,this._lengthRetriever,(function(i,s){if(i){e(i);return}s.forEach((function(e){t+=e}));e(null,t)}))};FormData.prototype.submit=function(e,t){var i,s,r={method:"post"};if(typeof e=="string"){e=u(e);s=T({port:e.port,path:e.pathname,host:e.hostname,protocol:e.protocol},r)}else{s=T(e,r);if(!s.port){s.port=s.protocol=="https:"?443:80}}s.headers=this.getHeaders(e.headers);if(s.protocol=="https:"){i=c.request(s)}else{i=l.request(s)}this.getLength(function(e,s){if(e&&e!=="Unknown stream"){this._error(e);return}if(s){i.setHeader("Content-Length",s)}this.pipe(i);if(t){var r;var callback=function(e,s){i.removeListener("error",callback);i.removeListener("response",r);return t.call(this,e,s)};r=callback.bind(this,null);i.on("error",callback);i.on("response",r)}}.bind(this));return i};FormData.prototype._error=function(e){if(!this.error){this.error=e;this.pause();this.emit("error",e)}};FormData.prototype.toString=function(){return"[object FormData]"}},17142:e=>{e.exports=function(e,t){Object.keys(t).forEach((function(i){e[i]=e[i]||t[i]}));return e}},91585:(e,t,i)=>{"use strict";const{PassThrough:s}=i(12781);e.exports=e=>{e=Object.assign({},e);const{array:t}=e;let{encoding:i}=e;const r=i==="buffer";let o=false;if(t){o=!(i||r)}else{i=i||"utf8"}if(r){i=null}let l=0;const c=[];const u=new s({objectMode:o});if(i){u.setEncoding(i)}u.on("data",(e=>{c.push(e);if(o){l=c.length}else{l+=e.length}}));u.getBufferedValue=()=>{if(t){return c}return r?Buffer.concat(c,l):c.join("")};u.getBufferedLength=()=>l;return u}},21766:(e,t,i)=>{"use strict";const s=i(18341);const r=i(91585);class MaxBufferError extends Error{constructor(){super("maxBuffer exceeded");this.name="MaxBufferError"}}function getStream(e,t){if(!e){return Promise.reject(new Error("Expected a stream"))}t=Object.assign({maxBuffer:Infinity},t);const{maxBuffer:i}=t;let o;return new Promise(((l,c)=>{const rejectPromise=e=>{if(e){e.bufferedData=o.getBufferedValue()}c(e)};o=s(e,r(t),(e=>{if(e){rejectPromise(e);return}l()}));o.on("data",(()=>{if(o.getBufferedLength()>i){rejectPromise(new MaxBufferError)}}))})).then((()=>o.getBufferedValue()))}e.exports=getStream;e.exports.buffer=(e,t)=>getStream(e,Object.assign({},t,{encoding:"buffer"}));e.exports.array=(e,t)=>getStream(e,Object.assign({},t,{array:true}));e.exports.MaxBufferError=MaxBufferError},48840:e=>{"use strict";
    /*!
     * isobject <https://github.com/jonschlinkert/isobject>
     *
     * Copyright (c) 2014-2017, Jon Schlinkert.
     * Released under the MIT License.
     */function isObject(e){return e!=null&&typeof e==="object"&&Array.isArray(e)===false}
    /*!
     * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
     *
     * Copyright (c) 2014-2017, Jon Schlinkert.
     * Released under the MIT License.
     */function isObjectObject(e){return isObject(e)===true&&Object.prototype.toString.call(e)==="[object Object]"}function isPlainObject(e){var t,i;if(isObjectObject(e)===false)return false;t=e.constructor;if(typeof t!=="function")return false;i=t.prototype;if(isObjectObject(i)===false)return false;if(i.hasOwnProperty("isPrototypeOf")===false){return false}return true}e.exports=isPlainObject},41554:e=>{"use strict";var t=e.exports=function(e){return e!==null&&typeof e==="object"&&typeof e.pipe==="function"};t.writable=function(e){return t(e)&&e.writable!==false&&typeof e._write==="function"&&typeof e._writableState==="object"};t.readable=function(e){return t(e)&&e.readable!==false&&typeof e._read==="function"&&typeof e._readableState==="object"};t.duplex=function(e){return t.writable(e)&&t.readable(e)};t.transform=function(e){return t.duplex(e)&&typeof e._transform==="function"&&typeof e._transformState==="object"}},97126:(e,t,i)=>{var s=i(57147);var r;if(process.platform==="win32"||global.TESTING_WINDOWS){r=i(42001)}else{r=i(9728)}e.exports=isexe;isexe.sync=sync;function isexe(e,t,i){if(typeof t==="function"){i=t;t={}}if(!i){if(typeof Promise!=="function"){throw new TypeError("callback not provided")}return new Promise((function(i,s){isexe(e,t||{},(function(e,t){if(e){s(e)}else{i(t)}}))}))}r(e,t||{},(function(e,s){if(e){if(e.code==="EACCES"||t&&t.ignoreErrors){e=null;s=false}}i(e,s)}))}function sync(e,t){try{return r.sync(e,t||{})}catch(e){if(t&&t.ignoreErrors||e.code==="EACCES"){return false}else{throw e}}}},9728:(e,t,i)=>{e.exports=isexe;isexe.sync=sync;var s=i(57147);function isexe(e,t,i){s.stat(e,(function(e,s){i(e,e?false:checkStat(s,t))}))}function sync(e,t){return checkStat(s.statSync(e),t)}function checkStat(e,t){return e.isFile()&&checkMode(e,t)}function checkMode(e,t){var i=e.mode;var s=e.uid;var r=e.gid;var o=t.uid!==undefined?t.uid:process.getuid&&process.getuid();var l=t.gid!==undefined?t.gid:process.getgid&&process.getgid();var c=parseInt("100",8);var u=parseInt("010",8);var m=parseInt("001",8);var g=c|u;var v=i&m||i&u&&r===l||i&c&&s===o||i&g&&o===0;return v}},42001:(e,t,i)=>{e.exports=isexe;isexe.sync=sync;var s=i(57147);function checkPathExt(e,t){var i=t.pathExt!==undefined?t.pathExt:process.env.PATHEXT;if(!i){return true}i=i.split(";");if(i.indexOf("")!==-1){return true}for(var s=0;s<i.length;s++){var r=i[s].toLowerCase();if(r&&e.substr(-r.length).toLowerCase()===r){return true}}return false}function checkStat(e,t,i){if(!e.isSymbolicLink()&&!e.isFile()){return false}return checkPathExt(t,i)}function isexe(e,t,i){s.stat(e,(function(s,r){i(s,s?false:checkStat(r,e,t))}))}function sync(e,t){return checkStat(s.statSync(e),e,t)}},99197:e=>{var t="Expected a function";var i="__lodash_hash_undefined__";var s=1/0;var r="[object Function]",o="[object GeneratorFunction]",l="[object Symbol]";var c=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,u=/^\w*$/,m=/^\./,g=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;var v=/[\\^$.*+?()[\]{}|]/g;var _=/\\(\\)?/g;var T=/^\[object .+?Constructor\]$/;var x=typeof global=="object"&&global&&global.Object===Object&&global;var S=typeof self=="object"&&self&&self.Object===Object&&self;var A=x||S||Function("return this")();function getValue(e,t){return e==null?undefined:e[t]}function isHostObject(e){var t=false;if(e!=null&&typeof e.toString!="function"){try{t=!!(e+"")}catch(e){}}return t}var I=Array.prototype,N=Function.prototype,O=Object.prototype;var R=A["__core-js_shared__"];var k=function(){var e=/[^.]+$/.exec(R&&R.keys&&R.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();var P=N.toString;var M=O.hasOwnProperty;var q=O.toString;var G=RegExp("^"+P.call(M).replace(v,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");var j=A.Symbol,B=I.splice;var H=getNative(A,"Map"),$=getNative(Object,"create");var z=j?j.prototype:undefined,W=z?z.toString:undefined;function Hash(e){var t=-1,i=e?e.length:0;this.clear();while(++t<i){var s=e[t];this.set(s[0],s[1])}}function hashClear(){this.__data__=$?$(null):{}}function hashDelete(e){return this.has(e)&&delete this.__data__[e]}function hashGet(e){var t=this.__data__;if($){var s=t[e];return s===i?undefined:s}return M.call(t,e)?t[e]:undefined}function hashHas(e){var t=this.__data__;return $?t[e]!==undefined:M.call(t,e)}function hashSet(e,t){var s=this.__data__;s[e]=$&&t===undefined?i:t;return this}Hash.prototype.clear=hashClear;Hash.prototype["delete"]=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;function ListCache(e){var t=-1,i=e?e.length:0;this.clear();while(++t<i){var s=e[t];this.set(s[0],s[1])}}function listCacheClear(){this.__data__=[]}function listCacheDelete(e){var t=this.__data__,i=assocIndexOf(t,e);if(i<0){return false}var s=t.length-1;if(i==s){t.pop()}else{B.call(t,i,1)}return true}function listCacheGet(e){var t=this.__data__,i=assocIndexOf(t,e);return i<0?undefined:t[i][1]}function listCacheHas(e){return assocIndexOf(this.__data__,e)>-1}function listCacheSet(e,t){var i=this.__data__,s=assocIndexOf(i,e);if(s<0){i.push([e,t])}else{i[s][1]=t}return this}ListCache.prototype.clear=listCacheClear;ListCache.prototype["delete"]=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;function MapCache(e){var t=-1,i=e?e.length:0;this.clear();while(++t<i){var s=e[t];this.set(s[0],s[1])}}function mapCacheClear(){this.__data__={hash:new Hash,map:new(H||ListCache),string:new Hash}}function mapCacheDelete(e){return getMapData(this,e)["delete"](e)}function mapCacheGet(e){return getMapData(this,e).get(e)}function mapCacheHas(e){return getMapData(this,e).has(e)}function mapCacheSet(e,t){getMapData(this,e).set(e,t);return this}MapCache.prototype.clear=mapCacheClear;MapCache.prototype["delete"]=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;function assocIndexOf(e,t){var i=e.length;while(i--){if(eq(e[i][0],t)){return i}}return-1}function baseGet(e,t){t=isKey(t,e)?[t]:castPath(t);var i=0,s=t.length;while(e!=null&&i<s){e=e[toKey(t[i++])]}return i&&i==s?e:undefined}function baseIsNative(e){if(!isObject(e)||isMasked(e)){return false}var t=isFunction(e)||isHostObject(e)?G:T;return t.test(toSource(e))}function baseToString(e){if(typeof e=="string"){return e}if(isSymbol(e)){return W?W.call(e):""}var t=e+"";return t=="0"&&1/e==-s?"-0":t}function castPath(e){return J(e)?e:Y(e)}function getMapData(e,t){var i=e.__data__;return isKeyable(t)?i[typeof t=="string"?"string":"hash"]:i.map}function getNative(e,t){var i=getValue(e,t);return baseIsNative(i)?i:undefined}function isKey(e,t){if(J(e)){return false}var i=typeof e;if(i=="number"||i=="symbol"||i=="boolean"||e==null||isSymbol(e)){return true}return u.test(e)||!c.test(e)||t!=null&&e in Object(t)}function isKeyable(e){var t=typeof e;return t=="string"||t=="number"||t=="symbol"||t=="boolean"?e!=="__proto__":e===null}function isMasked(e){return!!k&&k in e}var Y=memoize((function(e){e=toString(e);var t=[];if(m.test(e)){t.push("")}e.replace(g,(function(e,i,s,r){t.push(s?r.replace(_,"$1"):i||e)}));return t}));function toKey(e){if(typeof e=="string"||isSymbol(e)){return e}var t=e+"";return t=="0"&&1/e==-s?"-0":t}function toSource(e){if(e!=null){try{return P.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function memoize(e,i){if(typeof e!="function"||i&&typeof i!="function"){throw new TypeError(t)}var memoized=function(){var t=arguments,s=i?i.apply(this,t):t[0],r=memoized.cache;if(r.has(s)){return r.get(s)}var o=e.apply(this,t);memoized.cache=r.set(s,o);return o};memoized.cache=new(memoize.Cache||MapCache);return memoized}memoize.Cache=MapCache;function eq(e,t){return e===t||e!==e&&t!==t}var J=Array.isArray;function isFunction(e){var t=isObject(e)?q.call(e):"";return t==r||t==o}function isObject(e){var t=typeof e;return!!e&&(t=="object"||t=="function")}function isObjectLike(e){return!!e&&typeof e=="object"}function isSymbol(e){return typeof e=="symbol"||isObjectLike(e)&&q.call(e)==l}function toString(e){return e==null?"":baseToString(e)}function get(e,t,i){var s=e==null?undefined:baseGet(e,t);return s===undefined?i:s}e.exports=get},51552:e=>{var t="Expected a function";var i="__lodash_hash_undefined__";var s=1/0,r=9007199254740991;var o="[object Function]",l="[object GeneratorFunction]",c="[object Symbol]";var u=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,m=/^\w*$/,g=/^\./,v=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;var _=/[\\^$.*+?()[\]{}|]/g;var T=/\\(\\)?/g;var x=/^\[object .+?Constructor\]$/;var S=/^(?:0|[1-9]\d*)$/;var A=typeof global=="object"&&global&&global.Object===Object&&global;var I=typeof self=="object"&&self&&self.Object===Object&&self;var N=A||I||Function("return this")();function getValue(e,t){return e==null?undefined:e[t]}function isHostObject(e){var t=false;if(e!=null&&typeof e.toString!="function"){try{t=!!(e+"")}catch(e){}}return t}var O=Array.prototype,R=Function.prototype,k=Object.prototype;var P=N["__core-js_shared__"];var M=function(){var e=/[^.]+$/.exec(P&&P.keys&&P.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();var q=R.toString;var G=k.hasOwnProperty;var j=k.toString;var B=RegExp("^"+q.call(G).replace(_,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");var H=N.Symbol,$=O.splice;var z=getNative(N,"Map"),W=getNative(Object,"create");var Y=H?H.prototype:undefined,J=Y?Y.toString:undefined;function Hash(e){var t=-1,i=e?e.length:0;this.clear();while(++t<i){var s=e[t];this.set(s[0],s[1])}}function hashClear(){this.__data__=W?W(null):{}}function hashDelete(e){return this.has(e)&&delete this.__data__[e]}function hashGet(e){var t=this.__data__;if(W){var s=t[e];return s===i?undefined:s}return G.call(t,e)?t[e]:undefined}function hashHas(e){var t=this.__data__;return W?t[e]!==undefined:G.call(t,e)}function hashSet(e,t){var s=this.__data__;s[e]=W&&t===undefined?i:t;return this}Hash.prototype.clear=hashClear;Hash.prototype["delete"]=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;function ListCache(e){var t=-1,i=e?e.length:0;this.clear();while(++t<i){var s=e[t];this.set(s[0],s[1])}}function listCacheClear(){this.__data__=[]}function listCacheDelete(e){var t=this.__data__,i=assocIndexOf(t,e);if(i<0){return false}var s=t.length-1;if(i==s){t.pop()}else{$.call(t,i,1)}return true}function listCacheGet(e){var t=this.__data__,i=assocIndexOf(t,e);return i<0?undefined:t[i][1]}function listCacheHas(e){return assocIndexOf(this.__data__,e)>-1}function listCacheSet(e,t){var i=this.__data__,s=assocIndexOf(i,e);if(s<0){i.push([e,t])}else{i[s][1]=t}return this}ListCache.prototype.clear=listCacheClear;ListCache.prototype["delete"]=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;function MapCache(e){var t=-1,i=e?e.length:0;this.clear();while(++t<i){var s=e[t];this.set(s[0],s[1])}}function mapCacheClear(){this.__data__={hash:new Hash,map:new(z||ListCache),string:new Hash}}function mapCacheDelete(e){return getMapData(this,e)["delete"](e)}function mapCacheGet(e){return getMapData(this,e).get(e)}function mapCacheHas(e){return getMapData(this,e).has(e)}function mapCacheSet(e,t){getMapData(this,e).set(e,t);return this}MapCache.prototype.clear=mapCacheClear;MapCache.prototype["delete"]=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;function assignValue(e,t,i){var s=e[t];if(!(G.call(e,t)&&eq(s,i))||i===undefined&&!(t in e)){e[t]=i}}function assocIndexOf(e,t){var i=e.length;while(i--){if(eq(e[i][0],t)){return i}}return-1}function baseIsNative(e){if(!isObject(e)||isMasked(e)){return false}var t=isFunction(e)||isHostObject(e)?B:x;return t.test(toSource(e))}function baseSet(e,t,i,s){if(!isObject(e)){return e}t=isKey(t,e)?[t]:castPath(t);var r=-1,o=t.length,l=o-1,c=e;while(c!=null&&++r<o){var u=toKey(t[r]),m=i;if(r!=l){var g=c[u];m=s?s(g,u,c):undefined;if(m===undefined){m=isObject(g)?g:isIndex(t[r+1])?[]:{}}}assignValue(c,u,m);c=c[u]}return e}function baseToString(e){if(typeof e=="string"){return e}if(isSymbol(e)){return J?J.call(e):""}var t=e+"";return t=="0"&&1/e==-s?"-0":t}function castPath(e){return Q(e)?e:X(e)}function getMapData(e,t){var i=e.__data__;return isKeyable(t)?i[typeof t=="string"?"string":"hash"]:i.map}function getNative(e,t){var i=getValue(e,t);return baseIsNative(i)?i:undefined}function isIndex(e,t){t=t==null?r:t;return!!t&&(typeof e=="number"||S.test(e))&&(e>-1&&e%1==0&&e<t)}function isKey(e,t){if(Q(e)){return false}var i=typeof e;if(i=="number"||i=="symbol"||i=="boolean"||e==null||isSymbol(e)){return true}return m.test(e)||!u.test(e)||t!=null&&e in Object(t)}function isKeyable(e){var t=typeof e;return t=="string"||t=="number"||t=="symbol"||t=="boolean"?e!=="__proto__":e===null}function isMasked(e){return!!M&&M in e}var X=memoize((function(e){e=toString(e);var t=[];if(g.test(e)){t.push("")}e.replace(v,(function(e,i,s,r){t.push(s?r.replace(T,"$1"):i||e)}));return t}));function toKey(e){if(typeof e=="string"||isSymbol(e)){return e}var t=e+"";return t=="0"&&1/e==-s?"-0":t}function toSource(e){if(e!=null){try{return q.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function memoize(e,i){if(typeof e!="function"||i&&typeof i!="function"){throw new TypeError(t)}var memoized=function(){var t=arguments,s=i?i.apply(this,t):t[0],r=memoized.cache;if(r.has(s)){return r.get(s)}var o=e.apply(this,t);memoized.cache=r.set(s,o);return o};memoized.cache=new(memoize.Cache||MapCache);return memoized}memoize.Cache=MapCache;function eq(e,t){return e===t||e!==e&&t!==t}var Q=Array.isArray;function isFunction(e){var t=isObject(e)?j.call(e):"";return t==o||t==l}function isObject(e){var t=typeof e;return!!e&&(t=="object"||t=="function")}function isObjectLike(e){return!!e&&typeof e=="object"}function isSymbol(e){return typeof e=="symbol"||isObjectLike(e)&&j.call(e)==c}function toString(e){return e==null?"":baseToString(e)}function set(e,t,i){return e==null?e:baseSet(e,t,i)}e.exports=set},78216:e=>{var t=200;var i="__lodash_hash_undefined__";var s=1/0;var r="[object Function]",o="[object GeneratorFunction]";var l=/[\\^$.*+?()[\]{}|]/g;var c=/^\[object .+?Constructor\]$/;var u=typeof global=="object"&&global&&global.Object===Object&&global;var m=typeof self=="object"&&self&&self.Object===Object&&self;var g=u||m||Function("return this")();function arrayIncludes(e,t){var i=e?e.length:0;return!!i&&baseIndexOf(e,t,0)>-1}function arrayIncludesWith(e,t,i){var s=-1,r=e?e.length:0;while(++s<r){if(i(t,e[s])){return true}}return false}function baseFindIndex(e,t,i,s){var r=e.length,o=i+(s?1:-1);while(s?o--:++o<r){if(t(e[o],o,e)){return o}}return-1}function baseIndexOf(e,t,i){if(t!==t){return baseFindIndex(e,baseIsNaN,i)}var s=i-1,r=e.length;while(++s<r){if(e[s]===t){return s}}return-1}function baseIsNaN(e){return e!==e}function cacheHas(e,t){return e.has(t)}function getValue(e,t){return e==null?undefined:e[t]}function isHostObject(e){var t=false;if(e!=null&&typeof e.toString!="function"){try{t=!!(e+"")}catch(e){}}return t}function setToArray(e){var t=-1,i=Array(e.size);e.forEach((function(e){i[++t]=e}));return i}var v=Array.prototype,_=Function.prototype,T=Object.prototype;var x=g["__core-js_shared__"];var S=function(){var e=/[^.]+$/.exec(x&&x.keys&&x.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();var A=_.toString;var I=T.hasOwnProperty;var N=T.toString;var O=RegExp("^"+A.call(I).replace(l,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");var R=v.splice;var k=getNative(g,"Map"),P=getNative(g,"Set"),M=getNative(Object,"create");function Hash(e){var t=-1,i=e?e.length:0;this.clear();while(++t<i){var s=e[t];this.set(s[0],s[1])}}function hashClear(){this.__data__=M?M(null):{}}function hashDelete(e){return this.has(e)&&delete this.__data__[e]}function hashGet(e){var t=this.__data__;if(M){var s=t[e];return s===i?undefined:s}return I.call(t,e)?t[e]:undefined}function hashHas(e){var t=this.__data__;return M?t[e]!==undefined:I.call(t,e)}function hashSet(e,t){var s=this.__data__;s[e]=M&&t===undefined?i:t;return this}Hash.prototype.clear=hashClear;Hash.prototype["delete"]=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;function ListCache(e){var t=-1,i=e?e.length:0;this.clear();while(++t<i){var s=e[t];this.set(s[0],s[1])}}function listCacheClear(){this.__data__=[]}function listCacheDelete(e){var t=this.__data__,i=assocIndexOf(t,e);if(i<0){return false}var s=t.length-1;if(i==s){t.pop()}else{R.call(t,i,1)}return true}function listCacheGet(e){var t=this.__data__,i=assocIndexOf(t,e);return i<0?undefined:t[i][1]}function listCacheHas(e){return assocIndexOf(this.__data__,e)>-1}function listCacheSet(e,t){var i=this.__data__,s=assocIndexOf(i,e);if(s<0){i.push([e,t])}else{i[s][1]=t}return this}ListCache.prototype.clear=listCacheClear;ListCache.prototype["delete"]=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;function MapCache(e){var t=-1,i=e?e.length:0;this.clear();while(++t<i){var s=e[t];this.set(s[0],s[1])}}function mapCacheClear(){this.__data__={hash:new Hash,map:new(k||ListCache),string:new Hash}}function mapCacheDelete(e){return getMapData(this,e)["delete"](e)}function mapCacheGet(e){return getMapData(this,e).get(e)}function mapCacheHas(e){return getMapData(this,e).has(e)}function mapCacheSet(e,t){getMapData(this,e).set(e,t);return this}MapCache.prototype.clear=mapCacheClear;MapCache.prototype["delete"]=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;function SetCache(e){var t=-1,i=e?e.length:0;this.__data__=new MapCache;while(++t<i){this.add(e[t])}}function setCacheAdd(e){this.__data__.set(e,i);return this}function setCacheHas(e){return this.__data__.has(e)}SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;function assocIndexOf(e,t){var i=e.length;while(i--){if(eq(e[i][0],t)){return i}}return-1}function baseIsNative(e){if(!isObject(e)||isMasked(e)){return false}var t=isFunction(e)||isHostObject(e)?O:c;return t.test(toSource(e))}function baseUniq(e,i,s){var r=-1,o=arrayIncludes,l=e.length,c=true,u=[],m=u;if(s){c=false;o=arrayIncludesWith}else if(l>=t){var g=i?null:q(e);if(g){return setToArray(g)}c=false;o=cacheHas;m=new SetCache}else{m=i?[]:u}e:while(++r<l){var v=e[r],_=i?i(v):v;v=s||v!==0?v:0;if(c&&_===_){var T=m.length;while(T--){if(m[T]===_){continue e}}if(i){m.push(_)}u.push(v)}else if(!o(m,_,s)){if(m!==u){m.push(_)}u.push(v)}}return u}var q=!(P&&1/setToArray(new P([,-0]))[1]==s)?noop:function(e){return new P(e)};function getMapData(e,t){var i=e.__data__;return isKeyable(t)?i[typeof t=="string"?"string":"hash"]:i.map}function getNative(e,t){var i=getValue(e,t);return baseIsNative(i)?i:undefined}function isKeyable(e){var t=typeof e;return t=="string"||t=="number"||t=="symbol"||t=="boolean"?e!=="__proto__":e===null}function isMasked(e){return!!S&&S in e}function toSource(e){if(e!=null){try{return A.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function uniq(e){return e&&e.length?baseUniq(e):[]}function eq(e,t){return e===t||e!==e&&t!==t}function isFunction(e){var t=isObject(e)?N.call(e):"";return t==r||t==o}function isObject(e){var t=typeof e;return!!e&&(t=="object"||t=="function")}function noop(){}e.exports=uniq},7493:(e,t,i)=>{"use strict";const s=i(22037);const r=new Map([[19,"Catalina"],[18,"Mojave"],[17,"High Sierra"],[16,"Sierra"],[15,"El Capitan"],[14,"Yosemite"],[13,"Mavericks"],[12,"Mountain Lion"],[11,"Lion"],[10,"Snow Leopard"],[9,"Leopard"],[8,"Tiger"],[7,"Panther"],[6,"Jaguar"],[5,"Puma"]]);const macosRelease=e=>{e=Number((e||s.release()).split(".")[0]);return{name:r.get(e),version:"10."+(e-4)}};e.exports=macosRelease;e.exports["default"]=macosRelease},47426:(e,t,i)=>{
    /*!
     * mime-db
     * Copyright(c) 2014 Jonathan Ong
     * Copyright(c) 2015-2022 Douglas Christopher Wilson
     * MIT Licensed
     */
    e.exports=i(53765)},43583:(e,t,i)=>{"use strict";
    /*!
     * mime-types
     * Copyright(c) 2014 Jonathan Ong
     * Copyright(c) 2015 Douglas Christopher Wilson
     * MIT Licensed
     */var s=i(47426);var r=i(71017).extname;var o=/^\s*([^;\s]*)(?:;|\s|$)/;var l=/^text\//i;t.charset=charset;t.charsets={lookup:charset};t.contentType=contentType;t.extension=extension;t.extensions=Object.create(null);t.lookup=lookup;t.types=Object.create(null);populateMaps(t.extensions,t.types);function charset(e){if(!e||typeof e!=="string"){return false}var t=o.exec(e);var i=t&&s[t[1].toLowerCase()];if(i&&i.charset){return i.charset}if(t&&l.test(t[1])){return"UTF-8"}return false}function contentType(e){if(!e||typeof e!=="string"){return false}var i=e.indexOf("/")===-1?t.lookup(e):e;if(!i){return false}if(i.indexOf("charset")===-1){var s=t.charset(i);if(s)i+="; charset="+s.toLowerCase()}return i}function extension(e){if(!e||typeof e!=="string"){return false}var i=o.exec(e);var s=i&&t.extensions[i[1].toLowerCase()];if(!s||!s.length){return false}return s[0]}function lookup(e){if(!e||typeof e!=="string"){return false}var i=r("x."+e).toLowerCase().substr(1);if(!i){return false}return t.types[i]||false}function populateMaps(e,t){var i=["nginx","apache",undefined,"iana"];Object.keys(s).forEach((function forEachMimeType(r){var o=s[r];var l=o.extensions;if(!l||!l.length){return}e[r]=l;for(var c=0;c<l.length;c++){var u=l[c];if(t[u]){var m=i.indexOf(s[t[u]].source);var g=i.indexOf(o.source);if(t[u]!=="application/octet-stream"&&(m>g||m===g&&t[u].substr(0,12)==="application/")){continue}}t[u]=r}}))}},38560:e=>{"use strict";e.exports=function(e){try{return e()}catch(e){}}},80467:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var s=_interopDefault(i(12781));var r=_interopDefault(i(13685));var o=_interopDefault(i(57310));var l=_interopDefault(i(28665));var c=_interopDefault(i(95687));var u=_interopDefault(i(59796));const m=s.Readable;const g=Symbol("buffer");const v=Symbol("type");class Blob{constructor(){this[v]="";const e=arguments[0];const t=arguments[1];const i=[];let s=0;if(e){const t=e;const r=Number(t.length);for(let e=0;e<r;e++){const r=t[e];let o;if(r instanceof Buffer){o=r}else if(ArrayBuffer.isView(r)){o=Buffer.from(r.buffer,r.byteOffset,r.byteLength)}else if(r instanceof ArrayBuffer){o=Buffer.from(r)}else if(r instanceof Blob){o=r[g]}else{o=Buffer.from(typeof r==="string"?r:String(r))}s+=o.length;i.push(o)}}this[g]=Buffer.concat(i);let r=t&&t.type!==undefined&&String(t.type).toLowerCase();if(r&&!/[^\u0020-\u007E]/.test(r)){this[v]=r}}get size(){return this[g].length}get type(){return this[v]}text(){return Promise.resolve(this[g].toString())}arrayBuffer(){const e=this[g];const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new m;e._read=function(){};e.push(this[g]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const t=arguments[0];const i=arguments[1];let s,r;if(t===undefined){s=0}else if(t<0){s=Math.max(e+t,0)}else{s=Math.min(t,e)}if(i===undefined){r=e}else if(i<0){r=Math.max(e+i,0)}else{r=Math.min(i,e)}const o=Math.max(r-s,0);const l=this[g];const c=l.slice(s,s+o);const u=new Blob([],{type:arguments[2]});u[g]=c;return u}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,t,i){Error.call(this,e);this.message=e;this.type=t;if(i){this.code=this.errno=i.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let _;try{_=i(22877).convert}catch(e){}const T=Symbol("Body internals");const x=s.PassThrough;function Body(e){var t=this;var i=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},r=i.size;let o=r===undefined?0:r;var l=i.timeout;let c=l===undefined?0:l;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e));else if(Buffer.isBuffer(e));else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof s);else{e=Buffer.from(String(e))}this[T]={body:e,disturbed:false,error:null};this.size=o;this.timeout=c;if(e instanceof s){e.on("error",(function(e){const i=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[T].error=i}))}}Body.prototype={get body(){return this[T].body},get bodyUsed(){return this[T].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(t){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[g]:t})}))},json(){var e=this;return consumeBody.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(e){return e.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then((function(t){return convertBody(t,e.headers)}))}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const t of Object.getOwnPropertyNames(Body.prototype)){if(!(t in e)){const i=Object.getOwnPropertyDescriptor(Body.prototype,t);Object.defineProperty(e,t,i)}}};function consumeBody(){var e=this;if(this[T].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[T].disturbed=true;if(this[T].error){return Body.Promise.reject(this[T].error)}let t=this.body;if(t===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(t)){t=t.stream()}if(Buffer.isBuffer(t)){return Body.Promise.resolve(t)}if(!(t instanceof s)){return Body.Promise.resolve(Buffer.alloc(0))}let i=[];let r=0;let o=false;return new Body.Promise((function(s,l){let c;if(e.timeout){c=setTimeout((function(){o=true;l(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)}t.on("error",(function(t){if(t.name==="AbortError"){o=true;l(t)}else{l(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}}));t.on("data",(function(t){if(o||t===null){return}if(e.size&&r+t.length>e.size){o=true;l(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}r+=t.length;i.push(t)}));t.on("end",(function(){if(o){return}clearTimeout(c);try{s(Buffer.concat(i,r))}catch(t){l(new FetchError(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}))}))}function convertBody(e,t){if(typeof _!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const i=t.get("content-type");let s="utf-8";let r,o;if(i){r=/charset=([^;]*)/i.exec(i)}o=e.slice(0,1024).toString();if(!r&&o){r=/<meta.+?charset=(['"])(.+?)\1/i.exec(o)}if(!r&&o){r=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(o);if(!r){r=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(o);if(r){r.pop()}}if(r){r=/charset=(.*)/i.exec(r.pop())}}if(!r&&o){r=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(o)}if(r){s=r.pop();if(s==="gb2312"||s==="gbk"){s="gb18030"}}return _(e,"UTF-8",s).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let t,i;let r=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(r instanceof s&&typeof r.getBoundary!=="function"){t=new x;i=new x;r.pipe(t);r.pipe(i);e[T].body=t;r=i}return r}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof s){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const t=e.body;if(t===null){return 0}else if(isBlob(t)){return t.size}else if(Buffer.isBuffer(t)){return t.length}else if(t&&typeof t.getLengthSync==="function"){if(t._lengthRetrievers&&t._lengthRetrievers.length==0||t.hasKnownLength&&t.hasKnownLength()){return t.getLengthSync()}return null}else{return null}}function writeToStream(e,t){const i=t.body;if(i===null){e.end()}else if(isBlob(i)){i.stream().pipe(e)}else if(Buffer.isBuffer(i)){e.write(i);e.end()}else{i.pipe(e)}}Body.Promise=global.Promise;const S=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;const A=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){e=`${e}`;if(S.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(A.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,t){t=t.toLowerCase();for(const i in e){if(i.toLowerCase()===t){return i}}return undefined}const I=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[I]=Object.create(null);if(e instanceof Headers){const t=e.raw();const i=Object.keys(t);for(const e of i){for(const i of t[e]){this.append(e,i)}}return}if(e==null);else if(typeof e==="object"){const t=e[Symbol.iterator];if(t!=null){if(typeof t!=="function"){throw new TypeError("Header pairs must be iterable")}const i=[];for(const t of e){if(typeof t!=="object"||typeof t[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}i.push(Array.from(t))}for(const e of i){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const t of Object.keys(e)){const i=e[t];this.append(t,i)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const t=find(this[I],e);if(t===undefined){return null}return this[I][t].join(", ")}forEach(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let i=getHeaders(this);let s=0;while(s<i.length){var r=i[s];const o=r[0],l=r[1];e.call(t,l,o,this);i=getHeaders(this);s++}}set(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const i=find(this[I],e);this[I][i!==undefined?i:e]=[t]}append(e,t){e=`${e}`;t=`${t}`;validateName(e);validateValue(t);const i=find(this[I],e);if(i!==undefined){this[I][i].push(t)}else{this[I][e]=[t]}}has(e){e=`${e}`;validateName(e);return find(this[I],e)!==undefined}delete(e){e=`${e}`;validateName(e);const t=find(this[I],e);if(t!==undefined){delete this[I][t]}}raw(){return this[I]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const i=Object.keys(e[I]).sort();return i.map(t==="key"?function(e){return e.toLowerCase()}:t==="value"?function(t){return e[I][t].join(", ")}:function(t){return[t.toLowerCase(),e[I][t].join(", ")]})}const N=Symbol("internal");function createHeadersIterator(e,t){const i=Object.create(O);i[N]={target:e,kind:t,index:0};return i}const O=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==O){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[N];const t=e.target,i=e.kind,s=e.index;const r=getHeaders(t,i);const o=r.length;if(s>=o){return{value:undefined,done:true}}this[N].index=s+1;return{value:r[s],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(O,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const t=Object.assign({__proto__:null},e[I]);const i=find(e[I],"Host");if(i!==undefined){t[i]=t[i][0]}return t}function createHeadersLenient(e){const t=new Headers;for(const i of Object.keys(e)){if(S.test(i)){continue}if(Array.isArray(e[i])){for(const s of e[i]){if(A.test(s)){continue}if(t[I][i]===undefined){t[I][i]=[s]}else{t[I][i].push(s)}}}else if(!A.test(e[i])){t[I][i]=[e[i]]}}return t}const R=Symbol("Response internals");const k=r.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,t);const i=t.status||200;const s=new Headers(t.headers);if(e!=null&&!s.has("Content-Type")){const t=extractContentType(e);if(t){s.append("Content-Type",t)}}this[R]={url:t.url,status:i,statusText:t.statusText||k[i],headers:s,counter:t.counter}}get url(){return this[R].url||""}get status(){return this[R].status}get ok(){return this[R].status>=200&&this[R].status<300}get redirected(){return this[R].counter>0}get statusText(){return this[R].statusText}get headers(){return this[R].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const P=Symbol("Request internals");const M=o.URL||l.URL;const q=o.parse;const G=o.format;function parseURL(e){if(/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)){e=new M(e).toString()}return q(e)}const j="destroy"in s.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[P]==="object"}function isAbortSignal(e){const t=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(t&&t.constructor.name==="AbortSignal")}class Request{constructor(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let i;if(!isRequest(e)){if(e&&e.href){i=parseURL(e.href)}else{i=parseURL(`${e}`)}e={}}else{i=parseURL(e.url)}let s=t.method||e.method||"GET";s=s.toUpperCase();if((t.body!=null||isRequest(e)&&e.body!==null)&&(s==="GET"||s==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let r=t.body!=null?t.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,r,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const o=new Headers(t.headers||e.headers||{});if(r!=null&&!o.has("Content-Type")){const e=extractContentType(r);if(e){o.append("Content-Type",e)}}let l=isRequest(e)?e.signal:null;if("signal"in t)l=t.signal;if(l!=null&&!isAbortSignal(l)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[P]={method:s,redirect:t.redirect||e.redirect||"follow",headers:o,parsedURL:i,signal:l};this.follow=t.follow!==undefined?t.follow:e.follow!==undefined?e.follow:20;this.compress=t.compress!==undefined?t.compress:e.compress!==undefined?e.compress:true;this.counter=t.counter||e.counter||0;this.agent=t.agent||e.agent}get method(){return this[P].method}get url(){return G(this[P].parsedURL)}get headers(){return this[P].headers}get redirect(){return this[P].redirect}get signal(){return this[P].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const t=e[P].parsedURL;const i=new Headers(e[P].headers);if(!i.has("Accept")){i.set("Accept","*/*")}if(!t.protocol||!t.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(t.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof s.Readable&&!j){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let r=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){r="0"}if(e.body!=null){const t=getTotalBytes(e);if(typeof t==="number"){r=String(t)}}if(r){i.set("Content-Length",r)}if(!i.has("User-Agent")){i.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!i.has("Accept-Encoding")){i.set("Accept-Encoding","gzip,deflate")}let o=e.agent;if(typeof o==="function"){o=o(t)}if(!i.has("Connection")&&!o){i.set("Connection","close")}return Object.assign({},t,{method:e.method,headers:exportNodeCompatibleHeaders(i),agent:o})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const B=o.URL||l.URL;const H=s.PassThrough;const $=function isDomainOrSubdomain(e,t){const i=new B(t).hostname;const s=new B(e).hostname;return i===s||i[i.length-s.length-1]==="."&&i.endsWith(s)};function fetch(e,t){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise((function(i,o){const l=new Request(e,t);const m=getNodeRequestOptions(l);const g=(m.protocol==="https:"?c:r).request;const v=l.signal;let _=null;const T=function abort(){let e=new AbortError("The user aborted a request.");o(e);if(l.body&&l.body instanceof s.Readable){l.body.destroy(e)}if(!_||!_.body)return;_.body.emit("error",e)};if(v&&v.aborted){T();return}const x=function abortAndFinalize(){T();finalize()};const S=g(m);let A;if(v){v.addEventListener("abort",x)}function finalize(){S.abort();if(v)v.removeEventListener("abort",x);clearTimeout(A)}if(l.timeout){S.once("socket",(function(e){A=setTimeout((function(){o(new FetchError(`network timeout at: ${l.url}`,"request-timeout"));finalize()}),l.timeout)}))}S.on("error",(function(e){o(new FetchError(`request to ${l.url} failed, reason: ${e.message}`,"system",e));finalize()}));S.on("response",(function(e){clearTimeout(A);const t=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const s=t.get("Location");let r=null;try{r=s===null?null:new B(s,l.url).toString()}catch(e){if(l.redirect!=="manual"){o(new FetchError(`uri requested responds with an invalid redirect URL: ${s}`,"invalid-redirect"));finalize();return}}switch(l.redirect){case"error":o(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${l.url}`,"no-redirect"));finalize();return;case"manual":if(r!==null){try{t.set("Location",r)}catch(e){o(e)}}break;case"follow":if(r===null){break}if(l.counter>=l.follow){o(new FetchError(`maximum redirect reached at: ${l.url}`,"max-redirect"));finalize();return}const s={headers:new Headers(l.headers),follow:l.follow,counter:l.counter+1,agent:l.agent,compress:l.compress,method:l.method,body:l.body,signal:l.signal,timeout:l.timeout,size:l.size};if(!$(l.url,r)){for(const e of["authorization","www-authenticate","cookie","cookie2"]){s.headers.delete(e)}}if(e.statusCode!==303&&l.body&&getTotalBytes(l)===null){o(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&l.method==="POST"){s.method="GET";s.body=undefined;s.headers.delete("content-length")}i(fetch(new Request(r,s)));finalize();return}}e.once("end",(function(){if(v)v.removeEventListener("abort",x)}));let s=e.pipe(new H);const r={url:l.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:l.size,timeout:l.timeout,counter:l.counter};const c=t.get("Content-Encoding");if(!l.compress||l.method==="HEAD"||c===null||e.statusCode===204||e.statusCode===304){_=new Response(s,r);i(_);return}const m={flush:u.Z_SYNC_FLUSH,finishFlush:u.Z_SYNC_FLUSH};if(c=="gzip"||c=="x-gzip"){s=s.pipe(u.createGunzip(m));_=new Response(s,r);i(_);return}if(c=="deflate"||c=="x-deflate"){const t=e.pipe(new H);t.once("data",(function(e){if((e[0]&15)===8){s=s.pipe(u.createInflate())}else{s=s.pipe(u.createInflateRaw())}_=new Response(s,r);i(_)}));return}if(c=="br"&&typeof u.createBrotliDecompress==="function"){s=s.pipe(u.createBrotliDecompress());_=new Response(s,r);i(_);return}_=new Response(s,r);i(_)}));writeToStream(S,l)}))}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=t=fetch;Object.defineProperty(t,"__esModule",{value:true});t["default"]=t;t.Headers=Headers;t.Request=Request;t.Response=Response;t.FetchError=FetchError},20502:(e,t,i)=>{"use strict";const s=i(71017);const r=i(20539);e.exports=e=>{e=Object.assign({cwd:process.cwd(),path:process.env[r()]},e);let t;let i=s.resolve(e.cwd);const o=[];while(t!==i){o.push(s.join(i,"node_modules/.bin"));t=i;i=s.resolve(i,"..")}o.push(s.dirname(process.execPath));return o.concat(e.path).join(s.delimiter)};e.exports.env=t=>{t=Object.assign({env:process.env},t);const i=Object.assign({},t.env);const s=r({env:i});t.path=i[s];i[s]=e.exports(t);return i}},82072:(e,t,i)=>{e.exports=paginationMethodsPlugin;function paginationMethodsPlugin(e){e.getFirstPage=i(49555).bind(null,e);e.getLastPage=i(42203).bind(null,e);e.getNextPage=i(86655).bind(null,e);e.getPreviousPage=i(63032).bind(null,e);e.hasFirstPage=i(59631);e.hasLastPage=i(64286);e.hasNextPage=i(500);e.hasPreviousPage=i(5996)}},30191:e=>{e.exports=deprecate;const t={};function deprecate(e){if(t[e]){return}console.warn(`DEPRECATED (@octokit/rest): ${e}`);t[e]=1}},49555:(e,t,i)=>{e.exports=getFirstPage;const s=i(48604);function getFirstPage(e,t,i){return s(e,t,"first",i)}},42203:(e,t,i)=>{e.exports=getLastPage;const s=i(48604);function getLastPage(e,t,i){return s(e,t,"last",i)}},86655:(e,t,i)=>{e.exports=getNextPage;const s=i(48604);function getNextPage(e,t,i){return s(e,t,"next",i)}},17889:e=>{e.exports=getPageLinks;function getPageLinks(e){e=e.link||e.headers.link||"";const t={};e.replace(/<([^>]*)>;\s*rel="([\w]*)"/g,((e,i,s)=>{t[s]=i}));return t}},48604:(e,t,i)=>{e.exports=getPage;const s=i(30191);const r=i(17889);const o=i(46058);function getPage(e,t,i,l){s(`octokit.get${i.charAt(0).toUpperCase()+i.slice(1)}Page() – You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`);const c=r(t)[i];if(!c){const e=new o(`No ${i} page found`,404);return Promise.reject(e)}const u={url:c,headers:applyAcceptHeader(t,l)};const m=e.request(u);return m}function applyAcceptHeader(e,t){const i=e.headers&&e.headers["x-github-media-type"];if(!i||t&&t.accept){return t}t=t||{};t.accept="application/vnd."+i.replace("; param=",".").replace("; format=","+");return t}},63032:(e,t,i)=>{e.exports=getPreviousPage;const s=i(48604);function getPreviousPage(e,t,i){return s(e,t,"prev",i)}},59631:(e,t,i)=>{e.exports=hasFirstPage;const s=i(30191);const r=i(17889);function hasFirstPage(e){s(`octokit.hasFirstPage() – You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`);return r(e).first}},64286:(e,t,i)=>{e.exports=hasLastPage;const s=i(30191);const r=i(17889);function hasLastPage(e){s(`octokit.hasLastPage() – You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`);return r(e).last}},500:(e,t,i)=>{e.exports=hasNextPage;const s=i(30191);const r=i(17889);function hasNextPage(e){s(`octokit.hasNextPage() – You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`);return r(e).next}},5996:(e,t,i)=>{e.exports=hasPreviousPage;const s=i(30191);const r=i(17889);function hasPreviousPage(e){s(`octokit.hasPreviousPage() – You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`);return r(e).prev}},46058:e=>{e.exports=class HttpError extends Error{constructor(e,t,i){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="HttpError";this.code=t;this.headers=i}}},1223:(e,t,i)=>{var s=i(62940);e.exports=s(once);e.exports.strict=s(onceStrict);once.proto=once((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return once(this)},configurable:true});Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return onceStrict(this)},configurable:true})}));function once(e){var f=function(){if(f.called)return f.value;f.called=true;return f.value=e.apply(this,arguments)};f.called=false;return f}function onceStrict(e){var f=function(){if(f.called)throw new Error(f.onceError);f.called=true;return f.value=e.apply(this,arguments)};var t=e.name||"Function wrapped with `once`";f.onceError=t+" shouldn't be called more than once";f.called=false;return f}},54824:(e,t,i)=>{"use strict";const s=i(22037);const r=i(7493);const o=i(63515);const osName=(e,t)=>{if(!e&&t){throw new Error("You can't specify a `release` without specifying `platform`")}e=e||s.platform();let i;if(e==="darwin"){if(!t&&s.platform()==="darwin"){t=s.release()}const e=t?Number(t.split(".")[0])>15?"macOS":"OS X":"macOS";i=t?r(t).name:"";return e+(i?" "+i:"")}if(e==="linux"){if(!t&&s.platform()==="linux"){t=s.release()}i=t?t.replace(/^(\d+\.\d+).*/,"$1"):"";return"Linux"+(i?" "+i:"")}if(e==="win32"){if(!t&&s.platform()==="win32"){t=s.release()}i=t?o(t):"";return"Windows"+(i?" "+i:"")}return e};e.exports=osName},31330:e=>{"use strict";e.exports=(e,t)=>{t=t||(()=>{});return e.then((e=>new Promise((e=>{e(t())})).then((()=>e))),(e=>new Promise((e=>{e(t())})).then((()=>{throw e}))))}},20539:e=>{"use strict";e.exports=e=>{e=e||{};const t=e.env||process.env;const i=e.platform||process.platform;if(i!=="win32"){return"PATH"}return Object.keys(t).find((e=>e.toUpperCase()==="PATH"))||"Path"}},18341:(e,t,i)=>{var s=i(1223);var r=i(81205);var o=i(57147);var noop=function(){};var l=/^v?\.0/.test(process.version);var isFn=function(e){return typeof e==="function"};var isFS=function(e){if(!l)return false;if(!o)return false;return(e instanceof(o.ReadStream||noop)||e instanceof(o.WriteStream||noop))&&isFn(e.close)};var isRequest=function(e){return e.setHeader&&isFn(e.abort)};var destroyer=function(e,t,i,o){o=s(o);var l=false;e.on("close",(function(){l=true}));r(e,{readable:t,writable:i},(function(e){if(e)return o(e);l=true;o()}));var c=false;return function(t){if(l)return;if(c)return;c=true;if(isFS(e))return e.close(noop);if(isRequest(e))return e.abort();if(isFn(e.destroy))return e.destroy();o(t||new Error("stream was destroyed"))}};var call=function(e){e()};var pipe=function(e,t){return e.pipe(t)};var pump=function(){var e=Array.prototype.slice.call(arguments);var t=isFn(e[e.length-1]||noop)&&e.pop()||noop;if(Array.isArray(e[0]))e=e[0];if(e.length<2)throw new Error("pump requires two streams per minimum");var i;var s=e.map((function(r,o){var l=o<e.length-1;var c=o>0;return destroyer(r,l,c,(function(e){if(!i)i=e;if(e)s.forEach(call);if(l)return;s.forEach(call);t(i)}))}));return e.reduce(pipe)};e.exports=pump},85911:(e,t)=>{t=e.exports=SemVer;var i;if(typeof process==="object"&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)){i=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift("SEMVER");console.log.apply(console,e)}}else{i=function(){}}t.SEMVER_SPEC_VERSION="2.0.0";var s=256;var r=Number.MAX_SAFE_INTEGER||9007199254740991;var o=16;var l=t.re=[];var c=t.src=[];var u=0;var m=u++;c[m]="0|[1-9]\\d*";var g=u++;c[g]="[0-9]+";var v=u++;c[v]="\\d*[a-zA-Z-][a-zA-Z0-9-]*";var _=u++;c[_]="("+c[m]+")\\."+"("+c[m]+")\\."+"("+c[m]+")";var T=u++;c[T]="("+c[g]+")\\."+"("+c[g]+")\\."+"("+c[g]+")";var x=u++;c[x]="(?:"+c[m]+"|"+c[v]+")";var S=u++;c[S]="(?:"+c[g]+"|"+c[v]+")";var A=u++;c[A]="(?:-("+c[x]+"(?:\\."+c[x]+")*))";var I=u++;c[I]="(?:-?("+c[S]+"(?:\\."+c[S]+")*))";var N=u++;c[N]="[0-9A-Za-z-]+";var O=u++;c[O]="(?:\\+("+c[N]+"(?:\\."+c[N]+")*))";var R=u++;var k="v?"+c[_]+c[A]+"?"+c[O]+"?";c[R]="^"+k+"$";var P="[v=\\s]*"+c[T]+c[I]+"?"+c[O]+"?";var M=u++;c[M]="^"+P+"$";var q=u++;c[q]="((?:<|>)?=?)";var G=u++;c[G]=c[g]+"|x|X|\\*";var j=u++;c[j]=c[m]+"|x|X|\\*";var B=u++;c[B]="[v=\\s]*("+c[j]+")"+"(?:\\.("+c[j]+")"+"(?:\\.("+c[j]+")"+"(?:"+c[A]+")?"+c[O]+"?"+")?)?";var H=u++;c[H]="[v=\\s]*("+c[G]+")"+"(?:\\.("+c[G]+")"+"(?:\\.("+c[G]+")"+"(?:"+c[I]+")?"+c[O]+"?"+")?)?";var $=u++;c[$]="^"+c[q]+"\\s*"+c[B]+"$";var z=u++;c[z]="^"+c[q]+"\\s*"+c[H]+"$";var W=u++;c[W]="(?:^|[^\\d])"+"(\\d{1,"+o+"})"+"(?:\\.(\\d{1,"+o+"}))?"+"(?:\\.(\\d{1,"+o+"}))?"+"(?:$|[^\\d])";var Y=u++;c[Y]="(?:~>?)";var J=u++;c[J]="(\\s*)"+c[Y]+"\\s+";l[J]=new RegExp(c[J],"g");var X="$1~";var Q=u++;c[Q]="^"+c[Y]+c[B]+"$";var ee=u++;c[ee]="^"+c[Y]+c[H]+"$";var te=u++;c[te]="(?:\\^)";var ie=u++;c[ie]="(\\s*)"+c[te]+"\\s+";l[ie]=new RegExp(c[ie],"g");var se="$1^";var re=u++;c[re]="^"+c[te]+c[B]+"$";var ae=u++;c[ae]="^"+c[te]+c[H]+"$";var pe=u++;c[pe]="^"+c[q]+"\\s*("+P+")$|^$";var le=u++;c[le]="^"+c[q]+"\\s*("+k+")$|^$";var ue=u++;c[ue]="(\\s*)"+c[q]+"\\s*("+P+"|"+c[B]+")";l[ue]=new RegExp(c[ue],"g");var me="$1$2$3";var he=u++;c[he]="^\\s*("+c[B]+")"+"\\s+-\\s+"+"("+c[B]+")"+"\\s*$";var ge=u++;c[ge]="^\\s*("+c[H]+")"+"\\s+-\\s+"+"("+c[H]+")"+"\\s*$";var ve=u++;c[ve]="(<|>)?=?\\s*\\*";for(var _e=0;_e<u;_e++){i(_e,c[_e]);if(!l[_e]){l[_e]=new RegExp(c[_e])}}t.parse=parse;function parse(e,t){if(!t||typeof t!=="object"){t={loose:!!t,includePrerelease:false}}if(e instanceof SemVer){return e}if(typeof e!=="string"){return null}if(e.length>s){return null}var i=t.loose?l[M]:l[R];if(!i.test(e)){return null}try{return new SemVer(e,t)}catch(e){return null}}t.valid=valid;function valid(e,t){var i=parse(e,t);return i?i.version:null}t.clean=clean;function clean(e,t){var i=parse(e.trim().replace(/^[=v]+/,""),t);return i?i.version:null}t.SemVer=SemVer;function SemVer(e,t){if(!t||typeof t!=="object"){t={loose:!!t,includePrerelease:false}}if(e instanceof SemVer){if(e.loose===t.loose){return e}else{e=e.version}}else if(typeof e!=="string"){throw new TypeError("Invalid Version: "+e)}if(e.length>s){throw new TypeError("version is longer than "+s+" characters")}if(!(this instanceof SemVer)){return new SemVer(e,t)}i("SemVer",e,t);this.options=t;this.loose=!!t.loose;var o=e.trim().match(t.loose?l[M]:l[R]);if(!o){throw new TypeError("Invalid Version: "+e)}this.raw=e;this.major=+o[1];this.minor=+o[2];this.patch=+o[3];if(this.major>r||this.major<0){throw new TypeError("Invalid major version")}if(this.minor>r||this.minor<0){throw new TypeError("Invalid minor version")}if(this.patch>r||this.patch<0){throw new TypeError("Invalid patch version")}if(!o[4]){this.prerelease=[]}else{this.prerelease=o[4].split(".").map((function(e){if(/^[0-9]+$/.test(e)){var t=+e;if(t>=0&&t<r){return t}}return e}))}this.build=o[5]?o[5].split("."):[];this.format()}SemVer.prototype.format=function(){this.version=this.major+"."+this.minor+"."+this.patch;if(this.prerelease.length){this.version+="-"+this.prerelease.join(".")}return this.version};SemVer.prototype.toString=function(){return this.version};SemVer.prototype.compare=function(e){i("SemVer.compare",this.version,this.options,e);if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}return this.compareMain(e)||this.comparePre(e)};SemVer.prototype.compareMain=function(e){if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}return compareIdentifiers(this.major,e.major)||compareIdentifiers(this.minor,e.minor)||compareIdentifiers(this.patch,e.patch)};SemVer.prototype.comparePre=function(e){if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}if(this.prerelease.length&&!e.prerelease.length){return-1}else if(!this.prerelease.length&&e.prerelease.length){return 1}else if(!this.prerelease.length&&!e.prerelease.length){return 0}var t=0;do{var s=this.prerelease[t];var r=e.prerelease[t];i("prerelease compare",t,s,r);if(s===undefined&&r===undefined){return 0}else if(r===undefined){return 1}else if(s===undefined){return-1}else if(s===r){continue}else{return compareIdentifiers(s,r)}}while(++t)};SemVer.prototype.inc=function(e,t){switch(e){case"premajor":this.prerelease.length=0;this.patch=0;this.minor=0;this.major++;this.inc("pre",t);break;case"preminor":this.prerelease.length=0;this.patch=0;this.minor++;this.inc("pre",t);break;case"prepatch":this.prerelease.length=0;this.inc("patch",t);this.inc("pre",t);break;case"prerelease":if(this.prerelease.length===0){this.inc("patch",t)}this.inc("pre",t);break;case"major":if(this.minor!==0||this.patch!==0||this.prerelease.length===0){this.major++}this.minor=0;this.patch=0;this.prerelease=[];break;case"minor":if(this.patch!==0||this.prerelease.length===0){this.minor++}this.patch=0;this.prerelease=[];break;case"patch":if(this.prerelease.length===0){this.patch++}this.prerelease=[];break;case"pre":if(this.prerelease.length===0){this.prerelease=[0]}else{var i=this.prerelease.length;while(--i>=0){if(typeof this.prerelease[i]==="number"){this.prerelease[i]++;i=-2}}if(i===-1){this.prerelease.push(0)}}if(t){if(this.prerelease[0]===t){if(isNaN(this.prerelease[1])){this.prerelease=[t,0]}}else{this.prerelease=[t,0]}}break;default:throw new Error("invalid increment argument: "+e)}this.format();this.raw=this.version;return this};t.inc=inc;function inc(e,t,i,s){if(typeof i==="string"){s=i;i=undefined}try{return new SemVer(e,i).inc(t,s).version}catch(e){return null}}t.diff=diff;function diff(e,t){if(eq(e,t)){return null}else{var i=parse(e);var s=parse(t);var r="";if(i.prerelease.length||s.prerelease.length){r="pre";var o="prerelease"}for(var l in i){if(l==="major"||l==="minor"||l==="patch"){if(i[l]!==s[l]){return r+l}}}return o}}t.compareIdentifiers=compareIdentifiers;var ye=/^[0-9]+$/;function compareIdentifiers(e,t){var i=ye.test(e);var s=ye.test(t);if(i&&s){e=+e;t=+t}return e===t?0:i&&!s?-1:s&&!i?1:e<t?-1:1}t.rcompareIdentifiers=rcompareIdentifiers;function rcompareIdentifiers(e,t){return compareIdentifiers(t,e)}t.major=major;function major(e,t){return new SemVer(e,t).major}t.minor=minor;function minor(e,t){return new SemVer(e,t).minor}t.patch=patch;function patch(e,t){return new SemVer(e,t).patch}t.compare=compare;function compare(e,t,i){return new SemVer(e,i).compare(new SemVer(t,i))}t.compareLoose=compareLoose;function compareLoose(e,t){return compare(e,t,true)}t.rcompare=rcompare;function rcompare(e,t,i){return compare(t,e,i)}t.sort=sort;function sort(e,i){return e.sort((function(e,s){return t.compare(e,s,i)}))}t.rsort=rsort;function rsort(e,i){return e.sort((function(e,s){return t.rcompare(e,s,i)}))}t.gt=gt;function gt(e,t,i){return compare(e,t,i)>0}t.lt=lt;function lt(e,t,i){return compare(e,t,i)<0}t.eq=eq;function eq(e,t,i){return compare(e,t,i)===0}t.neq=neq;function neq(e,t,i){return compare(e,t,i)!==0}t.gte=gte;function gte(e,t,i){return compare(e,t,i)>=0}t.lte=lte;function lte(e,t,i){return compare(e,t,i)<=0}t.cmp=cmp;function cmp(e,t,i,s){switch(t){case"===":if(typeof e==="object")e=e.version;if(typeof i==="object")i=i.version;return e===i;case"!==":if(typeof e==="object")e=e.version;if(typeof i==="object")i=i.version;return e!==i;case"":case"=":case"==":return eq(e,i,s);case"!=":return neq(e,i,s);case">":return gt(e,i,s);case">=":return gte(e,i,s);case"<":return lt(e,i,s);case"<=":return lte(e,i,s);default:throw new TypeError("Invalid operator: "+t)}}t.Comparator=Comparator;function Comparator(e,t){if(!t||typeof t!=="object"){t={loose:!!t,includePrerelease:false}}if(e instanceof Comparator){if(e.loose===!!t.loose){return e}else{e=e.value}}if(!(this instanceof Comparator)){return new Comparator(e,t)}i("comparator",e,t);this.options=t;this.loose=!!t.loose;this.parse(e);if(this.semver===be){this.value=""}else{this.value=this.operator+this.semver.version}i("comp",this)}var be={};Comparator.prototype.parse=function(e){var t=this.options.loose?l[pe]:l[le];var i=e.match(t);if(!i){throw new TypeError("Invalid comparator: "+e)}this.operator=i[1];if(this.operator==="="){this.operator=""}if(!i[2]){this.semver=be}else{this.semver=new SemVer(i[2],this.options.loose)}};Comparator.prototype.toString=function(){return this.value};Comparator.prototype.test=function(e){i("Comparator.test",e,this.options.loose);if(this.semver===be){return true}if(typeof e==="string"){e=new SemVer(e,this.options)}return cmp(e,this.operator,this.semver,this.options)};Comparator.prototype.intersects=function(e,t){if(!(e instanceof Comparator)){throw new TypeError("a Comparator is required")}if(!t||typeof t!=="object"){t={loose:!!t,includePrerelease:false}}var i;if(this.operator===""){i=new Range(e.value,t);return satisfies(this.value,i,t)}else if(e.operator===""){i=new Range(this.value,t);return satisfies(e.semver,i,t)}var s=(this.operator===">="||this.operator===">")&&(e.operator===">="||e.operator===">");var r=(this.operator==="<="||this.operator==="<")&&(e.operator==="<="||e.operator==="<");var o=this.semver.version===e.semver.version;var l=(this.operator===">="||this.operator==="<=")&&(e.operator===">="||e.operator==="<=");var c=cmp(this.semver,"<",e.semver,t)&&((this.operator===">="||this.operator===">")&&(e.operator==="<="||e.operator==="<"));var u=cmp(this.semver,">",e.semver,t)&&((this.operator==="<="||this.operator==="<")&&(e.operator===">="||e.operator===">"));return s||r||o&&l||c||u};t.Range=Range;function Range(e,t){if(!t||typeof t!=="object"){t={loose:!!t,includePrerelease:false}}if(e instanceof Range){if(e.loose===!!t.loose&&e.includePrerelease===!!t.includePrerelease){return e}else{return new Range(e.raw,t)}}if(e instanceof Comparator){return new Range(e.value,t)}if(!(this instanceof Range)){return new Range(e,t)}this.options=t;this.loose=!!t.loose;this.includePrerelease=!!t.includePrerelease;this.raw=e;this.set=e.split(/\s*\|\|\s*/).map((function(e){return this.parseRange(e.trim())}),this).filter((function(e){return e.length}));if(!this.set.length){throw new TypeError("Invalid SemVer Range: "+e)}this.format()}Range.prototype.format=function(){this.range=this.set.map((function(e){return e.join(" ").trim()})).join("||").trim();return this.range};Range.prototype.toString=function(){return this.range};Range.prototype.parseRange=function(e){var t=this.options.loose;e=e.trim();var s=t?l[ge]:l[he];e=e.replace(s,hyphenReplace);i("hyphen replace",e);e=e.replace(l[ue],me);i("comparator trim",e,l[ue]);e=e.replace(l[J],X);e=e.replace(l[ie],se);e=e.split(/\s+/).join(" ");var r=t?l[pe]:l[le];var o=e.split(" ").map((function(e){return parseComparator(e,this.options)}),this).join(" ").split(/\s+/);if(this.options.loose){o=o.filter((function(e){return!!e.match(r)}))}o=o.map((function(e){return new Comparator(e,this.options)}),this);return o};Range.prototype.intersects=function(e,t){if(!(e instanceof Range)){throw new TypeError("a Range is required")}return this.set.some((function(i){return i.every((function(i){return e.set.some((function(e){return e.every((function(e){return i.intersects(e,t)}))}))}))}))};t.toComparators=toComparators;function toComparators(e,t){return new Range(e,t).set.map((function(e){return e.map((function(e){return e.value})).join(" ").trim().split(" ")}))}function parseComparator(e,t){i("comp",e,t);e=replaceCarets(e,t);i("caret",e);e=replaceTildes(e,t);i("tildes",e);e=replaceXRanges(e,t);i("xrange",e);e=replaceStars(e,t);i("stars",e);return e}function isX(e){return!e||e.toLowerCase()==="x"||e==="*"}function replaceTildes(e,t){return e.trim().split(/\s+/).map((function(e){return replaceTilde(e,t)})).join(" ")}function replaceTilde(e,t){var s=t.loose?l[ee]:l[Q];return e.replace(s,(function(t,s,r,o,l){i("tilde",e,t,s,r,o,l);var c;if(isX(s)){c=""}else if(isX(r)){c=">="+s+".0.0 <"+(+s+1)+".0.0"}else if(isX(o)){c=">="+s+"."+r+".0 <"+s+"."+(+r+1)+".0"}else if(l){i("replaceTilde pr",l);c=">="+s+"."+r+"."+o+"-"+l+" <"+s+"."+(+r+1)+".0"}else{c=">="+s+"."+r+"."+o+" <"+s+"."+(+r+1)+".0"}i("tilde return",c);return c}))}function replaceCarets(e,t){return e.trim().split(/\s+/).map((function(e){return replaceCaret(e,t)})).join(" ")}function replaceCaret(e,t){i("caret",e,t);var s=t.loose?l[ae]:l[re];return e.replace(s,(function(t,s,r,o,l){i("caret",e,t,s,r,o,l);var c;if(isX(s)){c=""}else if(isX(r)){c=">="+s+".0.0 <"+(+s+1)+".0.0"}else if(isX(o)){if(s==="0"){c=">="+s+"."+r+".0 <"+s+"."+(+r+1)+".0"}else{c=">="+s+"."+r+".0 <"+(+s+1)+".0.0"}}else if(l){i("replaceCaret pr",l);if(s==="0"){if(r==="0"){c=">="+s+"."+r+"."+o+"-"+l+" <"+s+"."+r+"."+(+o+1)}else{c=">="+s+"."+r+"."+o+"-"+l+" <"+s+"."+(+r+1)+".0"}}else{c=">="+s+"."+r+"."+o+"-"+l+" <"+(+s+1)+".0.0"}}else{i("no pr");if(s==="0"){if(r==="0"){c=">="+s+"."+r+"."+o+" <"+s+"."+r+"."+(+o+1)}else{c=">="+s+"."+r+"."+o+" <"+s+"."+(+r+1)+".0"}}else{c=">="+s+"."+r+"."+o+" <"+(+s+1)+".0.0"}}i("caret return",c);return c}))}function replaceXRanges(e,t){i("replaceXRanges",e,t);return e.split(/\s+/).map((function(e){return replaceXRange(e,t)})).join(" ")}function replaceXRange(e,t){e=e.trim();var s=t.loose?l[z]:l[$];return e.replace(s,(function(t,s,r,o,l,c){i("xRange",e,t,s,r,o,l,c);var u=isX(r);var m=u||isX(o);var g=m||isX(l);var v=g;if(s==="="&&v){s=""}if(u){if(s===">"||s==="<"){t="<0.0.0"}else{t="*"}}else if(s&&v){if(m){o=0}l=0;if(s===">"){s=">=";if(m){r=+r+1;o=0;l=0}else{o=+o+1;l=0}}else if(s==="<="){s="<";if(m){r=+r+1}else{o=+o+1}}t=s+r+"."+o+"."+l}else if(m){t=">="+r+".0.0 <"+(+r+1)+".0.0"}else if(g){t=">="+r+"."+o+".0 <"+r+"."+(+o+1)+".0"}i("xRange return",t);return t}))}function replaceStars(e,t){i("replaceStars",e,t);return e.trim().replace(l[ve],"")}function hyphenReplace(e,t,i,s,r,o,l,c,u,m,g,v,_){if(isX(i)){t=""}else if(isX(s)){t=">="+i+".0.0"}else if(isX(r)){t=">="+i+"."+s+".0"}else{t=">="+t}if(isX(u)){c=""}else if(isX(m)){c="<"+(+u+1)+".0.0"}else if(isX(g)){c="<"+u+"."+(+m+1)+".0"}else if(v){c="<="+u+"."+m+"."+g+"-"+v}else{c="<="+c}return(t+" "+c).trim()}Range.prototype.test=function(e){if(!e){return false}if(typeof e==="string"){e=new SemVer(e,this.options)}for(var t=0;t<this.set.length;t++){if(testSet(this.set[t],e,this.options)){return true}}return false};function testSet(e,t,s){for(var r=0;r<e.length;r++){if(!e[r].test(t)){return false}}if(t.prerelease.length&&!s.includePrerelease){for(r=0;r<e.length;r++){i(e[r].semver);if(e[r].semver===be){continue}if(e[r].semver.prerelease.length>0){var o=e[r].semver;if(o.major===t.major&&o.minor===t.minor&&o.patch===t.patch){return true}}}return false}return true}t.satisfies=satisfies;function satisfies(e,t,i){try{t=new Range(t,i)}catch(e){return false}return t.test(e)}t.maxSatisfying=maxSatisfying;function maxSatisfying(e,t,i){var s=null;var r=null;try{var o=new Range(t,i)}catch(e){return null}e.forEach((function(e){if(o.test(e)){if(!s||r.compare(e)===-1){s=e;r=new SemVer(s,i)}}}));return s}t.minSatisfying=minSatisfying;function minSatisfying(e,t,i){var s=null;var r=null;try{var o=new Range(t,i)}catch(e){return null}e.forEach((function(e){if(o.test(e)){if(!s||r.compare(e)===1){s=e;r=new SemVer(s,i)}}}));return s}t.minVersion=minVersion;function minVersion(e,t){e=new Range(e,t);var i=new SemVer("0.0.0");if(e.test(i)){return i}i=new SemVer("0.0.0-0");if(e.test(i)){return i}i=null;for(var s=0;s<e.set.length;++s){var r=e.set[s];r.forEach((function(e){var t=new SemVer(e.semver.version);switch(e.operator){case">":if(t.prerelease.length===0){t.patch++}else{t.prerelease.push(0)}t.raw=t.format();case"":case">=":if(!i||gt(i,t)){i=t}break;case"<":case"<=":break;default:throw new Error("Unexpected operation: "+e.operator)}}))}if(i&&e.test(i)){return i}return null}t.validRange=validRange;function validRange(e,t){try{return new Range(e,t).range||"*"}catch(e){return null}}t.ltr=ltr;function ltr(e,t,i){return outside(e,t,"<",i)}t.gtr=gtr;function gtr(e,t,i){return outside(e,t,">",i)}t.outside=outside;function outside(e,t,i,s){e=new SemVer(e,s);t=new Range(t,s);var r,o,l,c,u;switch(i){case">":r=gt;o=lte;l=lt;c=">";u=">=";break;case"<":r=lt;o=gte;l=gt;c="<";u="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(satisfies(e,t,s)){return false}for(var m=0;m<t.set.length;++m){var g=t.set[m];var v=null;var _=null;g.forEach((function(e){if(e.semver===be){e=new Comparator(">=0.0.0")}v=v||e;_=_||e;if(r(e.semver,v.semver,s)){v=e}else if(l(e.semver,_.semver,s)){_=e}}));if(v.operator===c||v.operator===u){return false}if((!_.operator||_.operator===c)&&o(e,_.semver)){return false}else if(_.operator===u&&l(e,_.semver)){return false}}return true}t.prerelease=prerelease;function prerelease(e,t){var i=parse(e,t);return i&&i.prerelease.length?i.prerelease:null}t.intersects=intersects;function intersects(e,t,i){e=new Range(e,i);t=new Range(t,i);return e.intersects(t)}t.coerce=coerce;function coerce(e){if(e instanceof SemVer){return e}if(typeof e!=="string"){return null}var t=e.match(l[W]);if(t==null){return null}return parse(t[1]+"."+(t[2]||"0")+"."+(t[3]||"0"))}},67032:(e,t,i)=>{"use strict";var s=i(72638);e.exports=function(e){var t=e.match(s);if(!t){return null}var i=t[0].replace(/#! ?/,"").split(" ");var r=i[0].split("/").pop();var o=i[1];return r==="env"?o:r+(o?" "+o:"")}},72638:e=>{"use strict";e.exports=/^#!.*/},24931:(e,t,i)=>{var s=i(39491);var r=i(63710);var o=i(82361);if(typeof o!=="function"){o=o.EventEmitter}var l;if(process.__signal_exit_emitter__){l=process.__signal_exit_emitter__}else{l=process.__signal_exit_emitter__=new o;l.count=0;l.emitted={}}if(!l.infinite){l.setMaxListeners(Infinity);l.infinite=true}e.exports=function(e,t){s.equal(typeof e,"function","a callback must be provided for exit handler");if(u===false){load()}var i="exit";if(t&&t.alwaysLast){i="afterexit"}var remove=function(){l.removeListener(i,e);if(l.listeners("exit").length===0&&l.listeners("afterexit").length===0){unload()}};l.on(i,e);return remove};e.exports.unload=unload;function unload(){if(!u){return}u=false;r.forEach((function(e){try{process.removeListener(e,c[e])}catch(e){}}));process.emit=g;process.reallyExit=m;l.count-=1}function emit(e,t,i){if(l.emitted[e]){return}l.emitted[e]=true;l.emit(e,t,i)}var c={};r.forEach((function(e){c[e]=function listener(){var t=process.listeners(e);if(t.length===l.count){unload();emit("exit",null,e);emit("afterexit",null,e);process.kill(process.pid,e)}}}));e.exports.signals=function(){return r};e.exports.load=load;var u=false;function load(){if(u){return}u=true;l.count+=1;r=r.filter((function(e){try{process.on(e,c[e]);return true}catch(e){return false}}));process.emit=processEmit;process.reallyExit=processReallyExit}var m=process.reallyExit;function processReallyExit(e){process.exitCode=e||0;emit("exit",process.exitCode,null);emit("afterexit",process.exitCode,null);m.call(process,process.exitCode)}var g=process.emit;function processEmit(e,t){if(e==="exit"){if(t!==undefined){process.exitCode=t}var i=g.apply(this,arguments);emit("exit",process.exitCode,null);emit("afterexit",process.exitCode,null);return i}else{return g.apply(this,arguments)}}},63710:e=>{e.exports=["SIGABRT","SIGALRM","SIGHUP","SIGINT","SIGTERM"];if(process.platform!=="win32"){e.exports.push("SIGVTALRM","SIGXCPU","SIGXFSZ","SIGUSR2","SIGTRAP","SIGSYS","SIGQUIT","SIGIOT")}if(process.platform==="linux"){e.exports.push("SIGIO","SIGPOLL","SIGPWR","SIGSTKFLT","SIGUNUSED")}},85515:e=>{"use strict";e.exports=function(e){var t=typeof e==="string"?"\n":"\n".charCodeAt();var i=typeof e==="string"?"\r":"\r".charCodeAt();if(e[e.length-1]===t){e=e.slice(0,e.length-1)}if(e[e.length-1]===i){e=e.slice(0,e.length-1)}return e}},84256:(e,t,i)=>{"use strict";var s=i(85477);var r=i(72020);var o={TRANSITIONAL:0,NONTRANSITIONAL:1};function normalize(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function findStatus(e){var t=0;var i=r.length-1;while(t<=i){var s=Math.floor((t+i)/2);var o=r[s];if(o[0][0]<=e&&o[0][1]>=e){return o}else if(o[0][0]>e){i=s-1}else{t=s+1}}return null}var l=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function countSymbols(e){return e.replace(l,"_").length}function mapChars(e,t,i){var s=false;var r="";var l=countSymbols(e);for(var c=0;c<l;++c){var u=e.codePointAt(c);var m=findStatus(u);switch(m[1]){case"disallowed":s=true;r+=String.fromCodePoint(u);break;case"ignored":break;case"mapped":r+=String.fromCodePoint.apply(String,m[2]);break;case"deviation":if(i===o.TRANSITIONAL){r+=String.fromCodePoint.apply(String,m[2])}else{r+=String.fromCodePoint(u)}break;case"valid":r+=String.fromCodePoint(u);break;case"disallowed_STD3_mapped":if(t){s=true;r+=String.fromCodePoint(u)}else{r+=String.fromCodePoint.apply(String,m[2])}break;case"disallowed_STD3_valid":if(t){s=true}r+=String.fromCodePoint(u);break}}return{string:r,error:s}}var c=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function validateLabel(e,t){if(e.substr(0,4)==="xn--"){e=s.toUnicode(e);t=o.NONTRANSITIONAL}var i=false;if(normalize(e)!==e||e[3]==="-"&&e[4]==="-"||e[0]==="-"||e[e.length-1]==="-"||e.indexOf(".")!==-1||e.search(c)===0){i=true}var r=countSymbols(e);for(var l=0;l<r;++l){var u=findStatus(e.codePointAt(l));if(processing===o.TRANSITIONAL&&u[1]!=="valid"||processing===o.NONTRANSITIONAL&&u[1]!=="valid"&&u[1]!=="deviation"){i=true;break}}return{label:e,error:i}}function processing(e,t,i){var s=mapChars(e,t,i);s.string=normalize(s.string);var r=s.string.split(".");for(var o=0;o<r.length;++o){try{var l=validateLabel(r[o]);r[o]=l.label;s.error=s.error||l.error}catch(e){s.error=true}}return{string:r.join("."),error:s.error}}e.exports.toASCII=function(e,t,i,r){var o=processing(e,t,i);var l=o.string.split(".");l=l.map((function(e){try{return s.toASCII(e)}catch(t){o.error=true;return e}}));if(r){var c=l.slice(0,l.length-1).join(".").length;if(c.length>253||c.length===0){o.error=true}for(var u=0;u<l.length;++u){if(l.length>63||l.length===0){o.error=true;break}}}if(o.error)return null;return l.join(".")};e.exports.toUnicode=function(e,t){var i=processing(e,t,o.NONTRANSITIONAL);return{domain:i.string,error:i.error}};e.exports.PROCESSING_OPTIONS=o},21253:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.decorate=t.getDecoratorsForClass=t.directDecoratorSearch=t.deepDecoratorSearch=void 0;const s=i(71188);const r=i(31392);const mergeObjectsOfDecorators=(e,t)=>{var i,r;const o=s.unique([...Object.getOwnPropertyNames(e),...Object.getOwnPropertyNames(t)]);const l={};for(let c of o)l[c]=s.unique([...(i=e===null||e===void 0?void 0:e[c])!==null&&i!==void 0?i:[],...(r=t===null||t===void 0?void 0:t[c])!==null&&r!==void 0?r:[]]);return l};const mergePropertyAndMethodDecorators=(e,t)=>{var i,s,r,o;return{property:mergeObjectsOfDecorators((i=e===null||e===void 0?void 0:e.property)!==null&&i!==void 0?i:{},(s=t===null||t===void 0?void 0:t.property)!==null&&s!==void 0?s:{}),method:mergeObjectsOfDecorators((r=e===null||e===void 0?void 0:e.method)!==null&&r!==void 0?r:{},(o=t===null||t===void 0?void 0:t.method)!==null&&o!==void 0?o:{})}};const mergeDecorators=(e,t)=>{var i,r,o,l,c,u;return{class:s.unique([...(i=e===null||e===void 0?void 0:e.class)!==null&&i!==void 0?i:[],...(r=t===null||t===void 0?void 0:t.class)!==null&&r!==void 0?r:[]]),static:mergePropertyAndMethodDecorators((o=e===null||e===void 0?void 0:e.static)!==null&&o!==void 0?o:{},(l=t===null||t===void 0?void 0:t.static)!==null&&l!==void 0?l:{}),instance:mergePropertyAndMethodDecorators((c=e===null||e===void 0?void 0:e.instance)!==null&&c!==void 0?c:{},(u=t===null||t===void 0?void 0:t.instance)!==null&&u!==void 0?u:{})}};const o=new Map;const findAllConstituentClasses=(...e)=>{var t;const i=new Set;const o=new Set([...e]);while(o.size>0){for(let e of o){const l=s.protoChain(e.prototype).map((e=>e.constructor));const c=(t=r.getMixinsForClass(e))!==null&&t!==void 0?t:[];const u=[...l,...c];const m=u.filter((e=>!i.has(e)));for(let e of m)o.add(e);i.add(e);o.delete(e)}}return[...i]};const deepDecoratorSearch=(...e)=>{const t=findAllConstituentClasses(...e).map((e=>o.get(e))).filter((e=>!!e));if(t.length==0)return{};if(t.length==1)return t[0];return t.reduce(((e,t)=>mergeDecorators(e,t)))};t.deepDecoratorSearch=deepDecoratorSearch;const directDecoratorSearch=(...e)=>{const i=e.map((e=>t.getDecoratorsForClass(e)));if(i.length===0)return{};if(i.length===1)return i[0];return i.reduce(((e,t)=>mergeDecorators(e,t)))};t.directDecoratorSearch=directDecoratorSearch;const getDecoratorsForClass=e=>{let t=o.get(e);if(!t){t={};o.set(e,t)}return t};t.getDecoratorsForClass=getDecoratorsForClass;const decorateClass=e=>i=>{const s=t.getDecoratorsForClass(i);let r=s.class;if(!r){r=[];s.class=r}r.push(e);return e(i)};const decorateMember=e=>(i,s,...r)=>{const o=typeof i==="function"?"static":"instance";const l=typeof i[s]==="function"?"method":"property";const c=o==="static"?i:i.constructor;const u=t.getDecoratorsForClass(c);let m=u===null||u===void 0?void 0:u[o];if(!m){m={};u[o]=m}let g=m===null||m===void 0?void 0:m[l];if(!g){g={};m[l]=g}let v=g===null||g===void 0?void 0:g[s];if(!v){v=[];g[s]=v}v.push(e);return e(i,s,...r)};const decorate=e=>(...t)=>{if(t.length===1)return decorateClass(e)(t[0]);return decorateMember(e)(...t)};t.decorate=decorate},62909:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.hasMixin=t.decorate=t.settings=t.mix=t.Mixin=void 0;var s=i(83175);Object.defineProperty(t,"Mixin",{enumerable:true,get:function(){return s.Mixin}});Object.defineProperty(t,"mix",{enumerable:true,get:function(){return s.mix}});var r=i(81869);Object.defineProperty(t,"settings",{enumerable:true,get:function(){return r.settings}});var o=i(21253);Object.defineProperty(t,"decorate",{enumerable:true,get:function(){return o.decorate}});var l=i(31392);Object.defineProperty(t,"hasMixin",{enumerable:true,get:function(){return l.hasMixin}})},31392:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.hasMixin=t.registerMixins=t.getMixinsForClass=void 0;const s=i(71188);const r=new Map;const getMixinsForClass=e=>r.get(e);t.getMixinsForClass=getMixinsForClass;const registerMixins=(e,t)=>r.set(e,t);t.registerMixins=registerMixins;const hasMixin=(e,t)=>{if(e instanceof t)return true;const i=e.constructor;const o=new Set;let l=new Set;l.add(i);while(l.size>0){if(l.has(t))return true;l.forEach((e=>o.add(e)));const e=new Set;l.forEach((t=>{var i;const c=(i=r.get(t))!==null&&i!==void 0?i:s.protoChain(t.prototype).map((e=>e.constructor)).filter((e=>e!==null));if(c)c.forEach((t=>{if(!o.has(t)&&!l.has(t))e.add(t)}))}));l=e}return false};t.hasMixin=hasMixin},83175:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.mix=t.Mixin=void 0;const s=i(67322);const r=i(81869);const o=i(71188);const l=i(21253);const c=i(31392);function Mixin(...e){var t,i,u;const m=e.map((e=>e.prototype));const g=r.settings.initFunction;if(g!==null){const e=m.map((e=>e[g])).filter((e=>typeof e==="function"));const combinedInitFunction=function(...t){for(let i of e)i.apply(this,t)};const t={[g]:combinedInitFunction};m.push(t)}function MixedClass(...t){for(const i of e)o.copyProps(this,new i(...t));if(g!==null&&typeof this[g]==="function")this[g].apply(this,t)}MixedClass.prototype=r.settings.prototypeStrategy==="copy"?o.hardMixProtos(m,MixedClass):s.softMixProtos(m,MixedClass);Object.setPrototypeOf(MixedClass,r.settings.staticsStrategy==="copy"?o.hardMixProtos(e,null,["prototype"]):s.proxyMix(e,Function.prototype));let v=MixedClass;if(r.settings.decoratorInheritance!=="none"){const s=r.settings.decoratorInheritance==="deep"?l.deepDecoratorSearch(...e):l.directDecoratorSearch(...e);for(let e of(t=s===null||s===void 0?void 0:s.class)!==null&&t!==void 0?t:[])v=e(v);applyPropAndMethodDecorators((i=s===null||s===void 0?void 0:s.static)!==null&&i!==void 0?i:{},v);applyPropAndMethodDecorators((u=s===null||s===void 0?void 0:s.instance)!==null&&u!==void 0?u:{},v.prototype)}c.registerMixins(v,e);return v}t.Mixin=Mixin;const applyPropAndMethodDecorators=(e,t)=>{const i=e.property;const s=e.method;if(i)for(let e in i)for(let s of i[e])s(t,e);if(s)for(let e in s)for(let i of s[e])i(t,e,Object.getOwnPropertyDescriptor(t,e))};const mix=(...e)=>t=>{const i=Mixin(...e.concat([t]));Object.defineProperty(i,"name",{value:t.name,writable:false});return i};t.mix=mix},67322:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.softMixProtos=t.proxyMix=t.getIngredientWithProp=void 0;const s=i(71188);const getIngredientWithProp=(e,t)=>{const i=t.map((e=>s.protoChain(e)));let r=0;let o=true;while(o){o=false;for(let s=t.length-1;s>=0;s--){const t=i[s][r];if(t!==undefined&&t!==null){o=true;if(Object.getOwnPropertyDescriptor(t,e)!=undefined){return i[s][0]}}}r++}return undefined};t.getIngredientWithProp=getIngredientWithProp;const proxyMix=(e,i=Object.prototype)=>new Proxy({},{getPrototypeOf(){return i},setPrototypeOf(){throw Error("Cannot set prototype of Proxies created by ts-mixer")},getOwnPropertyDescriptor(i,s){return Object.getOwnPropertyDescriptor(t.getIngredientWithProp(s,e)||{},s)},defineProperty(){throw new Error("Cannot define new properties on Proxies created by ts-mixer")},has(s,r){return t.getIngredientWithProp(r,e)!==undefined||i[r]!==undefined},get(s,r){return(t.getIngredientWithProp(r,e)||i)[r]},set(i,s,r){const o=t.getIngredientWithProp(s,e);if(o===undefined)throw new Error("Cannot set new properties on Proxies created by ts-mixer");o[s]=r;return true},deleteProperty(){throw new Error("Cannot delete properties on Proxies created by ts-mixer")},ownKeys(){return e.map(Object.getOwnPropertyNames).reduce(((e,t)=>t.concat(e.filter((e=>t.indexOf(e)<0)))))}});t.proxyMix=proxyMix;const softMixProtos=(e,i)=>t.proxyMix([...e,{constructor:i}]);t.softMixProtos=softMixProtos},81869:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.settings=void 0;t.settings={initFunction:null,staticsStrategy:"copy",prototypeStrategy:"copy",decoratorInheritance:"deep"}},71188:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.flatten=t.unique=t.hardMixProtos=t.nearestCommonProto=t.protoChain=t.copyProps=void 0;const copyProps=(e,t,i=[])=>{const s=Object.getOwnPropertyDescriptors(t);for(let e of i)delete s[e];Object.defineProperties(e,s)};t.copyProps=copyProps;const protoChain=(e,i=[e])=>{const s=Object.getPrototypeOf(e);if(s===null)return i;return t.protoChain(s,[...i,s])};t.protoChain=protoChain;const nearestCommonProto=(...e)=>{if(e.length===0)return undefined;let i=undefined;const s=e.map((e=>t.protoChain(e)));while(s.every((e=>e.length>0))){const e=s.map((e=>e.pop()));const t=e[0];if(e.every((e=>e===t)))i=t;else break}return i};t.nearestCommonProto=nearestCommonProto;const hardMixProtos=(e,i,s=[])=>{var r;const o=(r=t.nearestCommonProto(...e))!==null&&r!==void 0?r:Object.prototype;const l=Object.create(o);const c=t.protoChain(o);for(let i of e){let e=t.protoChain(i);for(let i=e.length-1;i>=0;i--){let r=e[i];if(c.indexOf(r)===-1){t.copyProps(l,r,["constructor",...s]);c.push(r)}}}l.constructor=i;return l};t.hardMixProtos=hardMixProtos;const unique=e=>e.filter(((t,i)=>e.indexOf(t)==i));t.unique=unique;const flatten=e=>e.length===0?[]:e.length===1?e[0]:e.reduce(((e,t)=>[...e,...t]));t.flatten=flatten},74294:(e,t,i)=>{e.exports=i(54219)},54219:(e,t,i)=>{"use strict";var s=i(41808);var r=i(24404);var o=i(13685);var l=i(95687);var c=i(82361);var u=i(39491);var m=i(73837);t.httpOverHttp=httpOverHttp;t.httpsOverHttp=httpsOverHttp;t.httpOverHttps=httpOverHttps;t.httpsOverHttps=httpsOverHttps;function httpOverHttp(e){var t=new TunnelingAgent(e);t.request=o.request;return t}function httpsOverHttp(e){var t=new TunnelingAgent(e);t.request=o.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function httpOverHttps(e){var t=new TunnelingAgent(e);t.request=l.request;return t}function httpsOverHttps(e){var t=new TunnelingAgent(e);t.request=l.request;t.createSocket=createSecureSocket;t.defaultPort=443;return t}function TunnelingAgent(e){var t=this;t.options=e||{};t.proxyOptions=t.options.proxy||{};t.maxSockets=t.options.maxSockets||o.Agent.defaultMaxSockets;t.requests=[];t.sockets=[];t.on("free",(function onFree(e,i,s,r){var o=toOptions(i,s,r);for(var l=0,c=t.requests.length;l<c;++l){var u=t.requests[l];if(u.host===o.host&&u.port===o.port){t.requests.splice(l,1);u.request.onSocket(e);return}}e.destroy();t.removeSocket(e)}))}m.inherits(TunnelingAgent,c.EventEmitter);TunnelingAgent.prototype.addRequest=function addRequest(e,t,i,s){var r=this;var o=mergeOptions({request:e},r.options,toOptions(t,i,s));if(r.sockets.length>=this.maxSockets){r.requests.push(o);return}r.createSocket(o,(function(t){t.on("free",onFree);t.on("close",onCloseOrRemove);t.on("agentRemove",onCloseOrRemove);e.onSocket(t);function onFree(){r.emit("free",t,o)}function onCloseOrRemove(e){r.removeSocket(t);t.removeListener("free",onFree);t.removeListener("close",onCloseOrRemove);t.removeListener("agentRemove",onCloseOrRemove)}}))};TunnelingAgent.prototype.createSocket=function createSocket(e,t){var i=this;var s={};i.sockets.push(s);var r=mergeOptions({},i.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:false,headers:{host:e.host+":"+e.port}});if(e.localAddress){r.localAddress=e.localAddress}if(r.proxyAuth){r.headers=r.headers||{};r.headers["Proxy-Authorization"]="Basic "+new Buffer(r.proxyAuth).toString("base64")}g("making CONNECT request");var o=i.request(r);o.useChunkedEncodingByDefault=false;o.once("response",onResponse);o.once("upgrade",onUpgrade);o.once("connect",onConnect);o.once("error",onError);o.end();function onResponse(e){e.upgrade=true}function onUpgrade(e,t,i){process.nextTick((function(){onConnect(e,t,i)}))}function onConnect(r,l,c){o.removeAllListeners();l.removeAllListeners();if(r.statusCode!==200){g("tunneling socket could not be established, statusCode=%d",r.statusCode);l.destroy();var u=new Error("tunneling socket could not be established, "+"statusCode="+r.statusCode);u.code="ECONNRESET";e.request.emit("error",u);i.removeSocket(s);return}if(c.length>0){g("got illegal response body from proxy");l.destroy();var u=new Error("got illegal response body from proxy");u.code="ECONNRESET";e.request.emit("error",u);i.removeSocket(s);return}g("tunneling connection has established");i.sockets[i.sockets.indexOf(s)]=l;return t(l)}function onError(t){o.removeAllListeners();g("tunneling socket could not be established, cause=%s\n",t.message,t.stack);var r=new Error("tunneling socket could not be established, "+"cause="+t.message);r.code="ECONNRESET";e.request.emit("error",r);i.removeSocket(s)}};TunnelingAgent.prototype.removeSocket=function removeSocket(e){var t=this.sockets.indexOf(e);if(t===-1){return}this.sockets.splice(t,1);var i=this.requests.shift();if(i){this.createSocket(i,(function(e){i.request.onSocket(e)}))}};function createSecureSocket(e,t){var i=this;TunnelingAgent.prototype.createSocket.call(i,e,(function(s){var o=e.request.getHeader("host");var l=mergeOptions({},i.options,{socket:s,servername:o?o.replace(/:.*$/,""):e.host});var c=r.connect(0,l);i.sockets[i.sockets.indexOf(s)]=c;t(c)}))}function toOptions(e,t,i){if(typeof e==="string"){return{host:e,port:t,localAddress:i}}return e}function mergeOptions(e){for(var t=1,i=arguments.length;t<i;++t){var s=arguments[t];if(typeof s==="object"){var r=Object.keys(s);for(var o=0,l=r.length;o<l;++o){var c=r[o];if(s[c]!==undefined){e[c]=s[c]}}}}return e}var g;if(process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)){g=function(){var e=Array.prototype.slice.call(arguments);if(typeof e[0]==="string"){e[0]="TUNNEL: "+e[0]}else{e.unshift("TUNNEL:")}console.error.apply(console,e)}}else{g=function(){}}t.debug=g},45030:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var s=_interopDefault(i(54824));function getUserAgent(){try{return`Node.js/${process.version.substr(1)} (${s()}; ${process.arch})`}catch(e){if(/wmic os get Caption/.test(e.message)){return"Windows <version undetectable>"}throw e}}t.getUserAgent=getUserAgent},54886:e=>{"use strict";var t={};e.exports=t;function sign(e){return e<0?-1:1}function evenRound(e){if(e%1===.5&&(e&1)===0){return Math.floor(e)}else{return Math.round(e)}}function createNumberConversion(e,t){if(!t.unsigned){--e}const i=t.unsigned?0:-Math.pow(2,e);const s=Math.pow(2,e)-1;const r=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e);const o=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,l){if(!l)l={};let c=+e;if(l.enforceRange){if(!Number.isFinite(c)){throw new TypeError("Argument is not a finite number")}c=sign(c)*Math.floor(Math.abs(c));if(c<i||c>s){throw new TypeError("Argument is not in byte range")}return c}if(!isNaN(c)&&l.clamp){c=evenRound(c);if(c<i)c=i;if(c>s)c=s;return c}if(!Number.isFinite(c)||c===0){return 0}c=sign(c)*Math.floor(Math.abs(c));c=c%r;if(!t.unsigned&&c>=o){return c-r}else if(t.unsigned){if(c<0){c+=r}else if(c===-0){return 0}}return c}}t["void"]=function(){return undefined};t["boolean"]=function(e){return!!e};t["byte"]=createNumberConversion(8,{unsigned:false});t["octet"]=createNumberConversion(8,{unsigned:true});t["short"]=createNumberConversion(16,{unsigned:false});t["unsigned short"]=createNumberConversion(16,{unsigned:true});t["long"]=createNumberConversion(32,{unsigned:false});t["unsigned long"]=createNumberConversion(32,{unsigned:true});t["long long"]=createNumberConversion(32,{unsigned:false,moduloBitLength:64});t["unsigned long long"]=createNumberConversion(32,{unsigned:true,moduloBitLength:64});t["double"]=function(e){const t=+e;if(!Number.isFinite(t)){throw new TypeError("Argument is not a finite floating-point value")}return t};t["unrestricted double"]=function(e){const t=+e;if(isNaN(t)){throw new TypeError("Argument is NaN")}return t};t["float"]=t["double"];t["unrestricted float"]=t["unrestricted double"];t["DOMString"]=function(e,t){if(!t)t={};if(t.treatNullAsEmptyString&&e===null){return""}return String(e)};t["ByteString"]=function(e,t){const i=String(e);let s=undefined;for(let e=0;(s=i.codePointAt(e))!==undefined;++e){if(s>255){throw new TypeError("Argument is not a valid bytestring")}}return i};t["USVString"]=function(e){const t=String(e);const i=t.length;const s=[];for(let e=0;e<i;++e){const r=t.charCodeAt(e);if(r<55296||r>57343){s.push(String.fromCodePoint(r))}else if(56320<=r&&r<=57343){s.push(String.fromCodePoint(65533))}else{if(e===i-1){s.push(String.fromCodePoint(65533))}else{const i=t.charCodeAt(e+1);if(56320<=i&&i<=57343){const t=r&1023;const o=i&1023;s.push(String.fromCodePoint((2<<15)+(2<<9)*t+o));++e}else{s.push(String.fromCodePoint(65533))}}}}return s.join("")};t["Date"]=function(e,t){if(!(e instanceof Date)){throw new TypeError("Argument is not a Date object")}if(isNaN(e)){return undefined}return e};t["RegExp"]=function(e,t){if(!(e instanceof RegExp)){e=new RegExp(e)}return e}},97537:(e,t,i)=>{"use strict";const s=i(2158);t.implementation=class URLImpl{constructor(e){const t=e[0];const i=e[1];let r=null;if(i!==undefined){r=s.basicURLParse(i);if(r==="failure"){throw new TypeError("Invalid base URL")}}const o=s.basicURLParse(t,{baseURL:r});if(o==="failure"){throw new TypeError("Invalid URL")}this._url=o}get href(){return s.serializeURL(this._url)}set href(e){const t=s.basicURLParse(e);if(t==="failure"){throw new TypeError("Invalid URL")}this._url=t}get origin(){return s.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){s.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){if(s.cannotHaveAUsernamePasswordPort(this._url)){return}s.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){if(s.cannotHaveAUsernamePasswordPort(this._url)){return}s.setThePassword(this._url,e)}get host(){const e=this._url;if(e.host===null){return""}if(e.port===null){return s.serializeHost(e.host)}return s.serializeHost(e.host)+":"+s.serializeInteger(e.port)}set host(e){if(this._url.cannotBeABaseURL){return}s.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){if(this._url.host===null){return""}return s.serializeHost(this._url.host)}set hostname(e){if(this._url.cannotBeABaseURL){return}s.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){if(this._url.port===null){return""}return s.serializeInteger(this._url.port)}set port(e){if(s.cannotHaveAUsernamePasswordPort(this._url)){return}if(e===""){this._url.port=null}else{s.basicURLParse(e,{url:this._url,stateOverride:"port"})}}get pathname(){if(this._url.cannotBeABaseURL){return this._url.path[0]}if(this._url.path.length===0){return""}return"/"+this._url.path.join("/")}set pathname(e){if(this._url.cannotBeABaseURL){return}this._url.path=[];s.basicURLParse(e,{url:this._url,stateOverride:"path start"})}get search(){if(this._url.query===null||this._url.query===""){return""}return"?"+this._url.query}set search(e){const t=this._url;if(e===""){t.query=null;return}const i=e[0]==="?"?e.substring(1):e;t.query="";s.basicURLParse(i,{url:t,stateOverride:"query"})}get hash(){if(this._url.fragment===null||this._url.fragment===""){return""}return"#"+this._url.fragment}set hash(e){if(e===""){this._url.fragment=null;return}const t=e[0]==="#"?e.substring(1):e;this._url.fragment="";s.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},63394:(e,t,i)=>{"use strict";const s=i(54886);const r=i(83185);const o=i(97537);const l=r.implSymbol;function URL(t){if(!this||this[l]||!(this instanceof URL)){throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.")}if(arguments.length<1){throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.")}const i=[];for(let e=0;e<arguments.length&&e<2;++e){i[e]=arguments[e]}i[0]=s["USVString"](i[0]);if(i[1]!==undefined){i[1]=s["USVString"](i[1])}e.exports.setup(this,i)}URL.prototype.toJSON=function toJSON(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}const t=[];for(let e=0;e<arguments.length&&e<0;++e){t[e]=arguments[e]}return this[l].toJSON.apply(this[l],t)};Object.defineProperty(URL.prototype,"href",{get(){return this[l].href},set(e){e=s["USVString"](e);this[l].href=e},enumerable:true,configurable:true});URL.prototype.toString=function(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}return this.href};Object.defineProperty(URL.prototype,"origin",{get(){return this[l].origin},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"protocol",{get(){return this[l].protocol},set(e){e=s["USVString"](e);this[l].protocol=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"username",{get(){return this[l].username},set(e){e=s["USVString"](e);this[l].username=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"password",{get(){return this[l].password},set(e){e=s["USVString"](e);this[l].password=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"host",{get(){return this[l].host},set(e){e=s["USVString"](e);this[l].host=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hostname",{get(){return this[l].hostname},set(e){e=s["USVString"](e);this[l].hostname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"port",{get(){return this[l].port},set(e){e=s["USVString"](e);this[l].port=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"pathname",{get(){return this[l].pathname},set(e){e=s["USVString"](e);this[l].pathname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"search",{get(){return this[l].search},set(e){e=s["USVString"](e);this[l].search=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hash",{get(){return this[l].hash},set(e){e=s["USVString"](e);this[l].hash=e},enumerable:true,configurable:true});e.exports={is(e){return!!e&&e[l]instanceof o.implementation},create(e,t){let i=Object.create(URL.prototype);this.setup(i,e,t);return i},setup(e,t,i){if(!i)i={};i.wrapper=e;e[l]=new o.implementation(t,i);e[l][r.wrapperSymbol]=e},interface:URL,expose:{Window:{URL:URL},Worker:{URL:URL}}}},28665:(e,t,i)=>{"use strict";t.URL=i(63394)["interface"];t.serializeURL=i(2158).serializeURL;t.serializeURLOrigin=i(2158).serializeURLOrigin;t.basicURLParse=i(2158).basicURLParse;t.setTheUsername=i(2158).setTheUsername;t.setThePassword=i(2158).setThePassword;t.serializeHost=i(2158).serializeHost;t.serializeInteger=i(2158).serializeInteger;t.parseURL=i(2158).parseURL},2158:(e,t,i)=>{"use strict";const s=i(85477);const r=i(84256);const o={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443};const l=Symbol("failure");function countSymbols(e){return s.ucs2.decode(e).length}function at(e,t){const i=e[t];return isNaN(i)?undefined:String.fromCodePoint(i)}function isASCIIDigit(e){return e>=48&&e<=57}function isASCIIAlpha(e){return e>=65&&e<=90||e>=97&&e<=122}function isASCIIAlphanumeric(e){return isASCIIAlpha(e)||isASCIIDigit(e)}function isASCIIHex(e){return isASCIIDigit(e)||e>=65&&e<=70||e>=97&&e<=102}function isSingleDot(e){return e==="."||e.toLowerCase()==="%2e"}function isDoubleDot(e){e=e.toLowerCase();return e===".."||e==="%2e."||e===".%2e"||e==="%2e%2e"}function isWindowsDriveLetterCodePoints(e,t){return isASCIIAlpha(e)&&(t===58||t===124)}function isWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&(e[1]===":"||e[1]==="|")}function isNormalizedWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&e[1]===":"}function containsForbiddenHostCodePoint(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)!==-1}function containsForbiddenHostCodePointExcludingPercent(e){return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)!==-1}function isSpecialScheme(e){return o[e]!==undefined}function isSpecial(e){return isSpecialScheme(e.scheme)}function defaultPort(e){return o[e]}function percentEncode(e){let t=e.toString(16).toUpperCase();if(t.length===1){t="0"+t}return"%"+t}function utf8PercentEncode(e){const t=new Buffer(e);let i="";for(let e=0;e<t.length;++e){i+=percentEncode(t[e])}return i}function utf8PercentDecode(e){const t=new Buffer(e);const i=[];for(let e=0;e<t.length;++e){if(t[e]!==37){i.push(t[e])}else if(t[e]===37&&isASCIIHex(t[e+1])&&isASCIIHex(t[e+2])){i.push(parseInt(t.slice(e+1,e+3).toString(),16));e+=2}else{i.push(t[e])}}return new Buffer(i).toString()}function isC0ControlPercentEncode(e){return e<=31||e>126}const c=new Set([32,34,35,60,62,63,96,123,125]);function isPathPercentEncode(e){return isC0ControlPercentEncode(e)||c.has(e)}const u=new Set([47,58,59,61,64,91,92,93,94,124]);function isUserinfoPercentEncode(e){return isPathPercentEncode(e)||u.has(e)}function percentEncodeChar(e,t){const i=String.fromCodePoint(e);if(t(e)){return utf8PercentEncode(i)}return i}function parseIPv4Number(e){let t=10;if(e.length>=2&&e.charAt(0)==="0"&&e.charAt(1).toLowerCase()==="x"){e=e.substring(2);t=16}else if(e.length>=2&&e.charAt(0)==="0"){e=e.substring(1);t=8}if(e===""){return 0}const i=t===10?/[^0-9]/:t===16?/[^0-9A-Fa-f]/:/[^0-7]/;if(i.test(e)){return l}return parseInt(e,t)}function parseIPv4(e){const t=e.split(".");if(t[t.length-1]===""){if(t.length>1){t.pop()}}if(t.length>4){return e}const i=[];for(const s of t){if(s===""){return e}const t=parseIPv4Number(s);if(t===l){return e}i.push(t)}for(let e=0;e<i.length-1;++e){if(i[e]>255){return l}}if(i[i.length-1]>=Math.pow(256,5-i.length)){return l}let s=i.pop();let r=0;for(const e of i){s+=e*Math.pow(256,3-r);++r}return s}function serializeIPv4(e){let t="";let i=e;for(let e=1;e<=4;++e){t=String(i%256)+t;if(e!==4){t="."+t}i=Math.floor(i/256)}return t}function parseIPv6(e){const t=[0,0,0,0,0,0,0,0];let i=0;let r=null;let o=0;e=s.ucs2.decode(e);if(e[o]===58){if(e[o+1]!==58){return l}o+=2;++i;r=i}while(o<e.length){if(i===8){return l}if(e[o]===58){if(r!==null){return l}++o;++i;r=i;continue}let s=0;let c=0;while(c<4&&isASCIIHex(e[o])){s=s*16+parseInt(at(e,o),16);++o;++c}if(e[o]===46){if(c===0){return l}o-=c;if(i>6){return l}let s=0;while(e[o]!==undefined){let r=null;if(s>0){if(e[o]===46&&s<4){++o}else{return l}}if(!isASCIIDigit(e[o])){return l}while(isASCIIDigit(e[o])){const t=parseInt(at(e,o));if(r===null){r=t}else if(r===0){return l}else{r=r*10+t}if(r>255){return l}++o}t[i]=t[i]*256+r;++s;if(s===2||s===4){++i}}if(s!==4){return l}break}else if(e[o]===58){++o;if(e[o]===undefined){return l}}else if(e[o]!==undefined){return l}t[i]=s;++i}if(r!==null){let e=i-r;i=7;while(i!==0&&e>0){const s=t[r+e-1];t[r+e-1]=t[i];t[i]=s;--i;--e}}else if(r===null&&i!==8){return l}return t}function serializeIPv6(e){let t="";const i=findLongestZeroSequence(e);const s=i.idx;let r=false;for(let i=0;i<=7;++i){if(r&&e[i]===0){continue}else if(r){r=false}if(s===i){const e=i===0?"::":":";t+=e;r=true;continue}t+=e[i].toString(16);if(i!==7){t+=":"}}return t}function parseHost(e,t){if(e[0]==="["){if(e[e.length-1]!=="]"){return l}return parseIPv6(e.substring(1,e.length-1))}if(!t){return parseOpaqueHost(e)}const i=utf8PercentDecode(e);const s=r.toASCII(i,false,r.PROCESSING_OPTIONS.NONTRANSITIONAL,false);if(s===null){return l}if(containsForbiddenHostCodePoint(s)){return l}const o=parseIPv4(s);if(typeof o==="number"||o===l){return o}return s}function parseOpaqueHost(e){if(containsForbiddenHostCodePointExcludingPercent(e)){return l}let t="";const i=s.ucs2.decode(e);for(let e=0;e<i.length;++e){t+=percentEncodeChar(i[e],isC0ControlPercentEncode)}return t}function findLongestZeroSequence(e){let t=null;let i=1;let s=null;let r=0;for(let o=0;o<e.length;++o){if(e[o]!==0){if(r>i){t=s;i=r}s=null;r=0}else{if(s===null){s=o}++r}}if(r>i){t=s;i=r}return{idx:t,len:i}}function serializeHost(e){if(typeof e==="number"){return serializeIPv4(e)}if(e instanceof Array){return"["+serializeIPv6(e)+"]"}return e}function trimControlChars(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}function trimTabAndNewline(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}function shortenPath(e){const t=e.path;if(t.length===0){return}if(e.scheme==="file"&&t.length===1&&isNormalizedWindowsDriveLetter(t[0])){return}t.pop()}function includesCredentials(e){return e.username!==""||e.password!==""}function cannotHaveAUsernamePasswordPort(e){return e.host===null||e.host===""||e.cannotBeABaseURL||e.scheme==="file"}function isNormalizedWindowsDriveLetter(e){return/^[A-Za-z]:$/.test(e)}function URLStateMachine(e,t,i,r,o){this.pointer=0;this.input=e;this.base=t||null;this.encodingOverride=i||"utf-8";this.stateOverride=o;this.url=r;this.failure=false;this.parseError=false;if(!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:false};const e=trimControlChars(this.input);if(e!==this.input){this.parseError=true}this.input=e}const c=trimTabAndNewline(this.input);if(c!==this.input){this.parseError=true}this.input=c;this.state=o||"scheme start";this.buffer="";this.atFlag=false;this.arrFlag=false;this.passwordTokenSeenFlag=false;this.input=s.ucs2.decode(this.input);for(;this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer];const t=isNaN(e)?undefined:String.fromCodePoint(e);const i=this["parse "+this.state](e,t);if(!i){break}else if(i===l){this.failure=true;break}}}URLStateMachine.prototype["parse scheme start"]=function parseSchemeStart(e,t){if(isASCIIAlpha(e)){this.buffer+=t.toLowerCase();this.state="scheme"}else if(!this.stateOverride){this.state="no scheme";--this.pointer}else{this.parseError=true;return l}return true};URLStateMachine.prototype["parse scheme"]=function parseScheme(e,t){if(isASCIIAlphanumeric(e)||e===43||e===45||e===46){this.buffer+=t.toLowerCase()}else if(e===58){if(this.stateOverride){if(isSpecial(this.url)&&!isSpecialScheme(this.buffer)){return false}if(!isSpecial(this.url)&&isSpecialScheme(this.buffer)){return false}if((includesCredentials(this.url)||this.url.port!==null)&&this.buffer==="file"){return false}if(this.url.scheme==="file"&&(this.url.host===""||this.url.host===null)){return false}}this.url.scheme=this.buffer;this.buffer="";if(this.stateOverride){return false}if(this.url.scheme==="file"){if(this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47){this.parseError=true}this.state="file"}else if(isSpecial(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme){this.state="special relative or authority"}else if(isSpecial(this.url)){this.state="special authority slashes"}else if(this.input[this.pointer+1]===47){this.state="path or authority";++this.pointer}else{this.url.cannotBeABaseURL=true;this.url.path.push("");this.state="cannot-be-a-base-URL path"}}else if(!this.stateOverride){this.buffer="";this.state="no scheme";this.pointer=-1}else{this.parseError=true;return l}return true};URLStateMachine.prototype["parse no scheme"]=function parseNoScheme(e){if(this.base===null||this.base.cannotBeABaseURL&&e!==35){return l}else if(this.base.cannotBeABaseURL&&e===35){this.url.scheme=this.base.scheme;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.url.cannotBeABaseURL=true;this.state="fragment"}else if(this.base.scheme==="file"){this.state="file";--this.pointer}else{this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse special relative or authority"]=function parseSpecialRelativeOrAuthority(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse path or authority"]=function parsePathOrAuthority(e){if(e===47){this.state="authority"}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative"]=function parseRelative(e){this.url.scheme=this.base.scheme;if(isNaN(e)){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===47){this.state="relative slash"}else if(e===63){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else if(isSpecial(this.url)&&e===92){this.parseError=true;this.state="relative slash"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice(0,this.base.path.length-1);this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative slash"]=function parseRelativeSlash(e){if(isSpecial(this.url)&&(e===47||e===92)){if(e===92){this.parseError=true}this.state="special authority ignore slashes"}else if(e===47){this.state="authority"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse special authority slashes"]=function parseSpecialAuthoritySlashes(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="special authority ignore slashes";--this.pointer}return true};URLStateMachine.prototype["parse special authority ignore slashes"]=function parseSpecialAuthorityIgnoreSlashes(e){if(e!==47&&e!==92){this.state="authority";--this.pointer}else{this.parseError=true}return true};URLStateMachine.prototype["parse authority"]=function parseAuthority(e,t){if(e===64){this.parseError=true;if(this.atFlag){this.buffer="%40"+this.buffer}this.atFlag=true;const e=countSymbols(this.buffer);for(let t=0;t<e;++t){const e=this.buffer.codePointAt(t);if(e===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=true;continue}const i=percentEncodeChar(e,isUserinfoPercentEncode);if(this.passwordTokenSeenFlag){this.url.password+=i}else{this.url.username+=i}}this.buffer=""}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){if(this.atFlag&&this.buffer===""){this.parseError=true;return l}this.pointer-=countSymbols(this.buffer)+1;this.buffer="";this.state="host"}else{this.buffer+=t}return true};URLStateMachine.prototype["parse hostname"]=URLStateMachine.prototype["parse host"]=function parseHostName(e,t){if(this.stateOverride&&this.url.scheme==="file"){--this.pointer;this.state="file host"}else if(e===58&&!this.arrFlag){if(this.buffer===""){this.parseError=true;return l}const e=parseHost(this.buffer,isSpecial(this.url));if(e===l){return l}this.url.host=e;this.buffer="";this.state="port";if(this.stateOverride==="hostname"){return false}}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){--this.pointer;if(isSpecial(this.url)&&this.buffer===""){this.parseError=true;return l}else if(this.stateOverride&&this.buffer===""&&(includesCredentials(this.url)||this.url.port!==null)){this.parseError=true;return false}const e=parseHost(this.buffer,isSpecial(this.url));if(e===l){return l}this.url.host=e;this.buffer="";this.state="path start";if(this.stateOverride){return false}}else{if(e===91){this.arrFlag=true}else if(e===93){this.arrFlag=false}this.buffer+=t}return true};URLStateMachine.prototype["parse port"]=function parsePort(e,t){if(isASCIIDigit(e)){this.buffer+=t}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92||this.stateOverride){if(this.buffer!==""){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1){this.parseError=true;return l}this.url.port=e===defaultPort(this.url.scheme)?null:e;this.buffer=""}if(this.stateOverride){return false}this.state="path start";--this.pointer}else{this.parseError=true;return l}return true};const m=new Set([47,92,63,35]);URLStateMachine.prototype["parse file"]=function parseFile(e){this.url.scheme="file";if(e===47||e===92){if(e===92){this.parseError=true}this.state="file slash"}else if(this.base!==null&&this.base.scheme==="file"){if(isNaN(e)){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===63){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else{if(this.input.length-this.pointer-1===0||!isWindowsDriveLetterCodePoints(e,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!m.has(this.input[this.pointer+2])){this.url.host=this.base.host;this.url.path=this.base.path.slice();shortenPath(this.url)}else{this.parseError=true}this.state="path";--this.pointer}}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file slash"]=function parseFileSlash(e){if(e===47||e===92){if(e===92){this.parseError=true}this.state="file host"}else{if(this.base!==null&&this.base.scheme==="file"){if(isNormalizedWindowsDriveLetterString(this.base.path[0])){this.url.path.push(this.base.path[0])}else{this.url.host=this.base.host}}this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file host"]=function parseFileHost(e,t){if(isNaN(e)||e===47||e===92||e===63||e===35){--this.pointer;if(!this.stateOverride&&isWindowsDriveLetterString(this.buffer)){this.parseError=true;this.state="path"}else if(this.buffer===""){this.url.host="";if(this.stateOverride){return false}this.state="path start"}else{let e=parseHost(this.buffer,isSpecial(this.url));if(e===l){return l}if(e==="localhost"){e=""}this.url.host=e;if(this.stateOverride){return false}this.buffer="";this.state="path start"}}else{this.buffer+=t}return true};URLStateMachine.prototype["parse path start"]=function parsePathStart(e){if(isSpecial(this.url)){if(e===92){this.parseError=true}this.state="path";if(e!==47&&e!==92){--this.pointer}}else if(!this.stateOverride&&e===63){this.url.query="";this.state="query"}else if(!this.stateOverride&&e===35){this.url.fragment="";this.state="fragment"}else if(e!==undefined){this.state="path";if(e!==47){--this.pointer}}return true};URLStateMachine.prototype["parse path"]=function parsePath(e){if(isNaN(e)||e===47||isSpecial(this.url)&&e===92||!this.stateOverride&&(e===63||e===35)){if(isSpecial(this.url)&&e===92){this.parseError=true}if(isDoubleDot(this.buffer)){shortenPath(this.url);if(e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}}else if(isSingleDot(this.buffer)&&e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}else if(!isSingleDot(this.buffer)){if(this.url.scheme==="file"&&this.url.path.length===0&&isWindowsDriveLetterString(this.buffer)){if(this.url.host!==""&&this.url.host!==null){this.parseError=true;this.url.host=""}this.buffer=this.buffer[0]+":"}this.url.path.push(this.buffer)}this.buffer="";if(this.url.scheme==="file"&&(e===undefined||e===63||e===35)){while(this.url.path.length>1&&this.url.path[0]===""){this.parseError=true;this.url.path.shift()}}if(e===63){this.url.query="";this.state="query"}if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=percentEncodeChar(e,isPathPercentEncode)}return true};URLStateMachine.prototype["parse cannot-be-a-base-URL path"]=function parseCannotBeABaseURLPath(e){if(e===63){this.url.query="";this.state="query"}else if(e===35){this.url.fragment="";this.state="fragment"}else{if(!isNaN(e)&&e!==37){this.parseError=true}if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}if(!isNaN(e)){this.url.path[0]=this.url.path[0]+percentEncodeChar(e,isC0ControlPercentEncode)}}return true};URLStateMachine.prototype["parse query"]=function parseQuery(e,t){if(isNaN(e)||!this.stateOverride&&e===35){if(!isSpecial(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss"){this.encodingOverride="utf-8"}const t=new Buffer(this.buffer);for(let e=0;e<t.length;++e){if(t[e]<33||t[e]>126||t[e]===34||t[e]===35||t[e]===60||t[e]===62){this.url.query+=percentEncode(t[e])}else{this.url.query+=String.fromCodePoint(t[e])}}this.buffer="";if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=t}return true};URLStateMachine.prototype["parse fragment"]=function parseFragment(e){if(isNaN(e)){}else if(e===0){this.parseError=true}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.url.fragment+=percentEncodeChar(e,isC0ControlPercentEncode)}return true};function serializeURL(e,t){let i=e.scheme+":";if(e.host!==null){i+="//";if(e.username!==""||e.password!==""){i+=e.username;if(e.password!==""){i+=":"+e.password}i+="@"}i+=serializeHost(e.host);if(e.port!==null){i+=":"+e.port}}else if(e.host===null&&e.scheme==="file"){i+="//"}if(e.cannotBeABaseURL){i+=e.path[0]}else{for(const t of e.path){i+="/"+t}}if(e.query!==null){i+="?"+e.query}if(!t&&e.fragment!==null){i+="#"+e.fragment}return i}function serializeOrigin(e){let t=e.scheme+"://";t+=serializeHost(e.host);if(e.port!==null){t+=":"+e.port}return t}e.exports.serializeURL=serializeURL;e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return serializeOrigin({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}};e.exports.basicURLParse=function(e,t){if(t===undefined){t={}}const i=new URLStateMachine(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);if(i.failure){return"failure"}return i.url};e.exports.setTheUsername=function(e,t){e.username="";const i=s.ucs2.decode(t);for(let t=0;t<i.length;++t){e.username+=percentEncodeChar(i[t],isUserinfoPercentEncode)}};e.exports.setThePassword=function(e,t){e.password="";const i=s.ucs2.decode(t);for(let t=0;t<i.length;++t){e.password+=percentEncodeChar(i[t],isUserinfoPercentEncode)}};e.exports.serializeHost=serializeHost;e.exports.cannotHaveAUsernamePasswordPort=cannotHaveAUsernamePasswordPort;e.exports.serializeInteger=function(e){return String(e)};e.exports.parseURL=function(t,i){if(i===undefined){i={}}return e.exports.basicURLParse(t,{baseURL:i.baseURL,encodingOverride:i.encodingOverride})}},83185:e=>{"use strict";e.exports.mixin=function mixin(e,t){const i=Object.getOwnPropertyNames(t);for(let s=0;s<i.length;++s){Object.defineProperty(e,i[s],Object.getOwnPropertyDescriptor(t,i[s]))}};e.exports.wrapperSymbol=Symbol("wrapper");e.exports.implSymbol=Symbol("impl");e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]};e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},34207:(e,t,i)=>{e.exports=which;which.sync=whichSync;var s=process.platform==="win32"||process.env.OSTYPE==="cygwin"||process.env.OSTYPE==="msys";var r=i(71017);var o=s?";":":";var l=i(97126);function getNotFoundError(e){var t=new Error("not found: "+e);t.code="ENOENT";return t}function getPathInfo(e,t){var i=t.colon||o;var r=t.path||process.env.PATH||"";var l=[""];r=r.split(i);var c="";if(s){r.unshift(process.cwd());c=t.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM";l=c.split(i);if(e.indexOf(".")!==-1&&l[0]!=="")l.unshift("")}if(e.match(/\//)||s&&e.match(/\\/))r=[""];return{env:r,ext:l,extExe:c}}function which(e,t,i){if(typeof t==="function"){i=t;t={}}var s=getPathInfo(e,t);var o=s.env;var c=s.ext;var u=s.extExe;var m=[];(function F(s,g){if(s===g){if(t.all&&m.length)return i(null,m);else return i(getNotFoundError(e))}var v=o[s];if(v.charAt(0)==='"'&&v.slice(-1)==='"')v=v.slice(1,-1);var _=r.join(v,e);if(!v&&/^\.[\\\/]/.test(e)){_=e.slice(0,2)+_}(function E(e,r){if(e===r)return F(s+1,g);var o=c[e];l(_+o,{pathExt:u},(function(s,l){if(!s&&l){if(t.all)m.push(_+o);else return i(null,_+o)}return E(e+1,r)}))})(0,c.length)})(0,o.length)}function whichSync(e,t){t=t||{};var i=getPathInfo(e,t);var s=i.env;var o=i.ext;var c=i.extExe;var u=[];for(var m=0,g=s.length;m<g;m++){var v=s[m];if(v.charAt(0)==='"'&&v.slice(-1)==='"')v=v.slice(1,-1);var _=r.join(v,e);if(!v&&/^\.[\\\/]/.test(e)){_=e.slice(0,2)+_}for(var T=0,x=o.length;T<x;T++){var S=_+o[T];var A;try{A=l.sync(S,{pathExt:c});if(A){if(t.all)u.push(S);else return S}}catch(e){}}}if(t.all&&u.length)return u;if(t.nothrow)return null;throw getNotFoundError(e)}},63515:(e,t,i)=>{"use strict";const s=i(22037);const r=i(55447);const o=new Map([["10.0","10"],["6.3","8.1"],["6.2","8"],["6.1","7"],["6.0","Vista"],["5.2","Server 2003"],["5.1","XP"],["5.0","2000"],["4.9","ME"],["4.1","98"],["4.0","95"]]);const windowsRelease=e=>{const t=/\d+\.\d/.exec(e||s.release());if(e&&!t){throw new Error("`release` argument doesn't match `n.n`")}const i=(t||[])[0];if((!e||e===s.release())&&["6.1","6.2","6.3","10.0"].includes(i)){const e=r.sync("wmic",["os","get","Caption"]).stdout||"";const t=(e.match(/2008|2012|2016/)||[])[0];if(t){return`Server ${t}`}}return o.get(i)};e.exports=windowsRelease},62940:e=>{e.exports=wrappy;function wrappy(e,t){if(e&&t)return wrappy(e)(t);if(typeof e!=="function")throw new TypeError("need wrapper function");Object.keys(e).forEach((function(t){wrapper[t]=e[t]}));return wrapper;function wrapper(){var t=new Array(arguments.length);for(var i=0;i<t.length;i++){t[i]=arguments[i]}var s=e.apply(this,t);var r=t[t.length-1];if(typeof s==="function"&&s!==r){Object.keys(r).forEach((function(e){s[e]=r[e]}))}return s}}},88867:(e,t,i)=>{"use strict";const s=i(91518);s.createWebSocketStream=i(41658);s.Server=i(58887);s.Receiver=i(25066);s.Sender=i(36947);s.WebSocket=s;s.WebSocketServer=s.Server;e.exports=s},9436:(e,t,i)=>{"use strict";const{EMPTY_BUFFER:s}=i(15949);function concat(e,t){if(e.length===0)return s;if(e.length===1)return e[0];const i=Buffer.allocUnsafe(t);let r=0;for(let t=0;t<e.length;t++){const s=e[t];i.set(s,r);r+=s.length}if(r<t)return i.slice(0,r);return i}function _mask(e,t,i,s,r){for(let o=0;o<r;o++){i[s+o]=e[o]^t[o&3]}}function _unmask(e,t){for(let i=0;i<e.length;i++){e[i]^=t[i&3]}}function toArrayBuffer(e){if(e.byteLength===e.buffer.byteLength){return e.buffer}return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}function toBuffer(e){toBuffer.readOnly=true;if(Buffer.isBuffer(e))return e;let t;if(e instanceof ArrayBuffer){t=Buffer.from(e)}else if(ArrayBuffer.isView(e)){t=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else{t=Buffer.from(e);toBuffer.readOnly=false}return t}try{const t=i(71269);e.exports={concat:concat,mask(e,i,s,r,o){if(o<48)_mask(e,i,s,r,o);else t.mask(e,i,s,r,o)},toArrayBuffer:toArrayBuffer,toBuffer:toBuffer,unmask(e,i){if(e.length<32)_unmask(e,i);else t.unmask(e,i)}}}catch(t){e.exports={concat:concat,mask:_mask,toArrayBuffer:toArrayBuffer,toBuffer:toBuffer,unmask:_unmask}}},15949:e=>{"use strict";e.exports={BINARY_TYPES:["nodebuffer","arraybuffer","fragments"],EMPTY_BUFFER:Buffer.alloc(0),GUID:"258EAFA5-E914-47DA-95CA-C5AB0DC85B11",kForOnEventAttribute:Symbol("kIsForOnEventAttribute"),kListener:Symbol("kListener"),kStatusCode:Symbol("status-code"),kWebSocket:Symbol("websocket"),NOOP:()=>{}}},64561:(e,t,i)=>{"use strict";const{kForOnEventAttribute:s,kListener:r}=i(15949);const o=Symbol("kCode");const l=Symbol("kData");const c=Symbol("kError");const u=Symbol("kMessage");const m=Symbol("kReason");const g=Symbol("kTarget");const v=Symbol("kType");const _=Symbol("kWasClean");class Event{constructor(e){this[g]=null;this[v]=e}get target(){return this[g]}get type(){return this[v]}}Object.defineProperty(Event.prototype,"target",{enumerable:true});Object.defineProperty(Event.prototype,"type",{enumerable:true});class CloseEvent extends Event{constructor(e,t={}){super(e);this[o]=t.code===undefined?0:t.code;this[m]=t.reason===undefined?"":t.reason;this[_]=t.wasClean===undefined?false:t.wasClean}get code(){return this[o]}get reason(){return this[m]}get wasClean(){return this[_]}}Object.defineProperty(CloseEvent.prototype,"code",{enumerable:true});Object.defineProperty(CloseEvent.prototype,"reason",{enumerable:true});Object.defineProperty(CloseEvent.prototype,"wasClean",{enumerable:true});class ErrorEvent extends Event{constructor(e,t={}){super(e);this[c]=t.error===undefined?null:t.error;this[u]=t.message===undefined?"":t.message}get error(){return this[c]}get message(){return this[u]}}Object.defineProperty(ErrorEvent.prototype,"error",{enumerable:true});Object.defineProperty(ErrorEvent.prototype,"message",{enumerable:true});class MessageEvent extends Event{constructor(e,t={}){super(e);this[l]=t.data===undefined?null:t.data}get data(){return this[l]}}Object.defineProperty(MessageEvent.prototype,"data",{enumerable:true});const T={addEventListener(e,t,i={}){let o;if(e==="message"){o=function onMessage(e,i){const s=new MessageEvent("message",{data:i?e:e.toString()});s[g]=this;t.call(this,s)}}else if(e==="close"){o=function onClose(e,i){const s=new CloseEvent("close",{code:e,reason:i.toString(),wasClean:this._closeFrameReceived&&this._closeFrameSent});s[g]=this;t.call(this,s)}}else if(e==="error"){o=function onError(e){const i=new ErrorEvent("error",{error:e,message:e.message});i[g]=this;t.call(this,i)}}else if(e==="open"){o=function onOpen(){const e=new Event("open");e[g]=this;t.call(this,e)}}else{return}o[s]=!!i[s];o[r]=t;if(i.once){this.once(e,o)}else{this.on(e,o)}},removeEventListener(e,t){for(const i of this.listeners(e)){if(i[r]===t&&!i[s]){this.removeListener(e,i);break}}}};e.exports={CloseEvent:CloseEvent,ErrorEvent:ErrorEvent,Event:Event,EventTarget:T,MessageEvent:MessageEvent}},92035:(e,t,i)=>{"use strict";const{tokenChars:s}=i(86279);function push(e,t,i){if(e[t]===undefined)e[t]=[i];else e[t].push(i)}function parse(e){const t=Object.create(null);let i=Object.create(null);let r=false;let o=false;let l=false;let c;let u;let m=-1;let g=-1;let v=-1;let _=0;for(;_<e.length;_++){g=e.charCodeAt(_);if(c===undefined){if(v===-1&&s[g]===1){if(m===-1)m=_}else if(_!==0&&(g===32||g===9)){if(v===-1&&m!==-1)v=_}else if(g===59||g===44){if(m===-1){throw new SyntaxError(`Unexpected character at index ${_}`)}if(v===-1)v=_;const s=e.slice(m,v);if(g===44){push(t,s,i);i=Object.create(null)}else{c=s}m=v=-1}else{throw new SyntaxError(`Unexpected character at index ${_}`)}}else if(u===undefined){if(v===-1&&s[g]===1){if(m===-1)m=_}else if(g===32||g===9){if(v===-1&&m!==-1)v=_}else if(g===59||g===44){if(m===-1){throw new SyntaxError(`Unexpected character at index ${_}`)}if(v===-1)v=_;push(i,e.slice(m,v),true);if(g===44){push(t,c,i);i=Object.create(null);c=undefined}m=v=-1}else if(g===61&&m!==-1&&v===-1){u=e.slice(m,_);m=v=-1}else{throw new SyntaxError(`Unexpected character at index ${_}`)}}else{if(o){if(s[g]!==1){throw new SyntaxError(`Unexpected character at index ${_}`)}if(m===-1)m=_;else if(!r)r=true;o=false}else if(l){if(s[g]===1){if(m===-1)m=_}else if(g===34&&m!==-1){l=false;v=_}else if(g===92){o=true}else{throw new SyntaxError(`Unexpected character at index ${_}`)}}else if(g===34&&e.charCodeAt(_-1)===61){l=true}else if(v===-1&&s[g]===1){if(m===-1)m=_}else if(m!==-1&&(g===32||g===9)){if(v===-1)v=_}else if(g===59||g===44){if(m===-1){throw new SyntaxError(`Unexpected character at index ${_}`)}if(v===-1)v=_;let s=e.slice(m,v);if(r){s=s.replace(/\\/g,"");r=false}push(i,u,s);if(g===44){push(t,c,i);i=Object.create(null);c=undefined}u=undefined;m=v=-1}else{throw new SyntaxError(`Unexpected character at index ${_}`)}}}if(m===-1||l||g===32||g===9){throw new SyntaxError("Unexpected end of input")}if(v===-1)v=_;const T=e.slice(m,v);if(c===undefined){push(t,T,i)}else{if(u===undefined){push(i,T,true)}else if(r){push(i,u,T.replace(/\\/g,""))}else{push(i,u,T)}push(t,c,i)}return t}function format(e){return Object.keys(e).map((t=>{let i=e[t];if(!Array.isArray(i))i=[i];return i.map((e=>[t].concat(Object.keys(e).map((t=>{let i=e[t];if(!Array.isArray(i))i=[i];return i.map((e=>e===true?t:`${t}=${e}`)).join("; ")}))).join("; "))).join(", ")})).join(", ")}e.exports={format:format,parse:parse}},41356:e=>{"use strict";const t=Symbol("kDone");const i=Symbol("kRun");class Limiter{constructor(e){this[t]=()=>{this.pending--;this[i]()};this.concurrency=e||Infinity;this.jobs=[];this.pending=0}add(e){this.jobs.push(e);this[i]()}[i](){if(this.pending===this.concurrency)return;if(this.jobs.length){const e=this.jobs.shift();this.pending++;e(this[t])}}}e.exports=Limiter},56684:(e,t,i)=>{"use strict";const s=i(59796);const r=i(9436);const o=i(41356);const{kStatusCode:l}=i(15949);const c=Buffer.from([0,0,255,255]);const u=Symbol("permessage-deflate");const m=Symbol("total-length");const g=Symbol("callback");const v=Symbol("buffers");const _=Symbol("error");let T;class PerMessageDeflate{constructor(e,t,i){this._maxPayload=i|0;this._options=e||{};this._threshold=this._options.threshold!==undefined?this._options.threshold:1024;this._isServer=!!t;this._deflate=null;this._inflate=null;this.params=null;if(!T){const e=this._options.concurrencyLimit!==undefined?this._options.concurrencyLimit:10;T=new o(e)}}static get extensionName(){return"permessage-deflate"}offer(){const e={};if(this._options.serverNoContextTakeover){e.server_no_context_takeover=true}if(this._options.clientNoContextTakeover){e.client_no_context_takeover=true}if(this._options.serverMaxWindowBits){e.server_max_window_bits=this._options.serverMaxWindowBits}if(this._options.clientMaxWindowBits){e.client_max_window_bits=this._options.clientMaxWindowBits}else if(this._options.clientMaxWindowBits==null){e.client_max_window_bits=true}return e}accept(e){e=this.normalizeParams(e);this.params=this._isServer?this.acceptAsServer(e):this.acceptAsClient(e);return this.params}cleanup(){if(this._inflate){this._inflate.close();this._inflate=null}if(this._deflate){const e=this._deflate[g];this._deflate.close();this._deflate=null;if(e){e(new Error("The deflate stream was closed while data was being processed"))}}}acceptAsServer(e){const t=this._options;const i=e.find((e=>{if(t.serverNoContextTakeover===false&&e.server_no_context_takeover||e.server_max_window_bits&&(t.serverMaxWindowBits===false||typeof t.serverMaxWindowBits==="number"&&t.serverMaxWindowBits>e.server_max_window_bits)||typeof t.clientMaxWindowBits==="number"&&!e.client_max_window_bits){return false}return true}));if(!i){throw new Error("None of the extension offers can be accepted")}if(t.serverNoContextTakeover){i.server_no_context_takeover=true}if(t.clientNoContextTakeover){i.client_no_context_takeover=true}if(typeof t.serverMaxWindowBits==="number"){i.server_max_window_bits=t.serverMaxWindowBits}if(typeof t.clientMaxWindowBits==="number"){i.client_max_window_bits=t.clientMaxWindowBits}else if(i.client_max_window_bits===true||t.clientMaxWindowBits===false){delete i.client_max_window_bits}return i}acceptAsClient(e){const t=e[0];if(this._options.clientNoContextTakeover===false&&t.client_no_context_takeover){throw new Error('Unexpected parameter "client_no_context_takeover"')}if(!t.client_max_window_bits){if(typeof this._options.clientMaxWindowBits==="number"){t.client_max_window_bits=this._options.clientMaxWindowBits}}else if(this._options.clientMaxWindowBits===false||typeof this._options.clientMaxWindowBits==="number"&&t.client_max_window_bits>this._options.clientMaxWindowBits){throw new Error('Unexpected or invalid parameter "client_max_window_bits"')}return t}normalizeParams(e){e.forEach((e=>{Object.keys(e).forEach((t=>{let i=e[t];if(i.length>1){throw new Error(`Parameter "${t}" must have only a single value`)}i=i[0];if(t==="client_max_window_bits"){if(i!==true){const e=+i;if(!Number.isInteger(e)||e<8||e>15){throw new TypeError(`Invalid value for parameter "${t}": ${i}`)}i=e}else if(!this._isServer){throw new TypeError(`Invalid value for parameter "${t}": ${i}`)}}else if(t==="server_max_window_bits"){const e=+i;if(!Number.isInteger(e)||e<8||e>15){throw new TypeError(`Invalid value for parameter "${t}": ${i}`)}i=e}else if(t==="client_no_context_takeover"||t==="server_no_context_takeover"){if(i!==true){throw new TypeError(`Invalid value for parameter "${t}": ${i}`)}}else{throw new Error(`Unknown parameter "${t}"`)}e[t]=i}))}));return e}decompress(e,t,i){T.add((s=>{this._decompress(e,t,((e,t)=>{s();i(e,t)}))}))}compress(e,t,i){T.add((s=>{this._compress(e,t,((e,t)=>{s();i(e,t)}))}))}_decompress(e,t,i){const o=this._isServer?"client":"server";if(!this._inflate){const e=`${o}_max_window_bits`;const t=typeof this.params[e]!=="number"?s.Z_DEFAULT_WINDOWBITS:this.params[e];this._inflate=s.createInflateRaw({...this._options.zlibInflateOptions,windowBits:t});this._inflate[u]=this;this._inflate[m]=0;this._inflate[v]=[];this._inflate.on("error",inflateOnError);this._inflate.on("data",inflateOnData)}this._inflate[g]=i;this._inflate.write(e);if(t)this._inflate.write(c);this._inflate.flush((()=>{const e=this._inflate[_];if(e){this._inflate.close();this._inflate=null;i(e);return}const s=r.concat(this._inflate[v],this._inflate[m]);if(this._inflate._readableState.endEmitted){this._inflate.close();this._inflate=null}else{this._inflate[m]=0;this._inflate[v]=[];if(t&&this.params[`${o}_no_context_takeover`]){this._inflate.reset()}}i(null,s)}))}_compress(e,t,i){const o=this._isServer?"server":"client";if(!this._deflate){const e=`${o}_max_window_bits`;const t=typeof this.params[e]!=="number"?s.Z_DEFAULT_WINDOWBITS:this.params[e];this._deflate=s.createDeflateRaw({...this._options.zlibDeflateOptions,windowBits:t});this._deflate[m]=0;this._deflate[v]=[];this._deflate.on("data",deflateOnData)}this._deflate[g]=i;this._deflate.write(e);this._deflate.flush(s.Z_SYNC_FLUSH,(()=>{if(!this._deflate){return}let e=r.concat(this._deflate[v],this._deflate[m]);if(t)e=e.slice(0,e.length-4);this._deflate[g]=null;this._deflate[m]=0;this._deflate[v]=[];if(t&&this.params[`${o}_no_context_takeover`]){this._deflate.reset()}i(null,e)}))}}e.exports=PerMessageDeflate;function deflateOnData(e){this[v].push(e);this[m]+=e.length}function inflateOnData(e){this[m]+=e.length;if(this[u]._maxPayload<1||this[m]<=this[u]._maxPayload){this[v].push(e);return}this[_]=new RangeError("Max payload size exceeded");this[_].code="WS_ERR_UNSUPPORTED_MESSAGE_LENGTH";this[_][l]=1009;this.removeListener("data",inflateOnData);this.reset()}function inflateOnError(e){this[u]._inflate=null;e[l]=1007;this[g](e)}},25066:(e,t,i)=>{"use strict";const{Writable:s}=i(12781);const r=i(56684);const{BINARY_TYPES:o,EMPTY_BUFFER:l,kStatusCode:c,kWebSocket:u}=i(15949);const{concat:m,toArrayBuffer:g,unmask:v}=i(9436);const{isValidStatusCode:_,isValidUTF8:T}=i(86279);const x=0;const S=1;const A=2;const I=3;const N=4;const O=5;class Receiver extends s{constructor(e={}){super();this._binaryType=e.binaryType||o[0];this._extensions=e.extensions||{};this._isServer=!!e.isServer;this._maxPayload=e.maxPayload|0;this._skipUTF8Validation=!!e.skipUTF8Validation;this[u]=undefined;this._bufferedBytes=0;this._buffers=[];this._compressed=false;this._payloadLength=0;this._mask=undefined;this._fragmented=0;this._masked=false;this._fin=false;this._opcode=0;this._totalPayloadLength=0;this._messageLength=0;this._fragments=[];this._state=x;this._loop=false}_write(e,t,i){if(this._opcode===8&&this._state==x)return i();this._bufferedBytes+=e.length;this._buffers.push(e);this.startLoop(i)}consume(e){this._bufferedBytes-=e;if(e===this._buffers[0].length)return this._buffers.shift();if(e<this._buffers[0].length){const t=this._buffers[0];this._buffers[0]=t.slice(e);return t.slice(0,e)}const t=Buffer.allocUnsafe(e);do{const i=this._buffers[0];const s=t.length-e;if(e>=i.length){t.set(this._buffers.shift(),s)}else{t.set(new Uint8Array(i.buffer,i.byteOffset,e),s);this._buffers[0]=i.slice(e)}e-=i.length}while(e>0);return t}startLoop(e){let t;this._loop=true;do{switch(this._state){case x:t=this.getInfo();break;case S:t=this.getPayloadLength16();break;case A:t=this.getPayloadLength64();break;case I:this.getMask();break;case N:t=this.getData(e);break;default:this._loop=false;return}}while(this._loop);e(t)}getInfo(){if(this._bufferedBytes<2){this._loop=false;return}const e=this.consume(2);if((e[0]&48)!==0){this._loop=false;return error(RangeError,"RSV2 and RSV3 must be clear",true,1002,"WS_ERR_UNEXPECTED_RSV_2_3")}const t=(e[0]&64)===64;if(t&&!this._extensions[r.extensionName]){this._loop=false;return error(RangeError,"RSV1 must be clear",true,1002,"WS_ERR_UNEXPECTED_RSV_1")}this._fin=(e[0]&128)===128;this._opcode=e[0]&15;this._payloadLength=e[1]&127;if(this._opcode===0){if(t){this._loop=false;return error(RangeError,"RSV1 must be clear",true,1002,"WS_ERR_UNEXPECTED_RSV_1")}if(!this._fragmented){this._loop=false;return error(RangeError,"invalid opcode 0",true,1002,"WS_ERR_INVALID_OPCODE")}this._opcode=this._fragmented}else if(this._opcode===1||this._opcode===2){if(this._fragmented){this._loop=false;return error(RangeError,`invalid opcode ${this._opcode}`,true,1002,"WS_ERR_INVALID_OPCODE")}this._compressed=t}else if(this._opcode>7&&this._opcode<11){if(!this._fin){this._loop=false;return error(RangeError,"FIN must be set",true,1002,"WS_ERR_EXPECTED_FIN")}if(t){this._loop=false;return error(RangeError,"RSV1 must be clear",true,1002,"WS_ERR_UNEXPECTED_RSV_1")}if(this._payloadLength>125){this._loop=false;return error(RangeError,`invalid payload length ${this._payloadLength}`,true,1002,"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH")}}else{this._loop=false;return error(RangeError,`invalid opcode ${this._opcode}`,true,1002,"WS_ERR_INVALID_OPCODE")}if(!this._fin&&!this._fragmented)this._fragmented=this._opcode;this._masked=(e[1]&128)===128;if(this._isServer){if(!this._masked){this._loop=false;return error(RangeError,"MASK must be set",true,1002,"WS_ERR_EXPECTED_MASK")}}else if(this._masked){this._loop=false;return error(RangeError,"MASK must be clear",true,1002,"WS_ERR_UNEXPECTED_MASK")}if(this._payloadLength===126)this._state=S;else if(this._payloadLength===127)this._state=A;else return this.haveLength()}getPayloadLength16(){if(this._bufferedBytes<2){this._loop=false;return}this._payloadLength=this.consume(2).readUInt16BE(0);return this.haveLength()}getPayloadLength64(){if(this._bufferedBytes<8){this._loop=false;return}const e=this.consume(8);const t=e.readUInt32BE(0);if(t>Math.pow(2,53-32)-1){this._loop=false;return error(RangeError,"Unsupported WebSocket frame: payload length > 2^53 - 1",false,1009,"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH")}this._payloadLength=t*Math.pow(2,32)+e.readUInt32BE(4);return this.haveLength()}haveLength(){if(this._payloadLength&&this._opcode<8){this._totalPayloadLength+=this._payloadLength;if(this._totalPayloadLength>this._maxPayload&&this._maxPayload>0){this._loop=false;return error(RangeError,"Max payload size exceeded",false,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH")}}if(this._masked)this._state=I;else this._state=N}getMask(){if(this._bufferedBytes<4){this._loop=false;return}this._mask=this.consume(4);this._state=N}getData(e){let t=l;if(this._payloadLength){if(this._bufferedBytes<this._payloadLength){this._loop=false;return}t=this.consume(this._payloadLength);if(this._masked&&(this._mask[0]|this._mask[1]|this._mask[2]|this._mask[3])!==0){v(t,this._mask)}}if(this._opcode>7)return this.controlMessage(t);if(this._compressed){this._state=O;this.decompress(t,e);return}if(t.length){this._messageLength=this._totalPayloadLength;this._fragments.push(t)}return this.dataMessage()}decompress(e,t){const i=this._extensions[r.extensionName];i.decompress(e,this._fin,((e,i)=>{if(e)return t(e);if(i.length){this._messageLength+=i.length;if(this._messageLength>this._maxPayload&&this._maxPayload>0){return t(error(RangeError,"Max payload size exceeded",false,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"))}this._fragments.push(i)}const s=this.dataMessage();if(s)return t(s);this.startLoop(t)}))}dataMessage(){if(this._fin){const e=this._messageLength;const t=this._fragments;this._totalPayloadLength=0;this._messageLength=0;this._fragmented=0;this._fragments=[];if(this._opcode===2){let i;if(this._binaryType==="nodebuffer"){i=m(t,e)}else if(this._binaryType==="arraybuffer"){i=g(m(t,e))}else{i=t}this.emit("message",i,true)}else{const i=m(t,e);if(!this._skipUTF8Validation&&!T(i)){this._loop=false;return error(Error,"invalid UTF-8 sequence",true,1007,"WS_ERR_INVALID_UTF8")}this.emit("message",i,false)}}this._state=x}controlMessage(e){if(this._opcode===8){this._loop=false;if(e.length===0){this.emit("conclude",1005,l);this.end()}else if(e.length===1){return error(RangeError,"invalid payload length 1",true,1002,"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH")}else{const t=e.readUInt16BE(0);if(!_(t)){return error(RangeError,`invalid status code ${t}`,true,1002,"WS_ERR_INVALID_CLOSE_CODE")}const i=e.slice(2);if(!this._skipUTF8Validation&&!T(i)){return error(Error,"invalid UTF-8 sequence",true,1007,"WS_ERR_INVALID_UTF8")}this.emit("conclude",t,i);this.end()}}else if(this._opcode===9){this.emit("ping",e)}else{this.emit("pong",e)}this._state=x}}e.exports=Receiver;function error(e,t,i,s,r){const o=new e(i?`Invalid WebSocket frame: ${t}`:t);Error.captureStackTrace(o,error);o.code=r;o[c]=s;return o}},36947:(e,t,i)=>{"use strict";const s=i(41808);const r=i(24404);const{randomFillSync:o}=i(6113);const l=i(56684);const{EMPTY_BUFFER:c}=i(15949);const{isValidStatusCode:u}=i(86279);const{mask:m,toBuffer:g}=i(9436);const v=Symbol("kByteLength");const _=Buffer.alloc(4);class Sender{constructor(e,t,i){this._extensions=t||{};if(i){this._generateMask=i;this._maskBuffer=Buffer.alloc(4)}this._socket=e;this._firstFragment=true;this._compress=false;this._bufferedBytes=0;this._deflating=false;this._queue=[]}static frame(e,t){let i;let s=false;let r=2;let l=false;if(t.mask){i=t.maskBuffer||_;if(t.generateMask){t.generateMask(i)}else{o(i,0,4)}l=(i[0]|i[1]|i[2]|i[3])===0;r=6}let c;if(typeof e==="string"){if((!t.mask||l)&&t[v]!==undefined){c=t[v]}else{e=Buffer.from(e);c=e.length}}else{c=e.length;s=t.mask&&t.readOnly&&!l}let u=c;if(c>=65536){r+=8;u=127}else if(c>125){r+=2;u=126}const g=Buffer.allocUnsafe(s?c+r:r);g[0]=t.fin?t.opcode|128:t.opcode;if(t.rsv1)g[0]|=64;g[1]=u;if(u===126){g.writeUInt16BE(c,2)}else if(u===127){g[2]=g[3]=0;g.writeUIntBE(c,4,6)}if(!t.mask)return[g,e];g[1]|=128;g[r-4]=i[0];g[r-3]=i[1];g[r-2]=i[2];g[r-1]=i[3];if(l)return[g,e];if(s){m(e,i,g,r,c);return[g]}m(e,i,e,0,c);return[g,e]}close(e,t,i,s){let r;if(e===undefined){r=c}else if(typeof e!=="number"||!u(e)){throw new TypeError("First argument must be a valid error code number")}else if(t===undefined||!t.length){r=Buffer.allocUnsafe(2);r.writeUInt16BE(e,0)}else{const i=Buffer.byteLength(t);if(i>123){throw new RangeError("The message must not be greater than 123 bytes")}r=Buffer.allocUnsafe(2+i);r.writeUInt16BE(e,0);if(typeof t==="string"){r.write(t,2)}else{r.set(t,2)}}const o={[v]:r.length,fin:true,generateMask:this._generateMask,mask:i,maskBuffer:this._maskBuffer,opcode:8,readOnly:false,rsv1:false};if(this._deflating){this.enqueue([this.dispatch,r,false,o,s])}else{this.sendFrame(Sender.frame(r,o),s)}}ping(e,t,i){let s;let r;if(typeof e==="string"){s=Buffer.byteLength(e);r=false}else{e=g(e);s=e.length;r=g.readOnly}if(s>125){throw new RangeError("The data size must not be greater than 125 bytes")}const o={[v]:s,fin:true,generateMask:this._generateMask,mask:t,maskBuffer:this._maskBuffer,opcode:9,readOnly:r,rsv1:false};if(this._deflating){this.enqueue([this.dispatch,e,false,o,i])}else{this.sendFrame(Sender.frame(e,o),i)}}pong(e,t,i){let s;let r;if(typeof e==="string"){s=Buffer.byteLength(e);r=false}else{e=g(e);s=e.length;r=g.readOnly}if(s>125){throw new RangeError("The data size must not be greater than 125 bytes")}const o={[v]:s,fin:true,generateMask:this._generateMask,mask:t,maskBuffer:this._maskBuffer,opcode:10,readOnly:r,rsv1:false};if(this._deflating){this.enqueue([this.dispatch,e,false,o,i])}else{this.sendFrame(Sender.frame(e,o),i)}}send(e,t,i){const s=this._extensions[l.extensionName];let r=t.binary?2:1;let o=t.compress;let c;let u;if(typeof e==="string"){c=Buffer.byteLength(e);u=false}else{e=g(e);c=e.length;u=g.readOnly}if(this._firstFragment){this._firstFragment=false;if(o&&s&&s.params[s._isServer?"server_no_context_takeover":"client_no_context_takeover"]){o=c>=s._threshold}this._compress=o}else{o=false;r=0}if(t.fin)this._firstFragment=true;if(s){const s={[v]:c,fin:t.fin,generateMask:this._generateMask,mask:t.mask,maskBuffer:this._maskBuffer,opcode:r,readOnly:u,rsv1:o};if(this._deflating){this.enqueue([this.dispatch,e,this._compress,s,i])}else{this.dispatch(e,this._compress,s,i)}}else{this.sendFrame(Sender.frame(e,{[v]:c,fin:t.fin,generateMask:this._generateMask,mask:t.mask,maskBuffer:this._maskBuffer,opcode:r,readOnly:u,rsv1:false}),i)}}dispatch(e,t,i,s){if(!t){this.sendFrame(Sender.frame(e,i),s);return}const r=this._extensions[l.extensionName];this._bufferedBytes+=i[v];this._deflating=true;r.compress(e,i.fin,((e,t)=>{if(this._socket.destroyed){const e=new Error("The socket was closed while data was being compressed");if(typeof s==="function")s(e);for(let t=0;t<this._queue.length;t++){const i=this._queue[t];const s=i[i.length-1];if(typeof s==="function")s(e)}return}this._bufferedBytes-=i[v];this._deflating=false;i.readOnly=false;this.sendFrame(Sender.frame(t,i),s);this.dequeue()}))}dequeue(){while(!this._deflating&&this._queue.length){const e=this._queue.shift();this._bufferedBytes-=e[3][v];Reflect.apply(e[0],this,e.slice(1))}}enqueue(e){this._bufferedBytes+=e[3][v];this._queue.push(e)}sendFrame(e,t){if(e.length===2){this._socket.cork();this._socket.write(e[0]);this._socket.write(e[1],t);this._socket.uncork()}else{this._socket.write(e[0],t)}}}e.exports=Sender},41658:(e,t,i)=>{"use strict";const{Duplex:s}=i(12781);function emitClose(e){e.emit("close")}function duplexOnEnd(){if(!this.destroyed&&this._writableState.finished){this.destroy()}}function duplexOnError(e){this.removeListener("error",duplexOnError);this.destroy();if(this.listenerCount("error")===0){this.emit("error",e)}}function createWebSocketStream(e,t){let i=true;const r=new s({...t,autoDestroy:false,emitClose:false,objectMode:false,writableObjectMode:false});e.on("message",(function message(t,i){const s=!i&&r._readableState.objectMode?t.toString():t;if(!r.push(s))e.pause()}));e.once("error",(function error(e){if(r.destroyed)return;i=false;r.destroy(e)}));e.once("close",(function close(){if(r.destroyed)return;r.push(null)}));r._destroy=function(t,s){if(e.readyState===e.CLOSED){s(t);process.nextTick(emitClose,r);return}let o=false;e.once("error",(function error(e){o=true;s(e)}));e.once("close",(function close(){if(!o)s(t);process.nextTick(emitClose,r)}));if(i)e.terminate()};r._final=function(t){if(e.readyState===e.CONNECTING){e.once("open",(function open(){r._final(t)}));return}if(e._socket===null)return;if(e._socket._writableState.finished){t();if(r._readableState.endEmitted)r.destroy()}else{e._socket.once("finish",(function finish(){t()}));e.close()}};r._read=function(){if(e.isPaused)e.resume()};r._write=function(t,i,s){if(e.readyState===e.CONNECTING){e.once("open",(function open(){r._write(t,i,s)}));return}e.send(t,s)};r.on("end",duplexOnEnd);r.on("error",duplexOnError);return r}e.exports=createWebSocketStream},36668:(e,t,i)=>{"use strict";const{tokenChars:s}=i(86279);function parse(e){const t=new Set;let i=-1;let r=-1;let o=0;for(o;o<e.length;o++){const l=e.charCodeAt(o);if(r===-1&&s[l]===1){if(i===-1)i=o}else if(o!==0&&(l===32||l===9)){if(r===-1&&i!==-1)r=o}else if(l===44){if(i===-1){throw new SyntaxError(`Unexpected character at index ${o}`)}if(r===-1)r=o;const s=e.slice(i,r);if(t.has(s)){throw new SyntaxError(`The "${s}" subprotocol is duplicated`)}t.add(s);i=r=-1}else{throw new SyntaxError(`Unexpected character at index ${o}`)}}if(i===-1||r!==-1){throw new SyntaxError("Unexpected end of input")}const l=e.slice(i,o);if(t.has(l)){throw new SyntaxError(`The "${l}" subprotocol is duplicated`)}t.add(l);return t}e.exports={parse:parse}},86279:(e,t,i)=>{"use strict";const s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0];function isValidStatusCode(e){return e>=1e3&&e<=1014&&e!==1004&&e!==1005&&e!==1006||e>=3e3&&e<=4999}function _isValidUTF8(e){const t=e.length;let i=0;while(i<t){if((e[i]&128)===0){i++}else if((e[i]&224)===192){if(i+1===t||(e[i+1]&192)!==128||(e[i]&254)===192){return false}i+=2}else if((e[i]&240)===224){if(i+2>=t||(e[i+1]&192)!==128||(e[i+2]&192)!==128||e[i]===224&&(e[i+1]&224)===128||e[i]===237&&(e[i+1]&224)===160){return false}i+=3}else if((e[i]&248)===240){if(i+3>=t||(e[i+1]&192)!==128||(e[i+2]&192)!==128||(e[i+3]&192)!==128||e[i]===240&&(e[i+1]&240)===128||e[i]===244&&e[i+1]>143||e[i]>244){return false}i+=4}else{return false}}return true}try{const t=i(24592);e.exports={isValidStatusCode:isValidStatusCode,isValidUTF8(e){return e.length<150?_isValidUTF8(e):t(e)},tokenChars:s}}catch(t){e.exports={isValidStatusCode:isValidStatusCode,isValidUTF8:_isValidUTF8,tokenChars:s}}},58887:(e,t,i)=>{"use strict";const s=i(82361);const r=i(13685);const o=i(95687);const l=i(41808);const c=i(24404);const{createHash:u}=i(6113);const m=i(92035);const g=i(56684);const v=i(36668);const _=i(91518);const{GUID:T,kWebSocket:x}=i(15949);const S=/^[+/0-9A-Za-z]{22}==$/;const A=0;const I=1;const N=2;class WebSocketServer extends s{constructor(e,t){super();e={maxPayload:100*1024*1024,skipUTF8Validation:false,perMessageDeflate:false,handleProtocols:null,clientTracking:true,verifyClient:null,noServer:false,backlog:null,server:null,host:null,path:null,port:null,WebSocket:_,...e};if(e.port==null&&!e.server&&!e.noServer||e.port!=null&&(e.server||e.noServer)||e.server&&e.noServer){throw new TypeError('One and only one of the "port", "server", or "noServer" options '+"must be specified")}if(e.port!=null){this._server=r.createServer(((e,t)=>{const i=r.STATUS_CODES[426];t.writeHead(426,{"Content-Length":i.length,"Content-Type":"text/plain"});t.end(i)}));this._server.listen(e.port,e.host,e.backlog,t)}else if(e.server){this._server=e.server}if(this._server){const e=this.emit.bind(this,"connection");this._removeListeners=addListeners(this._server,{listening:this.emit.bind(this,"listening"),error:this.emit.bind(this,"error"),upgrade:(t,i,s)=>{this.handleUpgrade(t,i,s,e)}})}if(e.perMessageDeflate===true)e.perMessageDeflate={};if(e.clientTracking){this.clients=new Set;this._shouldEmitClose=false}this.options=e;this._state=A}address(){if(this.options.noServer){throw new Error('The server is operating in "noServer" mode')}if(!this._server)return null;return this._server.address()}close(e){if(this._state===N){if(e){this.once("close",(()=>{e(new Error("The server is not running"))}))}process.nextTick(emitClose,this);return}if(e)this.once("close",e);if(this._state===I)return;this._state=I;if(this.options.noServer||this.options.server){if(this._server){this._removeListeners();this._removeListeners=this._server=null}if(this.clients){if(!this.clients.size){process.nextTick(emitClose,this)}else{this._shouldEmitClose=true}}else{process.nextTick(emitClose,this)}}else{const e=this._server;this._removeListeners();this._removeListeners=this._server=null;e.close((()=>{emitClose(this)}))}}shouldHandle(e){if(this.options.path){const t=e.url.indexOf("?");const i=t!==-1?e.url.slice(0,t):e.url;if(i!==this.options.path)return false}return true}handleUpgrade(e,t,i,s){t.on("error",socketOnError);const r=e.headers["sec-websocket-key"]!==undefined?e.headers["sec-websocket-key"]:false;const o=+e.headers["sec-websocket-version"];if(e.method!=="GET"||e.headers.upgrade.toLowerCase()!=="websocket"||!r||!S.test(r)||o!==8&&o!==13||!this.shouldHandle(e)){return abortHandshake(t,400)}const l=e.headers["sec-websocket-protocol"];let c=new Set;if(l!==undefined){try{c=v.parse(l)}catch(e){return abortHandshake(t,400)}}const u=e.headers["sec-websocket-extensions"];const _={};if(this.options.perMessageDeflate&&u!==undefined){const e=new g(this.options.perMessageDeflate,true,this.options.maxPayload);try{const t=m.parse(u);if(t[g.extensionName]){e.accept(t[g.extensionName]);_[g.extensionName]=e}}catch(e){return abortHandshake(t,400)}}if(this.options.verifyClient){const l={origin:e.headers[`${o===8?"sec-websocket-origin":"origin"}`],secure:!!(e.socket.authorized||e.socket.encrypted),req:e};if(this.options.verifyClient.length===2){this.options.verifyClient(l,((o,l,u,m)=>{if(!o){return abortHandshake(t,l||401,u,m)}this.completeUpgrade(_,r,c,e,t,i,s)}));return}if(!this.options.verifyClient(l))return abortHandshake(t,401)}this.completeUpgrade(_,r,c,e,t,i,s)}completeUpgrade(e,t,i,s,r,o,l){if(!r.readable||!r.writable)return r.destroy();if(r[x]){throw new Error("server.handleUpgrade() was called more than once with the same "+"socket, possibly due to a misconfiguration")}if(this._state>A)return abortHandshake(r,503);const c=u("sha1").update(t+T).digest("base64");const v=["HTTP/1.1 101 Switching Protocols","Upgrade: websocket","Connection: Upgrade",`Sec-WebSocket-Accept: ${c}`];const _=new this.options.WebSocket(null);if(i.size){const e=this.options.handleProtocols?this.options.handleProtocols(i,s):i.values().next().value;if(e){v.push(`Sec-WebSocket-Protocol: ${e}`);_._protocol=e}}if(e[g.extensionName]){const t=e[g.extensionName].params;const i=m.format({[g.extensionName]:[t]});v.push(`Sec-WebSocket-Extensions: ${i}`);_._extensions=e}this.emit("headers",v,s);r.write(v.concat("\r\n").join("\r\n"));r.removeListener("error",socketOnError);_.setSocket(r,o,{maxPayload:this.options.maxPayload,skipUTF8Validation:this.options.skipUTF8Validation});if(this.clients){this.clients.add(_);_.on("close",(()=>{this.clients.delete(_);if(this._shouldEmitClose&&!this.clients.size){process.nextTick(emitClose,this)}}))}l(_,s)}}e.exports=WebSocketServer;function addListeners(e,t){for(const i of Object.keys(t))e.on(i,t[i]);return function removeListeners(){for(const i of Object.keys(t)){e.removeListener(i,t[i])}}}function emitClose(e){e._state=N;e.emit("close")}function socketOnError(){this.destroy()}function abortHandshake(e,t,i,s){if(e.writable){i=i||r.STATUS_CODES[t];s={Connection:"close","Content-Type":"text/html","Content-Length":Buffer.byteLength(i),...s};e.write(`HTTP/1.1 ${t} ${r.STATUS_CODES[t]}\r\n`+Object.keys(s).map((e=>`${e}: ${s[e]}`)).join("\r\n")+"\r\n\r\n"+i)}e.removeListener("error",socketOnError);e.destroy()}},91518:(e,t,i)=>{"use strict";const s=i(82361);const r=i(95687);const o=i(13685);const l=i(41808);const c=i(24404);const{randomBytes:u,createHash:m}=i(6113);const{Readable:g}=i(12781);const{URL:v}=i(57310);const _=i(56684);const T=i(25066);const x=i(36947);const{BINARY_TYPES:S,EMPTY_BUFFER:A,GUID:I,kForOnEventAttribute:N,kListener:O,kStatusCode:R,kWebSocket:k,NOOP:P}=i(15949);const{EventTarget:{addEventListener:M,removeEventListener:q}}=i(64561);const{format:G,parse:j}=i(92035);const{toBuffer:B}=i(9436);const H=["CONNECTING","OPEN","CLOSING","CLOSED"];const $=/^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/;const z=[8,13];const W=30*1e3;class WebSocket extends s{constructor(e,t,i){super();this._binaryType=S[0];this._closeCode=1006;this._closeFrameReceived=false;this._closeFrameSent=false;this._closeMessage=A;this._closeTimer=null;this._extensions={};this._paused=false;this._protocol="";this._readyState=WebSocket.CONNECTING;this._receiver=null;this._sender=null;this._socket=null;if(e!==null){this._bufferedAmount=0;this._isServer=false;this._redirects=0;if(t===undefined){t=[]}else if(!Array.isArray(t)){if(typeof t==="object"&&t!==null){i=t;t=[]}else{t=[t]}}initAsClient(this,e,t,i)}else{this._isServer=true}}get binaryType(){return this._binaryType}set binaryType(e){if(!S.includes(e))return;this._binaryType=e;if(this._receiver)this._receiver._binaryType=e}get bufferedAmount(){if(!this._socket)return this._bufferedAmount;return this._socket._writableState.length+this._sender._bufferedBytes}get extensions(){return Object.keys(this._extensions).join()}get isPaused(){return this._paused}get onclose(){return null}get onerror(){return null}get onopen(){return null}get onmessage(){return null}get protocol(){return this._protocol}get readyState(){return this._readyState}get url(){return this._url}setSocket(e,t,i){const s=new T({binaryType:this.binaryType,extensions:this._extensions,isServer:this._isServer,maxPayload:i.maxPayload,skipUTF8Validation:i.skipUTF8Validation});this._sender=new x(e,this._extensions,i.generateMask);this._receiver=s;this._socket=e;s[k]=this;e[k]=this;s.on("conclude",receiverOnConclude);s.on("drain",receiverOnDrain);s.on("error",receiverOnError);s.on("message",receiverOnMessage);s.on("ping",receiverOnPing);s.on("pong",receiverOnPong);e.setTimeout(0);e.setNoDelay();if(t.length>0)e.unshift(t);e.on("close",socketOnClose);e.on("data",socketOnData);e.on("end",socketOnEnd);e.on("error",socketOnError);this._readyState=WebSocket.OPEN;this.emit("open")}emitClose(){if(!this._socket){this._readyState=WebSocket.CLOSED;this.emit("close",this._closeCode,this._closeMessage);return}if(this._extensions[_.extensionName]){this._extensions[_.extensionName].cleanup()}this._receiver.removeAllListeners();this._readyState=WebSocket.CLOSED;this.emit("close",this._closeCode,this._closeMessage)}close(e,t){if(this.readyState===WebSocket.CLOSED)return;if(this.readyState===WebSocket.CONNECTING){const e="WebSocket was closed before the connection was established";return abortHandshake(this,this._req,e)}if(this.readyState===WebSocket.CLOSING){if(this._closeFrameSent&&(this._closeFrameReceived||this._receiver._writableState.errorEmitted)){this._socket.end()}return}this._readyState=WebSocket.CLOSING;this._sender.close(e,t,!this._isServer,(e=>{if(e)return;this._closeFrameSent=true;if(this._closeFrameReceived||this._receiver._writableState.errorEmitted){this._socket.end()}}));this._closeTimer=setTimeout(this._socket.destroy.bind(this._socket),W)}pause(){if(this.readyState===WebSocket.CONNECTING||this.readyState===WebSocket.CLOSED){return}this._paused=true;this._socket.pause()}ping(e,t,i){if(this.readyState===WebSocket.CONNECTING){throw new Error("WebSocket is not open: readyState 0 (CONNECTING)")}if(typeof e==="function"){i=e;e=t=undefined}else if(typeof t==="function"){i=t;t=undefined}if(typeof e==="number")e=e.toString();if(this.readyState!==WebSocket.OPEN){sendAfterClose(this,e,i);return}if(t===undefined)t=!this._isServer;this._sender.ping(e||A,t,i)}pong(e,t,i){if(this.readyState===WebSocket.CONNECTING){throw new Error("WebSocket is not open: readyState 0 (CONNECTING)")}if(typeof e==="function"){i=e;e=t=undefined}else if(typeof t==="function"){i=t;t=undefined}if(typeof e==="number")e=e.toString();if(this.readyState!==WebSocket.OPEN){sendAfterClose(this,e,i);return}if(t===undefined)t=!this._isServer;this._sender.pong(e||A,t,i)}resume(){if(this.readyState===WebSocket.CONNECTING||this.readyState===WebSocket.CLOSED){return}this._paused=false;if(!this._receiver._writableState.needDrain)this._socket.resume()}send(e,t,i){if(this.readyState===WebSocket.CONNECTING){throw new Error("WebSocket is not open: readyState 0 (CONNECTING)")}if(typeof t==="function"){i=t;t={}}if(typeof e==="number")e=e.toString();if(this.readyState!==WebSocket.OPEN){sendAfterClose(this,e,i);return}const s={binary:typeof e!=="string",mask:!this._isServer,compress:true,fin:true,...t};if(!this._extensions[_.extensionName]){s.compress=false}this._sender.send(e||A,s,i)}terminate(){if(this.readyState===WebSocket.CLOSED)return;if(this.readyState===WebSocket.CONNECTING){const e="WebSocket was closed before the connection was established";return abortHandshake(this,this._req,e)}if(this._socket){this._readyState=WebSocket.CLOSING;this._socket.destroy()}}}Object.defineProperty(WebSocket,"CONNECTING",{enumerable:true,value:H.indexOf("CONNECTING")});Object.defineProperty(WebSocket.prototype,"CONNECTING",{enumerable:true,value:H.indexOf("CONNECTING")});Object.defineProperty(WebSocket,"OPEN",{enumerable:true,value:H.indexOf("OPEN")});Object.defineProperty(WebSocket.prototype,"OPEN",{enumerable:true,value:H.indexOf("OPEN")});Object.defineProperty(WebSocket,"CLOSING",{enumerable:true,value:H.indexOf("CLOSING")});Object.defineProperty(WebSocket.prototype,"CLOSING",{enumerable:true,value:H.indexOf("CLOSING")});Object.defineProperty(WebSocket,"CLOSED",{enumerable:true,value:H.indexOf("CLOSED")});Object.defineProperty(WebSocket.prototype,"CLOSED",{enumerable:true,value:H.indexOf("CLOSED")});["binaryType","bufferedAmount","extensions","isPaused","protocol","readyState","url"].forEach((e=>{Object.defineProperty(WebSocket.prototype,e,{enumerable:true})}));["open","error","close","message"].forEach((e=>{Object.defineProperty(WebSocket.prototype,`on${e}`,{enumerable:true,get(){for(const t of this.listeners(e)){if(t[N])return t[O]}return null},set(t){for(const t of this.listeners(e)){if(t[N]){this.removeListener(e,t);break}}if(typeof t!=="function")return;this.addEventListener(e,t,{[N]:true})}})}));WebSocket.prototype.addEventListener=M;WebSocket.prototype.removeEventListener=q;e.exports=WebSocket;function initAsClient(e,t,i,s){const l={protocolVersion:z[1],maxPayload:100*1024*1024,skipUTF8Validation:false,perMessageDeflate:true,followRedirects:false,maxRedirects:10,...s,createConnection:undefined,socketPath:undefined,hostname:undefined,protocol:undefined,timeout:undefined,method:undefined,host:undefined,path:undefined,port:undefined};if(!z.includes(l.protocolVersion)){throw new RangeError(`Unsupported protocol version: ${l.protocolVersion} `+`(supported versions: ${z.join(", ")})`)}let c;if(t instanceof v){c=t;e._url=t.href}else{try{c=new v(t)}catch(e){throw new SyntaxError(`Invalid URL: ${t}`)}e._url=t}const g=c.protocol==="wss:";const T=c.protocol==="ws+unix:";let x;if(c.protocol!=="ws:"&&!g&&!T){x='The URL\'s protocol must be one of "ws:", "wss:", or "ws+unix:"'}else if(T&&!c.pathname){x="The URL's pathname is empty"}else if(c.hash){x="The URL contains a fragment identifier"}if(x){const t=new SyntaxError(x);if(e._redirects===0){throw t}else{emitErrorAndClose(e,t);return}}const S=g?443:80;const A=u(16).toString("base64");const N=g?r.get:o.get;const O=new Set;let R;l.createConnection=g?tlsConnect:netConnect;l.defaultPort=l.defaultPort||S;l.port=c.port||S;l.host=c.hostname.startsWith("[")?c.hostname.slice(1,-1):c.hostname;l.headers={"Sec-WebSocket-Version":l.protocolVersion,"Sec-WebSocket-Key":A,Connection:"Upgrade",Upgrade:"websocket",...l.headers};l.path=c.pathname+c.search;l.timeout=l.handshakeTimeout;if(l.perMessageDeflate){R=new _(l.perMessageDeflate!==true?l.perMessageDeflate:{},false,l.maxPayload);l.headers["Sec-WebSocket-Extensions"]=G({[_.extensionName]:R.offer()})}if(i.length){for(const e of i){if(typeof e!=="string"||!$.test(e)||O.has(e)){throw new SyntaxError("An invalid or duplicated subprotocol was specified")}O.add(e)}l.headers["Sec-WebSocket-Protocol"]=i.join(",")}if(l.origin){if(l.protocolVersion<13){l.headers["Sec-WebSocket-Origin"]=l.origin}else{l.headers.Origin=l.origin}}if(c.username||c.password){l.auth=`${c.username}:${c.password}`}if(T){const e=l.path.split(":");l.socketPath=e[0];l.path=e[1]}if(l.followRedirects){if(e._redirects===0){e._originalHost=c.host;const t=s&&s.headers;s={...s,headers:{}};if(t){for(const[e,i]of Object.entries(t)){s.headers[e.toLowerCase()]=i}}}else if(c.host!==e._originalHost){delete l.headers.authorization;delete l.headers.cookie;delete l.headers.host;l.auth=undefined}if(l.auth&&!s.headers.authorization){s.headers.authorization="Basic "+Buffer.from(l.auth).toString("base64")}}let k=e._req=N(l);if(l.timeout){k.on("timeout",(()=>{abortHandshake(e,k,"Opening handshake has timed out")}))}k.on("error",(t=>{if(k===null||k.aborted)return;k=e._req=null;emitErrorAndClose(e,t)}));k.on("response",(r=>{const o=r.headers.location;const c=r.statusCode;if(o&&l.followRedirects&&c>=300&&c<400){if(++e._redirects>l.maxRedirects){abortHandshake(e,k,"Maximum redirects exceeded");return}k.abort();let r;try{r=new v(o,t)}catch(t){const i=new SyntaxError(`Invalid URL: ${o}`);emitErrorAndClose(e,i);return}initAsClient(e,r,i,s)}else if(!e.emit("unexpected-response",k,r)){abortHandshake(e,k,`Unexpected server response: ${r.statusCode}`)}}));k.on("upgrade",((t,i,s)=>{e.emit("upgrade",t);if(e.readyState!==WebSocket.CONNECTING)return;k=e._req=null;const r=m("sha1").update(A+I).digest("base64");if(t.headers["sec-websocket-accept"]!==r){abortHandshake(e,i,"Invalid Sec-WebSocket-Accept header");return}const o=t.headers["sec-websocket-protocol"];let c;if(o!==undefined){if(!O.size){c="Server sent a subprotocol but none was requested"}else if(!O.has(o)){c="Server sent an invalid subprotocol"}}else if(O.size){c="Server sent no subprotocol"}if(c){abortHandshake(e,i,c);return}if(o)e._protocol=o;const u=t.headers["sec-websocket-extensions"];if(u!==undefined){if(!R){const t="Server sent a Sec-WebSocket-Extensions header but no extension "+"was requested";abortHandshake(e,i,t);return}let t;try{t=j(u)}catch(t){const s="Invalid Sec-WebSocket-Extensions header";abortHandshake(e,i,s);return}const s=Object.keys(t);if(s.length!==1||s[0]!==_.extensionName){const t="Server indicated an extension that was not requested";abortHandshake(e,i,t);return}try{R.accept(t[_.extensionName])}catch(t){const s="Invalid Sec-WebSocket-Extensions header";abortHandshake(e,i,s);return}e._extensions[_.extensionName]=R}e.setSocket(i,s,{generateMask:l.generateMask,maxPayload:l.maxPayload,skipUTF8Validation:l.skipUTF8Validation})}))}function emitErrorAndClose(e,t){e._readyState=WebSocket.CLOSING;e.emit("error",t);e.emitClose()}function netConnect(e){e.path=e.socketPath;return l.connect(e)}function tlsConnect(e){e.path=undefined;if(!e.servername&&e.servername!==""){e.servername=l.isIP(e.host)?"":e.host}return c.connect(e)}function abortHandshake(e,t,i){e._readyState=WebSocket.CLOSING;const s=new Error(i);Error.captureStackTrace(s,abortHandshake);if(t.setHeader){t.abort();if(t.socket&&!t.socket.destroyed){t.socket.destroy()}t.once("abort",e.emitClose.bind(e));e.emit("error",s)}else{t.destroy(s);t.once("error",e.emit.bind(e,"error"));t.once("close",e.emitClose.bind(e))}}function sendAfterClose(e,t,i){if(t){const i=B(t).length;if(e._socket)e._sender._bufferedBytes+=i;else e._bufferedAmount+=i}if(i){const t=new Error(`WebSocket is not open: readyState ${e.readyState} `+`(${H[e.readyState]})`);i(t)}}function receiverOnConclude(e,t){const i=this[k];i._closeFrameReceived=true;i._closeMessage=t;i._closeCode=e;if(i._socket[k]===undefined)return;i._socket.removeListener("data",socketOnData);process.nextTick(resume,i._socket);if(e===1005)i.close();else i.close(e,t)}function receiverOnDrain(){const e=this[k];if(!e.isPaused)e._socket.resume()}function receiverOnError(e){const t=this[k];if(t._socket[k]!==undefined){t._socket.removeListener("data",socketOnData);process.nextTick(resume,t._socket);t.close(e[R])}t.emit("error",e)}function receiverOnFinish(){this[k].emitClose()}function receiverOnMessage(e,t){this[k].emit("message",e,t)}function receiverOnPing(e){const t=this[k];t.pong(e,!t._isServer,P);t.emit("ping",e)}function receiverOnPong(e){this[k].emit("pong",e)}function resume(e){e.resume()}function socketOnClose(){const e=this[k];this.removeListener("close",socketOnClose);this.removeListener("data",socketOnData);this.removeListener("end",socketOnEnd);e._readyState=WebSocket.CLOSING;let t;if(!this._readableState.endEmitted&&!e._closeFrameReceived&&!e._receiver._writableState.errorEmitted&&(t=e._socket.read())!==null){e._receiver.write(t)}e._receiver.end();this[k]=undefined;clearTimeout(e._closeTimer);if(e._receiver._writableState.finished||e._receiver._writableState.errorEmitted){e.emitClose()}else{e._receiver.on("error",receiverOnFinish);e._receiver.on("finish",receiverOnFinish)}}function socketOnData(e){if(!this[k]._receiver.write(e)){this.pause()}}function socketOnEnd(){const e=this[k];e._readyState=WebSocket.CLOSING;e._receiver.end();this.end()}function socketOnError(){const e=this[k];this.removeListener("error",socketOnError);this.on("error",P);if(e){e._readyState=WebSocket.CLOSING;this.destroy()}}},69892:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.setErrorMap=t.overrideErrorMap=t.defaultErrorMap=t.ZodError=t.quotelessJson=t.ZodIssueCode=void 0;const s=i(3985);t.ZodIssueCode=s.util.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of"]);const quotelessJson=e=>{const t=JSON.stringify(e,null,2);return t.replace(/"([^"]+)":/g,"$1:")};t.quotelessJson=quotelessJson;class ZodError extends Error{constructor(e){super();this.issues=[];this.format=()=>{const e={_errors:[]};const processError=t=>{for(const i of t.issues){if(i.code==="invalid_union"){i.unionErrors.map(processError)}else if(i.code==="invalid_return_type"){processError(i.returnTypeError)}else if(i.code==="invalid_arguments"){processError(i.argumentsError)}else if(i.path.length===0){e._errors.push(i.message)}else{let t=e;let s=0;while(s<i.path.length){const e=i.path[s];const r=s===i.path.length-1;if(!r){if(typeof e==="string"){t[e]=t[e]||{_errors:[]}}else if(typeof e==="number"){const i=[];i._errors=[];t[e]=t[e]||i}}else{t[e]=t[e]||{_errors:[]};t[e]._errors.push(i.message)}t=t[e];s++}}}};processError(this);return e};this.addIssue=e=>{this.issues=[...this.issues,e]};this.addIssues=(e=[])=>{this.issues=[...this.issues,...e]};const t=new.target.prototype;if(Object.setPrototypeOf){Object.setPrototypeOf(this,t)}else{this.__proto__=t}this.name="ZodError";this.issues=e}get errors(){return this.issues}toString(){return this.message}get message(){return JSON.stringify(this.issues,null,2)}get isEmpty(){return this.issues.length===0}flatten(e=(e=>e.message)){const t={};const i=[];for(const s of this.issues){if(s.path.length>0){t[s.path[0]]=t[s.path[0]]||[];t[s.path[0]].push(e(s))}else{i.push(e(s))}}return{formErrors:i,fieldErrors:t}}get formErrors(){return this.flatten()}}t.ZodError=ZodError;ZodError.create=e=>{const t=new ZodError(e);return t};const defaultErrorMap=(e,i)=>{let r;switch(e.code){case t.ZodIssueCode.invalid_type:if(e.received==="undefined"){r="Required"}else{r=`Expected ${e.expected}, received ${e.received}`}break;case t.ZodIssueCode.invalid_literal:r=`Invalid literal value, expected ${JSON.stringify(e.expected)}`;break;case t.ZodIssueCode.unrecognized_keys:r=`Unrecognized key(s) in object: ${e.keys.map((e=>`'${e}'`)).join(", ")}`;break;case t.ZodIssueCode.invalid_union:r=`Invalid input`;break;case t.ZodIssueCode.invalid_union_discriminator:r=`Invalid discriminator value. Expected ${e.options.map((e=>typeof e==="string"?`'${e}'`:e)).join(" | ")}`;break;case t.ZodIssueCode.invalid_enum_value:r=`Invalid enum value. Expected ${e.options.map((e=>typeof e==="string"?`'${e}'`:e)).join(" | ")}`;break;case t.ZodIssueCode.invalid_arguments:r=`Invalid function arguments`;break;case t.ZodIssueCode.invalid_return_type:r=`Invalid function return type`;break;case t.ZodIssueCode.invalid_date:r=`Invalid date`;break;case t.ZodIssueCode.invalid_string:if(e.validation!=="regex")r=`Invalid ${e.validation}`;else r="Invalid";break;case t.ZodIssueCode.too_small:if(e.type==="array")r=`Array must contain ${e.inclusive?`at least`:`more than`} ${e.minimum} element(s)`;else if(e.type==="string")r=`String must contain ${e.inclusive?`at least`:`over`} ${e.minimum} character(s)`;else if(e.type==="number")r=`Number must be greater than ${e.inclusive?`or equal to `:``}${e.minimum}`;else r="Invalid input";break;case t.ZodIssueCode.too_big:if(e.type==="array")r=`Array must contain ${e.inclusive?`at most`:`less than`} ${e.maximum} element(s)`;else if(e.type==="string")r=`String must contain ${e.inclusive?`at most`:`under`} ${e.maximum} character(s)`;else if(e.type==="number")r=`Number must be less than ${e.inclusive?`or equal to `:``}${e.maximum}`;else r="Invalid input";break;case t.ZodIssueCode.custom:r=`Invalid input`;break;case t.ZodIssueCode.invalid_intersection_types:r=`Intersection results could not be merged`;break;case t.ZodIssueCode.not_multiple_of:r=`Number must be a multiple of ${e.multipleOf}`;break;default:r=i.defaultError;s.util.assertNever(e)}return{message:r}};t.defaultErrorMap=defaultErrorMap;t.overrideErrorMap=t.defaultErrorMap;const setErrorMap=e=>{t.overrideErrorMap=e};t.setErrorMap=setErrorMap},49906:function(e,t,i){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,i,s){if(s===undefined)s=i;var r=Object.getOwnPropertyDescriptor(t,i);if(!r||("get"in r?!t.__esModule:r.writable||r.configurable)){r={enumerable:true,get:function(){return t[i]}}}Object.defineProperty(e,s,r)}:function(e,t,i,s){if(s===undefined)s=i;e[s]=t[i]});var r=this&&this.__exportStar||function(e,t){for(var i in e)if(i!=="default"&&!Object.prototype.hasOwnProperty.call(t,i))s(t,e,i)};Object.defineProperty(t,"__esModule",{value:true});r(i(10888),t);r(i(19449),t);r(i(19335),t);r(i(69892),t)},42513:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.errorUtil=void 0;var i;(function(e){e.errToObj=e=>typeof e==="string"?{message:e}:e||{};e.toString=e=>typeof e==="string"?e:e===null||e===void 0?void 0:e.message})(i=t.errorUtil||(t.errorUtil={}))},10888:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.isAsync=t.isValid=t.isDirty=t.isAborted=t.OK=t.DIRTY=t.INVALID=t.ParseStatus=t.addIssueToContext=t.EMPTY_PATH=t.makeIssue=t.getParsedType=t.ZodParsedType=void 0;const s=i(69892);const r=i(3985);t.ZodParsedType=r.util.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]);const getParsedType=e=>{const i=typeof e;switch(i){case"undefined":return t.ZodParsedType.undefined;case"string":return t.ZodParsedType.string;case"number":return isNaN(e)?t.ZodParsedType.nan:t.ZodParsedType.number;case"boolean":return t.ZodParsedType.boolean;case"function":return t.ZodParsedType.function;case"bigint":return t.ZodParsedType.bigint;case"object":if(Array.isArray(e)){return t.ZodParsedType.array}if(e===null){return t.ZodParsedType.null}if(e.then&&typeof e.then==="function"&&e.catch&&typeof e.catch==="function"){return t.ZodParsedType.promise}if(typeof Map!=="undefined"&&e instanceof Map){return t.ZodParsedType.map}if(typeof Set!=="undefined"&&e instanceof Set){return t.ZodParsedType.set}if(typeof Date!=="undefined"&&e instanceof Date){return t.ZodParsedType.date}return t.ZodParsedType.object;default:return t.ZodParsedType.unknown}};t.getParsedType=getParsedType;const makeIssue=e=>{const{data:t,path:i,errorMaps:s,issueData:r}=e;const o=[...i,...r.path||[]];const l={...r,path:o};let c="";const u=s.filter((e=>!!e)).slice().reverse();for(const e of u){c=e(l,{data:t,defaultError:c}).message}return{...r,path:o,message:r.message||c}};t.makeIssue=makeIssue;t.EMPTY_PATH=[];function addIssueToContext(e,i){const r=(0,t.makeIssue)({issueData:i,data:e.data,path:e.path,errorMaps:[e.common.contextualErrorMap,e.schemaErrorMap,s.overrideErrorMap,s.defaultErrorMap].filter((e=>!!e))});e.common.issues.push(r)}t.addIssueToContext=addIssueToContext;class ParseStatus{constructor(){this.value="valid"}dirty(){if(this.value==="valid")this.value="dirty"}abort(){if(this.value!=="aborted")this.value="aborted"}static mergeArray(e,i){const s=[];for(const r of i){if(r.status==="aborted")return t.INVALID;if(r.status==="dirty")e.dirty();s.push(r.value)}return{status:e.value,value:s}}static async mergeObjectAsync(e,t){const i=[];for(const e of t){i.push({key:await e.key,value:await e.value})}return ParseStatus.mergeObjectSync(e,i)}static mergeObjectSync(e,i){const s={};for(const r of i){const{key:i,value:o}=r;if(i.status==="aborted")return t.INVALID;if(o.status==="aborted")return t.INVALID;if(i.status==="dirty")e.dirty();if(o.status==="dirty")e.dirty();if(typeof o.value!=="undefined"||r.alwaysSet){s[i.value]=o.value}}return{status:e.value,value:s}}}t.ParseStatus=ParseStatus;t.INVALID=Object.freeze({status:"aborted"});const DIRTY=e=>({status:"dirty",value:e});t.DIRTY=DIRTY;const OK=e=>({status:"valid",value:e});t.OK=OK;const isAborted=e=>e.status==="aborted";t.isAborted=isAborted;const isDirty=e=>e.status==="dirty";t.isDirty=isDirty;const isValid=e=>e.status==="valid";t.isValid=isValid;const isAsync=e=>typeof Promise!==undefined&&e instanceof Promise;t.isAsync=isAsync},19449:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true})},3985:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.util=void 0;var i;(function(e){function assertNever(e){throw new Error}e.assertNever=assertNever;e.arrayToEnum=e=>{const t={};for(const i of e){t[i]=i}return t};e.getValidEnumValues=t=>{const i=e.objectKeys(t).filter((e=>typeof t[t[e]]!=="number"));const s={};for(const e of i){s[e]=t[e]}return e.objectValues(s)};e.objectValues=t=>e.objectKeys(t).map((function(e){return t[e]}));e.objectKeys=typeof Object.keys==="function"?e=>Object.keys(e):e=>{const t=[];for(const i in e){if(Object.prototype.hasOwnProperty.call(e,i)){t.push(i)}}return t};e.find=(e,t)=>{for(const i of e){if(t(i))return i}return undefined};e.isInteger=typeof Number.isInteger==="function"?e=>Number.isInteger(e):e=>typeof e==="number"&&isFinite(e)&&Math.floor(e)===e})(i=t.util||(t.util={}))},63301:function(e,t,i){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,i,s){if(s===undefined)s=i;var r=Object.getOwnPropertyDescriptor(t,i);if(!r||("get"in r?!t.__esModule:r.writable||r.configurable)){r={enumerable:true,get:function(){return t[i]}}}Object.defineProperty(e,s,r)}:function(e,t,i,s){if(s===undefined)s=i;e[s]=t[i]});var r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(e!=null)for(var i in e)if(i!=="default"&&Object.prototype.hasOwnProperty.call(e,i))s(t,e,i);r(t,e);return t};var l=this&&this.__exportStar||function(e,t){for(var i in e)if(i!=="default"&&!Object.prototype.hasOwnProperty.call(t,i))s(t,e,i)};Object.defineProperty(t,"__esModule",{value:true});t.z=void 0;const c=o(i(49906));t.z=c;l(i(49906),t);t["default"]=c},19335:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:true});t.intersection=t["instanceof"]=t["function"]=t["enum"]=t.effect=t.discriminatedUnion=t.date=t.boolean=t.bigint=t.array=t.any=t.ZodFirstPartyTypeKind=t.late=t.ZodSchema=t.Schema=t.custom=t.ZodNaN=t.ZodDefault=t.ZodNullable=t.ZodOptional=t.ZodTransformer=t.ZodEffects=t.ZodPromise=t.ZodNativeEnum=t.ZodEnum=t.ZodLiteral=t.ZodLazy=t.ZodFunction=t.ZodSet=t.ZodMap=t.ZodRecord=t.ZodTuple=t.ZodIntersection=t.ZodDiscriminatedUnion=t.ZodUnion=t.ZodObject=t.objectUtil=t.ZodArray=t.ZodVoid=t.ZodNever=t.ZodUnknown=t.ZodAny=t.ZodNull=t.ZodUndefined=t.ZodDate=t.ZodBoolean=t.ZodBigInt=t.ZodNumber=t.ZodString=t.ZodType=void 0;t["void"]=t.unknown=t.union=t.undefined=t.tuple=t.transformer=t.string=t.strictObject=t.set=t.record=t.promise=t.preprocess=t.ostring=t.optional=t.onumber=t.oboolean=t.object=t.number=t.nullable=t["null"]=t.never=t.nativeEnum=t.nan=t.map=t.literal=t.lazy=void 0;const s=i(42513);const r=i(10888);const o=i(3985);const l=i(69892);class ParseInputLazyPath{constructor(e,t,i,s){this.parent=e;this.data=t;this._path=i;this._key=s}get path(){return this._path.concat(this._key)}}const handleResult=(e,t)=>{if((0,r.isValid)(t)){return{success:true,data:t.value}}else{if(!e.common.issues.length){throw new Error("Validation failed but no issues detected.")}const t=new l.ZodError(e.common.issues);return{success:false,error:t}}};function processCreateParams(e){if(!e)return{};const{errorMap:t,invalid_type_error:i,required_error:s,description:r}=e;if(t&&(i||s)){throw new Error(`Can't use "invalid" or "required" in conjunction with custom error map.`)}if(t)return{errorMap:t,description:r};const customMap=(t,i)=>{if(t.code!=="invalid_type")return{message:i.defaultError};if(typeof i.data==="undefined"&&s)return{message:s};if(e.invalid_type_error)return{message:e.invalid_type_error};return{message:i.defaultError}};return{errorMap:customMap,description:r}}class ZodType{constructor(e){this.spa=this.safeParseAsync;this.superRefine=this._refinement;this._def=e;this.parse=this.parse.bind(this);this.safeParse=this.safeParse.bind(this);this.parseAsync=this.parseAsync.bind(this);this.safeParseAsync=this.safeParseAsync.bind(this);this.spa=this.spa.bind(this);this.refine=this.refine.bind(this);this.refinement=this.refinement.bind(this);this.superRefine=this.superRefine.bind(this);this.optional=this.optional.bind(this);this.nullable=this.nullable.bind(this);this.nullish=this.nullish.bind(this);this.array=this.array.bind(this);this.promise=this.promise.bind(this);this.or=this.or.bind(this);this.and=this.and.bind(this);this.transform=this.transform.bind(this);this.default=this.default.bind(this);this.describe=this.describe.bind(this);this.isNullable=this.isNullable.bind(this);this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return(0,r.getParsedType)(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:(0,r.getParsedType)(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new r.ParseStatus,ctx:{common:e.parent.common,data:e.data,parsedType:(0,r.getParsedType)(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){const t=this._parse(e);if((0,r.isAsync)(t)){throw new Error("Synchronous parse encountered promise.")}return t}_parseAsync(e){const t=this._parse(e);return Promise.resolve(t)}parse(e,t){const i=this.safeParse(e,t);if(i.success)return i.data;throw i.error}safeParse(e,t){var i;const s={common:{issues:[],async:(i=t===null||t===void 0?void 0:t.async)!==null&&i!==void 0?i:false,contextualErrorMap:t===null||t===void 0?void 0:t.errorMap},path:(t===null||t===void 0?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:(0,r.getParsedType)(e)};const o=this._parseSync({data:e,path:s.path,parent:s});return handleResult(s,o)}async parseAsync(e,t){const i=await this.safeParseAsync(e,t);if(i.success)return i.data;throw i.error}async safeParseAsync(e,t){const i={common:{issues:[],contextualErrorMap:t===null||t===void 0?void 0:t.errorMap,async:true},path:(t===null||t===void 0?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:(0,r.getParsedType)(e)};const s=this._parse({data:e,path:[],parent:i});const o=await((0,r.isAsync)(s)?s:Promise.resolve(s));return handleResult(i,o)}refine(e,t){const getIssueProperties=e=>{if(typeof t==="string"||typeof t==="undefined"){return{message:t}}else if(typeof t==="function"){return t(e)}else{return t}};return this._refinement(((t,i)=>{const s=e(t);const setError=()=>i.addIssue({code:l.ZodIssueCode.custom,...getIssueProperties(t)});if(typeof Promise!=="undefined"&&s instanceof Promise){return s.then((e=>{if(!e){setError();return false}else{return true}}))}if(!s){setError();return false}else{return true}}))}refinement(e,t){return this._refinement(((i,s)=>{if(!e(i)){s.addIssue(typeof t==="function"?t(i,s):t);return false}else{return true}}))}_refinement(e){return new ZodEffects({schema:this,typeName:v.ZodEffects,effect:{type:"refinement",refinement:e}})}optional(){;"";"asdf";return ZodOptional.create(this)}nullable(){return ZodNullable.create(this)}nullish(){return this.optional().nullable()}array(){return ZodArray.create(this)}promise(){return ZodPromise.create(this)}or(e){return ZodUnion.create([this,e])}and(e){return ZodIntersection.create(this,e)}transform(e){return new ZodEffects({schema:this,typeName:v.ZodEffects,effect:{type:"transform",transform:e}})}default(e){const t=typeof e==="function"?e:()=>e;return new ZodDefault({innerType:this,defaultValue:t,typeName:v.ZodDefault})}describe(e){const t=this.constructor;return new t({...this._def,description:e})}isOptional(){return this.safeParse(undefined).success}isNullable(){return this.safeParse(null).success}}t.ZodType=ZodType;t.Schema=ZodType;t.ZodSchema=ZodType;const c=/^c[^\s-]{8,}$/i;const u=/^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;const m=/^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i;class ZodString extends ZodType{constructor(){super(...arguments);this._regex=(e,t,i)=>this.refinement((t=>e.test(t)),{validation:t,code:l.ZodIssueCode.invalid_string,...s.errorUtil.errToObj(i)});this.nonempty=e=>this.min(1,s.errorUtil.errToObj(e))}_parse(e){const t=this._getType(e);if(t!==r.ZodParsedType.string){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.string,received:t.parsedType});return r.INVALID}const i=new r.ParseStatus;let s=undefined;for(const t of this._def.checks){if(t.kind==="min"){if(e.data.length<t.value){s=this._getOrReturnCtx(e,s);(0,r.addIssueToContext)(s,{code:l.ZodIssueCode.too_small,minimum:t.value,type:"string",inclusive:true,message:t.message});i.dirty()}}else if(t.kind==="max"){if(e.data.length>t.value){s=this._getOrReturnCtx(e,s);(0,r.addIssueToContext)(s,{code:l.ZodIssueCode.too_big,maximum:t.value,type:"string",inclusive:true,message:t.message});i.dirty()}}else if(t.kind==="email"){if(!m.test(e.data)){s=this._getOrReturnCtx(e,s);(0,r.addIssueToContext)(s,{validation:"email",code:l.ZodIssueCode.invalid_string,message:t.message});i.dirty()}}else if(t.kind==="uuid"){if(!u.test(e.data)){s=this._getOrReturnCtx(e,s);(0,r.addIssueToContext)(s,{validation:"uuid",code:l.ZodIssueCode.invalid_string,message:t.message});i.dirty()}}else if(t.kind==="cuid"){if(!c.test(e.data)){s=this._getOrReturnCtx(e,s);(0,r.addIssueToContext)(s,{validation:"cuid",code:l.ZodIssueCode.invalid_string,message:t.message});i.dirty()}}else if(t.kind==="url"){try{new URL(e.data)}catch(o){s=this._getOrReturnCtx(e,s);(0,r.addIssueToContext)(s,{validation:"url",code:l.ZodIssueCode.invalid_string,message:t.message});i.dirty()}}else if(t.kind==="regex"){t.regex.lastIndex=0;const o=t.regex.test(e.data);if(!o){s=this._getOrReturnCtx(e,s);(0,r.addIssueToContext)(s,{validation:"regex",code:l.ZodIssueCode.invalid_string,message:t.message});i.dirty()}}}return{status:i.value,value:e.data}}_addCheck(e){return new ZodString({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",...s.errorUtil.errToObj(e)})}url(e){return this._addCheck({kind:"url",...s.errorUtil.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",...s.errorUtil.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",...s.errorUtil.errToObj(e)})}regex(e,t){return this._addCheck({kind:"regex",regex:e,...s.errorUtil.errToObj(t)})}min(e,t){return this._addCheck({kind:"min",value:e,...s.errorUtil.errToObj(t)})}max(e,t){return this._addCheck({kind:"max",value:e,...s.errorUtil.errToObj(t)})}length(e,t){return this.min(e,t).max(e,t)}get isEmail(){return!!this._def.checks.find((e=>e.kind==="email"))}get isURL(){return!!this._def.checks.find((e=>e.kind==="url"))}get isUUID(){return!!this._def.checks.find((e=>e.kind==="uuid"))}get isCUID(){return!!this._def.checks.find((e=>e.kind==="cuid"))}get minLength(){let e=-Infinity;this._def.checks.map((t=>{if(t.kind==="min"){if(e===null||t.value>e){e=t.value}}}));return e}get maxLength(){let e=null;this._def.checks.map((t=>{if(t.kind==="max"){if(e===null||t.value<e){e=t.value}}}));return e}}t.ZodString=ZodString;ZodString.create=e=>new ZodString({checks:[],typeName:v.ZodString,...processCreateParams(e)});function floatSafeRemainder(e,t){const i=(e.toString().split(".")[1]||"").length;const s=(t.toString().split(".")[1]||"").length;const r=i>s?i:s;const o=parseInt(e.toFixed(r).replace(".",""));const l=parseInt(t.toFixed(r).replace(".",""));return o%l/Math.pow(10,r)}class ZodNumber extends ZodType{constructor(){super(...arguments);this.min=this.gte;this.max=this.lte;this.step=this.multipleOf}_parse(e){const t=this._getType(e);if(t!==r.ZodParsedType.number){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.number,received:t.parsedType});return r.INVALID}let i=undefined;const s=new r.ParseStatus;for(const t of this._def.checks){if(t.kind==="int"){if(!o.util.isInteger(e.data)){i=this._getOrReturnCtx(e,i);(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.invalid_type,expected:"integer",received:"float",message:t.message});s.dirty()}}else if(t.kind==="min"){const o=t.inclusive?e.data<t.value:e.data<=t.value;if(o){i=this._getOrReturnCtx(e,i);(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.too_small,minimum:t.value,type:"number",inclusive:t.inclusive,message:t.message});s.dirty()}}else if(t.kind==="max"){const o=t.inclusive?e.data>t.value:e.data>=t.value;if(o){i=this._getOrReturnCtx(e,i);(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.too_big,maximum:t.value,type:"number",inclusive:t.inclusive,message:t.message});s.dirty()}}else if(t.kind==="multipleOf"){if(floatSafeRemainder(e.data,t.value)!==0){i=this._getOrReturnCtx(e,i);(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.not_multiple_of,multipleOf:t.value,message:t.message});s.dirty()}}else{o.util.assertNever(t)}}return{status:s.value,value:e.data}}gte(e,t){return this.setLimit("min",e,true,s.errorUtil.toString(t))}gt(e,t){return this.setLimit("min",e,false,s.errorUtil.toString(t))}lte(e,t){return this.setLimit("max",e,true,s.errorUtil.toString(t))}lt(e,t){return this.setLimit("max",e,false,s.errorUtil.toString(t))}setLimit(e,t,i,r){return new ZodNumber({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:i,message:s.errorUtil.toString(r)}]})}_addCheck(e){return new ZodNumber({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:s.errorUtil.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:false,message:s.errorUtil.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:false,message:s.errorUtil.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:true,message:s.errorUtil.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:true,message:s.errorUtil.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:s.errorUtil.toString(t)})}get minValue(){let e=null;for(const t of this._def.checks){if(t.kind==="min"){if(e===null||t.value>e)e=t.value}}return e}get maxValue(){let e=null;for(const t of this._def.checks){if(t.kind==="max"){if(e===null||t.value<e)e=t.value}}return e}get isInt(){return!!this._def.checks.find((e=>e.kind==="int"))}}t.ZodNumber=ZodNumber;ZodNumber.create=e=>new ZodNumber({checks:[],typeName:v.ZodNumber,...processCreateParams(e)});class ZodBigInt extends ZodType{_parse(e){const t=this._getType(e);if(t!==r.ZodParsedType.bigint){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.bigint,received:t.parsedType});return r.INVALID}return(0,r.OK)(e.data)}}t.ZodBigInt=ZodBigInt;ZodBigInt.create=e=>new ZodBigInt({typeName:v.ZodBigInt,...processCreateParams(e)});class ZodBoolean extends ZodType{_parse(e){const t=this._getType(e);if(t!==r.ZodParsedType.boolean){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.boolean,received:t.parsedType});return r.INVALID}return(0,r.OK)(e.data)}}t.ZodBoolean=ZodBoolean;ZodBoolean.create=e=>new ZodBoolean({typeName:v.ZodBoolean,...processCreateParams(e)});class ZodDate extends ZodType{_parse(e){const t=this._getType(e);if(t!==r.ZodParsedType.date){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.date,received:t.parsedType});return r.INVALID}if(isNaN(e.data.getTime())){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_date});return r.INVALID}return{status:"valid",value:new Date(e.data.getTime())}}}t.ZodDate=ZodDate;ZodDate.create=e=>new ZodDate({typeName:v.ZodDate,...processCreateParams(e)});class ZodUndefined extends ZodType{_parse(e){const t=this._getType(e);if(t!==r.ZodParsedType.undefined){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.undefined,received:t.parsedType});return r.INVALID}return(0,r.OK)(e.data)}}t.ZodUndefined=ZodUndefined;ZodUndefined.create=e=>new ZodUndefined({typeName:v.ZodUndefined,...processCreateParams(e)});class ZodNull extends ZodType{_parse(e){const t=this._getType(e);if(t!==r.ZodParsedType.null){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.null,received:t.parsedType});return r.INVALID}return(0,r.OK)(e.data)}}t.ZodNull=ZodNull;ZodNull.create=e=>new ZodNull({typeName:v.ZodNull,...processCreateParams(e)});class ZodAny extends ZodType{constructor(){super(...arguments);this._any=true}_parse(e){return(0,r.OK)(e.data)}}t.ZodAny=ZodAny;ZodAny.create=e=>new ZodAny({typeName:v.ZodAny,...processCreateParams(e)});class ZodUnknown extends ZodType{constructor(){super(...arguments);this._unknown=true}_parse(e){return(0,r.OK)(e.data)}}t.ZodUnknown=ZodUnknown;ZodUnknown.create=e=>new ZodUnknown({typeName:v.ZodUnknown,...processCreateParams(e)});class ZodNever extends ZodType{_parse(e){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.never,received:t.parsedType});return r.INVALID}}t.ZodNever=ZodNever;ZodNever.create=e=>new ZodNever({typeName:v.ZodNever,...processCreateParams(e)});class ZodVoid extends ZodType{_parse(e){const t=this._getType(e);if(t!==r.ZodParsedType.undefined){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.void,received:t.parsedType});return r.INVALID}return(0,r.OK)(e.data)}}t.ZodVoid=ZodVoid;ZodVoid.create=e=>new ZodVoid({typeName:v.ZodVoid,...processCreateParams(e)});class ZodArray extends ZodType{_parse(e){const{ctx:t,status:i}=this._processInputParams(e);const s=this._def;if(t.parsedType!==r.ZodParsedType.array){(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.array,received:t.parsedType});return r.INVALID}if(s.minLength!==null){if(t.data.length<s.minLength.value){(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.too_small,minimum:s.minLength.value,type:"array",inclusive:true,message:s.minLength.message});i.dirty()}}if(s.maxLength!==null){if(t.data.length>s.maxLength.value){(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.too_big,maximum:s.maxLength.value,type:"array",inclusive:true,message:s.maxLength.message});i.dirty()}}if(t.common.async){return Promise.all(t.data.map(((e,i)=>s.type._parseAsync(new ParseInputLazyPath(t,e,t.path,i))))).then((e=>r.ParseStatus.mergeArray(i,e)))}const o=t.data.map(((e,i)=>s.type._parseSync(new ParseInputLazyPath(t,e,t.path,i))));return r.ParseStatus.mergeArray(i,o)}get element(){return this._def.type}min(e,t){return new ZodArray({...this._def,minLength:{value:e,message:s.errorUtil.toString(t)}})}max(e,t){return new ZodArray({...this._def,maxLength:{value:e,message:s.errorUtil.toString(t)}})}length(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}}t.ZodArray=ZodArray;ZodArray.create=(e,t)=>new ZodArray({type:e,minLength:null,maxLength:null,typeName:v.ZodArray,...processCreateParams(t)});var g;(function(e){e.mergeShapes=(e,t)=>({...e,...t})})(g=t.objectUtil||(t.objectUtil={}));const AugmentFactory=e=>t=>new ZodObject({...e,shape:()=>({...e.shape(),...t})});function deepPartialify(e){if(e instanceof ZodObject){const t={};for(const i in e.shape){const s=e.shape[i];t[i]=ZodOptional.create(deepPartialify(s))}return new ZodObject({...e._def,shape:()=>t})}else if(e instanceof ZodArray){return ZodArray.create(deepPartialify(e.element))}else if(e instanceof ZodOptional){return ZodOptional.create(deepPartialify(e.unwrap()))}else if(e instanceof ZodNullable){return ZodNullable.create(deepPartialify(e.unwrap()))}else if(e instanceof ZodTuple){return ZodTuple.create(e.items.map((e=>deepPartialify(e))))}else{return e}}class ZodObject extends ZodType{constructor(){super(...arguments);this._cached=null;this.nonstrict=this.passthrough;this.augment=AugmentFactory(this._def);this.extend=AugmentFactory(this._def)}_getCached(){if(this._cached!==null)return this._cached;const e=this._def.shape();const t=o.util.objectKeys(e);return this._cached={shape:e,keys:t}}_parse(e){const t=this._getType(e);if(t!==r.ZodParsedType.object){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.object,received:t.parsedType});return r.INVALID}const{status:i,ctx:s}=this._processInputParams(e);const{shape:o,keys:c}=this._getCached();const u=[];for(const e in s.data){if(!c.includes(e)){u.push(e)}}const m=[];for(const e of c){const t=o[e];const i=s.data[e];m.push({key:{status:"valid",value:e},value:t._parse(new ParseInputLazyPath(s,i,s.path,e)),alwaysSet:e in s.data})}if(this._def.catchall instanceof ZodNever){const e=this._def.unknownKeys;if(e==="passthrough"){for(const e of u){m.push({key:{status:"valid",value:e},value:{status:"valid",value:s.data[e]}})}}else if(e==="strict"){if(u.length>0){(0,r.addIssueToContext)(s,{code:l.ZodIssueCode.unrecognized_keys,keys:u});i.dirty()}}else if(e==="strip"){}else{throw new Error(`Internal ZodObject error: invalid unknownKeys value.`)}}else{const e=this._def.catchall;for(const t of u){const i=s.data[t];m.push({key:{status:"valid",value:t},value:e._parse(new ParseInputLazyPath(s,i,s.path,t)),alwaysSet:t in s.data})}}if(s.common.async){return Promise.resolve().then((async()=>{const e=[];for(const t of m){const i=await t.key;e.push({key:i,value:await t.value,alwaysSet:t.alwaysSet})}return e})).then((e=>r.ParseStatus.mergeObjectSync(i,e)))}else{return r.ParseStatus.mergeObjectSync(i,m)}}get shape(){return this._def.shape()}strict(e){s.errorUtil.errToObj;return new ZodObject({...this._def,unknownKeys:"strict",...e!==undefined?{errorMap:(t,i)=>{var r,o,l,c;const u=(l=(o=(r=this._def).errorMap)===null||o===void 0?void 0:o.call(r,t,i).message)!==null&&l!==void 0?l:i.defaultError;if(t.code==="unrecognized_keys")return{message:(c=s.errorUtil.errToObj(e).message)!==null&&c!==void 0?c:u};return{message:u}}}:{}})}strip(){return new ZodObject({...this._def,unknownKeys:"strip"})}passthrough(){return new ZodObject({...this._def,unknownKeys:"passthrough"})}setKey(e,t){return this.augment({[e]:t})}merge(e){const t=new ZodObject({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>g.mergeShapes(this._def.shape(),e._def.shape()),typeName:v.ZodObject});return t}catchall(e){return new ZodObject({...this._def,catchall:e})}pick(e){const t={};o.util.objectKeys(e).map((e=>{t[e]=this.shape[e]}));return new ZodObject({...this._def,shape:()=>t})}omit(e){const t={};o.util.objectKeys(this.shape).map((i=>{if(o.util.objectKeys(e).indexOf(i)===-1){t[i]=this.shape[i]}}));return new ZodObject({...this._def,shape:()=>t})}deepPartial(){return deepPartialify(this)}partial(e){const t={};if(e){o.util.objectKeys(this.shape).map((i=>{if(o.util.objectKeys(e).indexOf(i)===-1){t[i]=this.shape[i]}else{t[i]=this.shape[i].optional()}}));return new ZodObject({...this._def,shape:()=>t})}else{for(const e in this.shape){const i=this.shape[e];t[e]=i.optional()}}return new ZodObject({...this._def,shape:()=>t})}required(){const e={};for(const t in this.shape){const i=this.shape[t];let s=i;while(s instanceof ZodOptional){s=s._def.innerType}e[t]=s}return new ZodObject({...this._def,shape:()=>e})}}t.ZodObject=ZodObject;ZodObject.create=(e,t)=>new ZodObject({shape:()=>e,unknownKeys:"strip",catchall:ZodNever.create(),typeName:v.ZodObject,...processCreateParams(t)});ZodObject.strictCreate=(e,t)=>new ZodObject({shape:()=>e,unknownKeys:"strict",catchall:ZodNever.create(),typeName:v.ZodObject,...processCreateParams(t)});ZodObject.lazycreate=(e,t)=>new ZodObject({shape:e,unknownKeys:"strip",catchall:ZodNever.create(),typeName:v.ZodObject,...processCreateParams(t)});class ZodUnion extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);const i=this._def.options;function handleResults(e){for(const t of e){if(t.result.status==="valid"){return t.result}}for(const i of e){if(i.result.status==="dirty"){t.common.issues.push(...i.ctx.common.issues);return i.result}}const i=e.map((e=>new l.ZodError(e.ctx.common.issues)));(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_union,unionErrors:i});return r.INVALID}if(t.common.async){return Promise.all(i.map((async e=>{const i={...t,common:{...t.common,issues:[]},parent:null};return{result:await e._parseAsync({data:t.data,path:t.path,parent:i}),ctx:i}}))).then(handleResults)}else{let e=undefined;const s=[];for(const r of i){const i={...t,common:{...t.common,issues:[]},parent:null};const o=r._parseSync({data:t.data,path:t.path,parent:i});if(o.status==="valid"){return o}else if(o.status==="dirty"&&!e){e={result:o,ctx:i}}if(i.common.issues.length){s.push(i.common.issues)}}if(e){t.common.issues.push(...e.ctx.common.issues);return e.result}const o=s.map((e=>new l.ZodError(e)));(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_union,unionErrors:o});return r.INVALID}}get options(){return this._def.options}}t.ZodUnion=ZodUnion;ZodUnion.create=(e,t)=>new ZodUnion({options:e,typeName:v.ZodUnion,...processCreateParams(t)});class ZodDiscriminatedUnion extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==r.ZodParsedType.object){(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.object,received:t.parsedType});return r.INVALID}const i=this.discriminator;const s=t.data[i];const o=this.options.get(s);if(!o){(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_union_discriminator,options:this.validDiscriminatorValues,path:[i]});return r.INVALID}if(t.common.async){return o._parseAsync({data:t.data,path:t.path,parent:t})}else{return o._parseSync({data:t.data,path:t.path,parent:t})}}get discriminator(){return this._def.discriminator}get validDiscriminatorValues(){return Array.from(this.options.keys())}get options(){return this._def.options}static create(e,t,i){const s=new Map;try{t.forEach((t=>{const i=t.shape[e].value;s.set(i,t)}))}catch(e){throw new Error("The discriminator value could not be extracted from all the provided schemas")}if(s.size!==t.length){throw new Error("Some of the discriminator values are not unique")}return new ZodDiscriminatedUnion({typeName:v.ZodDiscriminatedUnion,discriminator:e,options:s,...processCreateParams(i)})}}t.ZodDiscriminatedUnion=ZodDiscriminatedUnion;function mergeValues(e,t){const i=(0,r.getParsedType)(e);const s=(0,r.getParsedType)(t);if(e===t){return{valid:true,data:e}}else if(i===r.ZodParsedType.object&&s===r.ZodParsedType.object){const i=o.util.objectKeys(t);const s=o.util.objectKeys(e).filter((e=>i.indexOf(e)!==-1));const r={...e,...t};for(const i of s){const s=mergeValues(e[i],t[i]);if(!s.valid){return{valid:false}}r[i]=s.data}return{valid:true,data:r}}else if(i===r.ZodParsedType.array&&s===r.ZodParsedType.array){if(e.length!==t.length){return{valid:false}}const i=[];for(let s=0;s<e.length;s++){const r=e[s];const o=t[s];const l=mergeValues(r,o);if(!l.valid){return{valid:false}}i.push(l.data)}return{valid:true,data:i}}else if(i===r.ZodParsedType.date&&s===r.ZodParsedType.date&&+e===+t){return{valid:true,data:e}}else{return{valid:false}}}class ZodIntersection extends ZodType{_parse(e){const{status:t,ctx:i}=this._processInputParams(e);const handleParsed=(e,s)=>{if((0,r.isAborted)(e)||(0,r.isAborted)(s)){return r.INVALID}const o=mergeValues(e.value,s.value);if(!o.valid){(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.invalid_intersection_types});return r.INVALID}if((0,r.isDirty)(e)||(0,r.isDirty)(s)){t.dirty()}return{status:t.value,value:o.data}};if(i.common.async){return Promise.all([this._def.left._parseAsync({data:i.data,path:i.path,parent:i}),this._def.right._parseAsync({data:i.data,path:i.path,parent:i})]).then((([e,t])=>handleParsed(e,t)))}else{return handleParsed(this._def.left._parseSync({data:i.data,path:i.path,parent:i}),this._def.right._parseSync({data:i.data,path:i.path,parent:i}))}}}t.ZodIntersection=ZodIntersection;ZodIntersection.create=(e,t,i)=>new ZodIntersection({left:e,right:t,typeName:v.ZodIntersection,...processCreateParams(i)});class ZodTuple extends ZodType{_parse(e){const{status:t,ctx:i}=this._processInputParams(e);if(i.parsedType!==r.ZodParsedType.array){(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.array,received:i.parsedType});return r.INVALID}if(i.data.length<this._def.items.length){(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.too_small,minimum:this._def.items.length,inclusive:true,type:"array"});return r.INVALID}const s=this._def.rest;if(!s&&i.data.length>this._def.items.length){(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.too_big,maximum:this._def.items.length,inclusive:true,type:"array"});t.dirty()}const o=i.data.map(((e,t)=>{const s=this._def.items[t]||this._def.rest;if(!s)return null;return s._parse(new ParseInputLazyPath(i,e,i.path,t))})).filter((e=>!!e));if(i.common.async){return Promise.all(o).then((e=>r.ParseStatus.mergeArray(t,e)))}else{return r.ParseStatus.mergeArray(t,o)}}get items(){return this._def.items}rest(e){return new ZodTuple({...this._def,rest:e})}}t.ZodTuple=ZodTuple;ZodTuple.create=(e,t)=>new ZodTuple({items:e,typeName:v.ZodTuple,rest:null,...processCreateParams(t)});class ZodRecord extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:i}=this._processInputParams(e);if(i.parsedType!==r.ZodParsedType.object){(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.object,received:i.parsedType});return r.INVALID}const s=[];const o=this._def.keyType;const c=this._def.valueType;for(const e in i.data){s.push({key:o._parse(new ParseInputLazyPath(i,e,i.path,e)),value:c._parse(new ParseInputLazyPath(i,i.data[e],i.path,e))})}if(i.common.async){return r.ParseStatus.mergeObjectAsync(t,s)}else{return r.ParseStatus.mergeObjectSync(t,s)}}get element(){return this._def.valueType}static create(e,t,i){if(t instanceof ZodType){return new ZodRecord({keyType:e,valueType:t,typeName:v.ZodRecord,...processCreateParams(i)})}return new ZodRecord({keyType:ZodString.create(),valueType:e,typeName:v.ZodRecord,...processCreateParams(t)})}}t.ZodRecord=ZodRecord;class ZodMap extends ZodType{_parse(e){const{status:t,ctx:i}=this._processInputParams(e);if(i.parsedType!==r.ZodParsedType.map){(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.map,received:i.parsedType});return r.INVALID}const s=this._def.keyType;const o=this._def.valueType;const c=[...i.data.entries()].map((([e,t],r)=>({key:s._parse(new ParseInputLazyPath(i,e,i.path,[r,"key"])),value:o._parse(new ParseInputLazyPath(i,t,i.path,[r,"value"]))})));if(i.common.async){const e=new Map;return Promise.resolve().then((async()=>{for(const i of c){const s=await i.key;const o=await i.value;if(s.status==="aborted"||o.status==="aborted"){return r.INVALID}if(s.status==="dirty"||o.status==="dirty"){t.dirty()}e.set(s.value,o.value)}return{status:t.value,value:e}}))}else{const e=new Map;for(const i of c){const s=i.key;const o=i.value;if(s.status==="aborted"||o.status==="aborted"){return r.INVALID}if(s.status==="dirty"||o.status==="dirty"){t.dirty()}e.set(s.value,o.value)}return{status:t.value,value:e}}}}t.ZodMap=ZodMap;ZodMap.create=(e,t,i)=>new ZodMap({valueType:t,keyType:e,typeName:v.ZodMap,...processCreateParams(i)});class ZodSet extends ZodType{_parse(e){const{status:t,ctx:i}=this._processInputParams(e);if(i.parsedType!==r.ZodParsedType.set){(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.set,received:i.parsedType});return r.INVALID}const s=this._def;if(s.minSize!==null){if(i.data.size<s.minSize.value){(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.too_small,minimum:s.minSize.value,type:"set",inclusive:true,message:s.minSize.message});t.dirty()}}if(s.maxSize!==null){if(i.data.size>s.maxSize.value){(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.too_big,maximum:s.maxSize.value,type:"set",inclusive:true,message:s.maxSize.message});t.dirty()}}const o=this._def.valueType;function finalizeSet(e){const i=new Set;for(const s of e){if(s.status==="aborted")return r.INVALID;if(s.status==="dirty")t.dirty();i.add(s.value)}return{status:t.value,value:i}}const c=[...i.data.values()].map(((e,t)=>o._parse(new ParseInputLazyPath(i,e,i.path,t))));if(i.common.async){return Promise.all(c).then((e=>finalizeSet(e)))}else{return finalizeSet(c)}}min(e,t){return new ZodSet({...this._def,minSize:{value:e,message:s.errorUtil.toString(t)}})}max(e,t){return new ZodSet({...this._def,maxSize:{value:e,message:s.errorUtil.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}}t.ZodSet=ZodSet;ZodSet.create=(e,t)=>new ZodSet({valueType:e,minSize:null,maxSize:null,typeName:v.ZodSet,...processCreateParams(t)});class ZodFunction extends ZodType{constructor(){super(...arguments);this.validate=this.implement}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==r.ZodParsedType.function){(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.function,received:t.parsedType});return r.INVALID}function makeArgsIssue(e,i){return(0,r.makeIssue)({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,l.overrideErrorMap,l.defaultErrorMap].filter((e=>!!e)),issueData:{code:l.ZodIssueCode.invalid_arguments,argumentsError:i}})}function makeReturnsIssue(e,i){return(0,r.makeIssue)({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,l.overrideErrorMap,l.defaultErrorMap].filter((e=>!!e)),issueData:{code:l.ZodIssueCode.invalid_return_type,returnTypeError:i}})}const i={errorMap:t.common.contextualErrorMap};const s=t.data;if(this._def.returns instanceof ZodPromise){return(0,r.OK)((async(...e)=>{const t=new l.ZodError([]);const r=await this._def.args.parseAsync(e,i).catch((i=>{t.addIssue(makeArgsIssue(e,i));throw t}));const o=await s(...r);const c=await this._def.returns._def.type.parseAsync(o,i).catch((e=>{t.addIssue(makeReturnsIssue(o,e));throw t}));return c}))}else{return(0,r.OK)(((...e)=>{const t=this._def.args.safeParse(e,i);if(!t.success){throw new l.ZodError([makeArgsIssue(e,t.error)])}const r=s(...t.data);const o=this._def.returns.safeParse(r,i);if(!o.success){throw new l.ZodError([makeReturnsIssue(r,o.error)])}return o.data}))}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new ZodFunction({...this._def,args:ZodTuple.create(e).rest(ZodUnknown.create())})}returns(e){return new ZodFunction({...this._def,returns:e})}implement(e){const t=this.parse(e);return t}strictImplement(e){const t=this.parse(e);return t}}t.ZodFunction=ZodFunction;ZodFunction.create=(e,t,i)=>new ZodFunction({args:e?e.rest(ZodUnknown.create()):ZodTuple.create([]).rest(ZodUnknown.create()),returns:t||ZodUnknown.create(),typeName:v.ZodFunction,...processCreateParams(i)});class ZodLazy extends ZodType{get schema(){return this._def.getter()}_parse(e){const{ctx:t}=this._processInputParams(e);const i=this._def.getter();return i._parse({data:t.data,path:t.path,parent:t})}}t.ZodLazy=ZodLazy;ZodLazy.create=(e,t)=>new ZodLazy({getter:e,typeName:v.ZodLazy,...processCreateParams(t)});class ZodLiteral extends ZodType{_parse(e){if(e.data!==this._def.value){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_literal,expected:this._def.value});return r.INVALID}return{status:"valid",value:e.data}}get value(){return this._def.value}}t.ZodLiteral=ZodLiteral;ZodLiteral.create=(e,t)=>new ZodLiteral({value:e,typeName:v.ZodLiteral,...processCreateParams(t)});function createZodEnum(e){return new ZodEnum({values:e,typeName:v.ZodEnum})}class ZodEnum extends ZodType{_parse(e){if(this._def.values.indexOf(e.data)===-1){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_enum_value,options:this._def.values});return r.INVALID}return(0,r.OK)(e.data)}get options(){return this._def.values}get enum(){const e={};for(const t of this._def.values){e[t]=t}return e}get Values(){const e={};for(const t of this._def.values){e[t]=t}return e}get Enum(){const e={};for(const t of this._def.values){e[t]=t}return e}}t.ZodEnum=ZodEnum;ZodEnum.create=createZodEnum;class ZodNativeEnum extends ZodType{_parse(e){const t=o.util.getValidEnumValues(this._def.values);if(t.indexOf(e.data)===-1){const i=this._getOrReturnCtx(e);(0,r.addIssueToContext)(i,{code:l.ZodIssueCode.invalid_enum_value,options:o.util.objectValues(t)});return r.INVALID}return(0,r.OK)(e.data)}get enum(){return this._def.values}}t.ZodNativeEnum=ZodNativeEnum;ZodNativeEnum.create=(e,t)=>new ZodNativeEnum({values:e,typeName:v.ZodNativeEnum,...processCreateParams(t)});class ZodPromise extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==r.ZodParsedType.promise&&t.common.async===false){(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.promise,received:t.parsedType});return r.INVALID}const i=t.parsedType===r.ZodParsedType.promise?t.data:Promise.resolve(t.data);return(0,r.OK)(i.then((e=>this._def.type.parseAsync(e,{path:t.path,errorMap:t.common.contextualErrorMap}))))}}t.ZodPromise=ZodPromise;ZodPromise.create=(e,t)=>new ZodPromise({type:e,typeName:v.ZodPromise,...processCreateParams(t)});class ZodEffects extends ZodType{innerType(){return this._def.schema}_parse(e){const{status:t,ctx:i}=this._processInputParams(e);const s=this._def.effect||null;if(s.type==="preprocess"){const e=s.transform(i.data);if(i.common.async){return Promise.resolve(e).then((e=>this._def.schema._parseAsync({data:e,path:i.path,parent:i})))}else{return this._def.schema._parseSync({data:e,path:i.path,parent:i})}}if(s.type==="refinement"){const e={addIssue:e=>{(0,r.addIssueToContext)(i,e);if(e.fatal){t.abort()}else{t.dirty()}},get path(){return i.path}};e.addIssue=e.addIssue.bind(e);const executeRefinement=t=>{const r=s.refinement(t,e);if(i.common.async){return Promise.resolve(r)}if(r instanceof Promise){throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.")}return t};if(i.common.async===false){const e=this._def.schema._parseSync({data:i.data,path:i.path,parent:i});if(e.status==="aborted")return r.INVALID;if(e.status==="dirty")t.dirty();executeRefinement(e.value);return{status:t.value,value:e.value}}else{return this._def.schema._parseAsync({data:i.data,path:i.path,parent:i}).then((e=>{if(e.status==="aborted")return r.INVALID;if(e.status==="dirty")t.dirty();return executeRefinement(e.value).then((()=>({status:t.value,value:e.value})))}))}}if(s.type==="transform"){if(i.common.async===false){const e=this._def.schema._parseSync({data:i.data,path:i.path,parent:i});if(!(0,r.isValid)(e))return e;const t=s.transform(e.value);if(t instanceof Promise){throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`)}return(0,r.OK)(t)}else{return this._def.schema._parseAsync({data:i.data,path:i.path,parent:i}).then((e=>{if(!(0,r.isValid)(e))return e;return Promise.resolve(s.transform(e.value)).then(r.OK)}))}}o.util.assertNever(s)}}t.ZodEffects=ZodEffects;t.ZodTransformer=ZodEffects;ZodEffects.create=(e,t,i)=>new ZodEffects({schema:e,typeName:v.ZodEffects,effect:t,...processCreateParams(i)});ZodEffects.createWithPreprocess=(e,t,i)=>new ZodEffects({schema:t,effect:{type:"preprocess",transform:e},typeName:v.ZodEffects,...processCreateParams(i)});class ZodOptional extends ZodType{_parse(e){const t=this._getType(e);if(t===r.ZodParsedType.undefined){return(0,r.OK)(undefined)}return this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}t.ZodOptional=ZodOptional;ZodOptional.create=(e,t)=>new ZodOptional({innerType:e,typeName:v.ZodOptional,...processCreateParams(t)});class ZodNullable extends ZodType{_parse(e){const t=this._getType(e);if(t===r.ZodParsedType.null){return(0,r.OK)(null)}return this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}t.ZodNullable=ZodNullable;ZodNullable.create=(e,t)=>new ZodNullable({innerType:e,typeName:v.ZodNullable,...processCreateParams(t)});class ZodDefault extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);let i=t.data;if(t.parsedType===r.ZodParsedType.undefined){i=this._def.defaultValue()}return this._def.innerType._parse({data:i,path:t.path,parent:t})}removeDefault(){return this._def.innerType}}t.ZodDefault=ZodDefault;ZodDefault.create=(e,t)=>new ZodOptional({innerType:e,typeName:v.ZodOptional,...processCreateParams(t)});class ZodNaN extends ZodType{_parse(e){const t=this._getType(e);if(t!==r.ZodParsedType.nan){const t=this._getOrReturnCtx(e);(0,r.addIssueToContext)(t,{code:l.ZodIssueCode.invalid_type,expected:r.ZodParsedType.nan,received:t.parsedType});return r.INVALID}return{status:"valid",value:e.data}}}t.ZodNaN=ZodNaN;ZodNaN.create=e=>new ZodNaN({typeName:v.ZodNaN,...processCreateParams(e)});const custom=(e,t)=>{if(e)return ZodAny.create().refine(e,t);return ZodAny.create()};t.custom=custom;t.late={object:ZodObject.lazycreate};var v;(function(e){e["ZodString"]="ZodString";e["ZodNumber"]="ZodNumber";e["ZodNaN"]="ZodNaN";e["ZodBigInt"]="ZodBigInt";e["ZodBoolean"]="ZodBoolean";e["ZodDate"]="ZodDate";e["ZodUndefined"]="ZodUndefined";e["ZodNull"]="ZodNull";e["ZodAny"]="ZodAny";e["ZodUnknown"]="ZodUnknown";e["ZodNever"]="ZodNever";e["ZodVoid"]="ZodVoid";e["ZodArray"]="ZodArray";e["ZodObject"]="ZodObject";e["ZodUnion"]="ZodUnion";e["ZodDiscriminatedUnion"]="ZodDiscriminatedUnion";e["ZodIntersection"]="ZodIntersection";e["ZodTuple"]="ZodTuple";e["ZodRecord"]="ZodRecord";e["ZodMap"]="ZodMap";e["ZodSet"]="ZodSet";e["ZodFunction"]="ZodFunction";e["ZodLazy"]="ZodLazy";e["ZodLiteral"]="ZodLiteral";e["ZodEnum"]="ZodEnum";e["ZodEffects"]="ZodEffects";e["ZodNativeEnum"]="ZodNativeEnum";e["ZodOptional"]="ZodOptional";e["ZodNullable"]="ZodNullable";e["ZodDefault"]="ZodDefault";e["ZodPromise"]="ZodPromise"})(v=t.ZodFirstPartyTypeKind||(t.ZodFirstPartyTypeKind={}));const instanceOfType=(e,i={message:`Input not instance of ${e.name}`})=>(0,t.custom)((t=>t instanceof e),i);t["instanceof"]=instanceOfType;const _=ZodString.create;t.string=_;const T=ZodNumber.create;t.number=T;const x=ZodNaN.create;t.nan=x;const S=ZodBigInt.create;t.bigint=S;const A=ZodBoolean.create;t.boolean=A;const I=ZodDate.create;t.date=I;const N=ZodUndefined.create;t.undefined=N;const O=ZodNull.create;t["null"]=O;const R=ZodAny.create;t.any=R;const k=ZodUnknown.create;t.unknown=k;const P=ZodNever.create;t.never=P;const M=ZodVoid.create;t["void"]=M;const q=ZodArray.create;t.array=q;const G=ZodObject.create;t.object=G;const j=ZodObject.strictCreate;t.strictObject=j;const B=ZodUnion.create;t.union=B;const H=ZodDiscriminatedUnion.create;t.discriminatedUnion=H;const $=ZodIntersection.create;t.intersection=$;const z=ZodTuple.create;t.tuple=z;const W=ZodRecord.create;t.record=W;const Y=ZodMap.create;t.map=Y;const J=ZodSet.create;t.set=J;const X=ZodFunction.create;t["function"]=X;const Q=ZodLazy.create;t.lazy=Q;const ee=ZodLiteral.create;t.literal=ee;const te=ZodEnum.create;t["enum"]=te;const ie=ZodNativeEnum.create;t.nativeEnum=ie;const se=ZodPromise.create;t.promise=se;const re=ZodEffects.create;t.effect=re;t.transformer=re;const ae=ZodOptional.create;t.optional=ae;const pe=ZodNullable.create;t.nullable=pe;const le=ZodEffects.createWithPreprocess;t.preprocess=le;const ostring=()=>_().optional();t.ostring=ostring;const onumber=()=>T().optional();t.onumber=onumber;const oboolean=()=>A().optional();t.oboolean=oboolean},85004:(e,t,i)=>{const{MessageEmbed:s,WebhookClient:r}=i(85973);const o=40;e.exports.send=(e,t,i,s,o,l,c)=>new Promise(((u,m)=>{let g;console.log("Preparing Webhook...");try{g=new r({id:e,token:t})}catch(e){console.log("Error creating Webhook");m(e.message);return}g.send({embeds:[createEmbed(i,s,o,l,c)]}).then((()=>{console.log("Successfully sent the message!");u()}),m)}));function createEmbed(e,t,i,r,o){console.log("Constructing Embed...");const l=r[0];console.log(l);return(new s).setColor(47906).setAuthor({name:`${o} ${o===1?"commit was ":"commits were"} added to ${t}`,iconURL:`https://github.com/${l.author.username}.png?size=32`}).setDescription(`${getChangeLog(r,o)}`).setTimestamp(Date.parse(l.timestamp)).setFooter({text:`⚡ Edited by @${l.author.username}`})}function getChangeLog(e,t){let i="";for(const s in e){if(s>7){i+=`+ ${t-s} more...\n`;break}const r=e[s];const l=r.id.substring(0,6);const c=r.message.length>o?r.message.substring(0,o)+"...":r.message;i+=`[\`${l}\`](${r.url}) — ${c}\n`}return i}},71269:module=>{module.exports=eval("require")("bufferutil")},22877:module=>{module.exports=eval("require")("encoding")},6832:module=>{module.exports=eval("require")("erlpack")},24592:module=>{module.exports=eval("require")("utf-8-validate")},52699:module=>{module.exports=eval("require")("zlib-sync")},39491:e=>{"use strict";e.exports=require("assert")},32081:e=>{"use strict";e.exports=require("child_process")},6113:e=>{"use strict";e.exports=require("crypto")},82361:e=>{"use strict";e.exports=require("events")},57147:e=>{"use strict";e.exports=require("fs")},13685:e=>{"use strict";e.exports=require("http")},95687:e=>{"use strict";e.exports=require("https")},41808:e=>{"use strict";e.exports=require("net")},72254:e=>{"use strict";e.exports=require("node:buffer")},17718:e=>{"use strict";e.exports=require("node:child_process")},15673:e=>{"use strict";e.exports=require("node:events")},87561:e=>{"use strict";e.exports=require("node:fs")},22286:e=>{"use strict";e.exports=require("node:https")},49411:e=>{"use strict";e.exports=require("node:path")},97742:e=>{"use strict";e.exports=require("node:process")},84492:e=>{"use strict";e.exports=require("node:stream")},92332:e=>{"use strict";e.exports=require("node:timers")},99397:e=>{"use strict";e.exports=require("node:timers/promises")},24086:e=>{"use strict";e.exports=require("node:worker_threads")},22037:e=>{"use strict";e.exports=require("os")},71017:e=>{"use strict";e.exports=require("path")},85477:e=>{"use strict";e.exports=require("punycode")},12781:e=>{"use strict";e.exports=require("stream")},24404:e=>{"use strict";e.exports=require("tls")},57310:e=>{"use strict";e.exports=require("url")},73837:e=>{"use strict";e.exports=require("util")},59796:e=>{"use strict";e.exports=require("zlib")},51322:e=>{"use strict";e.exports=JSON.parse('{"name":"@octokit/rest","version":"16.43.1","publishConfig":{"access":"public"},"description":"GitHub REST API client for Node.js","keywords":["octokit","github","rest","api-client"],"author":"Gregor Martynus (https://github.com/gr2m)","contributors":[{"name":"Mike de Boer","email":"info@mikedeboer.nl"},{"name":"Fabian Jakobs","email":"fabian@c9.io"},{"name":"Joe Gallo","email":"joe@brassafrax.com"},{"name":"Gregor Martynus","url":"https://github.com/gr2m"}],"repository":"https://github.com/octokit/rest.js","dependencies":{"@octokit/auth-token":"^2.4.0","@octokit/plugin-paginate-rest":"^1.1.1","@octokit/plugin-request-log":"^1.0.0","@octokit/plugin-rest-endpoint-methods":"2.4.0","@octokit/request":"^5.2.0","@octokit/request-error":"^1.0.2","atob-lite":"^2.0.0","before-after-hook":"^2.0.0","btoa-lite":"^1.0.0","deprecation":"^2.0.0","lodash.get":"^4.4.2","lodash.set":"^4.3.2","lodash.uniq":"^4.5.0","octokit-pagination-methods":"^1.1.0","once":"^1.4.0","universal-user-agent":"^4.0.0"},"devDependencies":{"@gimenete/type-writer":"^0.1.3","@octokit/auth":"^1.1.1","@octokit/fixtures-server":"^5.0.6","@octokit/graphql":"^4.2.0","@types/node":"^13.1.0","bundlesize":"^0.18.0","chai":"^4.1.2","compression-webpack-plugin":"^3.1.0","cypress":"^3.0.0","glob":"^7.1.2","http-proxy-agent":"^4.0.0","lodash.camelcase":"^4.3.0","lodash.merge":"^4.6.1","lodash.upperfirst":"^4.3.1","lolex":"^5.1.2","mkdirp":"^1.0.0","mocha":"^7.0.1","mustache":"^4.0.0","nock":"^11.3.3","npm-run-all":"^4.1.2","nyc":"^15.0.0","prettier":"^1.14.2","proxy":"^1.0.0","semantic-release":"^17.0.0","sinon":"^8.0.0","sinon-chai":"^3.0.0","sort-keys":"^4.0.0","string-to-arraybuffer":"^1.0.0","string-to-jsdoc-comment":"^1.0.0","typescript":"^3.3.1","webpack":"^4.0.0","webpack-bundle-analyzer":"^3.0.0","webpack-cli":"^3.0.0"},"types":"index.d.ts","scripts":{"coverage":"nyc report --reporter=html && open coverage/index.html","lint":"prettier --check \'{lib,plugins,scripts,test}/**/*.{js,json,ts}\' \'docs/*.{js,json}\' \'docs/src/**/*\' index.js README.md package.json","lint:fix":"prettier --write \'{lib,plugins,scripts,test}/**/*.{js,json,ts}\' \'docs/*.{js,json}\' \'docs/src/**/*\' index.js README.md package.json","pretest":"npm run -s lint","test":"nyc mocha test/mocha-node-setup.js \\"test/*/**/*-test.js\\"","test:browser":"cypress run --browser chrome","build":"npm-run-all build:*","build:ts":"npm run -s update-endpoints:typescript","prebuild:browser":"mkdirp dist/","build:browser":"npm-run-all build:browser:*","build:browser:development":"webpack --mode development --entry . --output-library=Octokit --output=./dist/octokit-rest.js --profile --json > dist/bundle-stats.json","build:browser:production":"webpack --mode production --entry . --plugin=compression-webpack-plugin --output-library=Octokit --output-path=./dist --output-filename=octokit-rest.min.js --devtool source-map","generate-bundle-report":"webpack-bundle-analyzer dist/bundle-stats.json --mode=static --no-open --report dist/bundle-report.html","update-endpoints":"npm-run-all update-endpoints:*","update-endpoints:fetch-json":"node scripts/update-endpoints/fetch-json","update-endpoints:typescript":"node scripts/update-endpoints/typescript","prevalidate:ts":"npm run -s build:ts","validate:ts":"tsc --target es6 --noImplicitAny index.d.ts","postvalidate:ts":"tsc --noEmit --target es6 test/typescript-validate.ts","start-fixtures-server":"octokit-fixtures-server"},"license":"MIT","files":["index.js","index.d.ts","lib","plugins"],"nyc":{"ignore":["test"]},"release":{"publish":["@semantic-release/npm",{"path":"@semantic-release/github","assets":["dist/*","!dist/*.map.gz"]}]},"bundlesize":[{"path":"./dist/octokit-rest.min.js.gz","maxSize":"33 kB"}]}')},8526:e=>{"use strict";e.exports=JSON.parse('{"name":"discord.js","version":"13.6.0","description":"A powerful library for interacting with the Discord API","scripts":{"test":"npm run lint && npm run docs:test && npm run lint:typings && npm run test:typescript","test:typescript":"tsc --noEmit && tsd","lint":"eslint src","lint:fix":"eslint src --fix","lint:typings":"tslint typings/index.d.ts","format":"prettier --write src/**/*.js typings/**/*.ts","prepare":"is-ci || husky install","docs":"docgen --source src --custom docs/index.yml --output docs/docs.json","docs:test":"docgen --source src --custom docs/index.yml","prepublishOnly":"npm run test","changelog":"git cliff --prepend CHANGELOG.md -l"},"main":"./src/index.js","types":"./typings/index.d.ts","files":["src","typings"],"directories":{"lib":"src","test":"test"},"contributors":["Crawl <icrawltogo@gmail.com>","Amish Shah <amishshah.2k@gmail.com>","Vlad Frangu <kingdgrizzle@gmail.com>","SpaceEEC <spaceeec@yahoo.com>","Antonio Roman <kyradiscord@gmail.com>"],"license":"Apache-2.0","keywords":["discord","api","bot","client","node","discordapp"],"repository":{"type":"git","url":"https://github.com/discordjs/discord.js.git"},"bugs":{"url":"https://github.com/discordjs/discord.js/issues"},"homepage":"https://discord.js.org","dependencies":{"@discordjs/builders":"^0.11.0","@discordjs/collection":"^0.4.0","@sapphire/async-queue":"^1.1.9","@types/node-fetch":"^2.5.12","@types/ws":"^8.2.2","discord-api-types":"^0.26.0","form-data":"^4.0.0","node-fetch":"^2.6.1","ws":"^8.4.0"},"devDependencies":{"@commitlint/cli":"^16.0.1","@commitlint/config-angular":"^16.0.0","@discordjs/docgen":"^0.11.0","@favware/npm-deprecate":"^1.0.4","@types/node":"^16.11.12","conventional-changelog-cli":"^2.2.2","dtslint":"^4.2.1","eslint":"^8.5.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.25.3","eslint-plugin-prettier":"^4.0.0","husky":"^7.0.4","is-ci":"^3.0.1","jest":"^27.4.5","lint-staged":"^12.1.4","prettier":"^2.5.1","tsd":"^0.19.0","tslint":"^6.1.3","typescript":"^4.5.4"},"engines":{"node":">=16.6.0","npm":">=7.0.0"}}')},53765:e=>{"use strict";e.exports=JSON.parse('{"application/1d-interleaved-parityfec":{"source":"iana"},"application/3gpdash-qoe-report+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/3gpp-ims+xml":{"source":"iana","compressible":true},"application/3gpphal+json":{"source":"iana","compressible":true},"application/3gpphalforms+json":{"source":"iana","compressible":true},"application/a2l":{"source":"iana"},"application/ace+cbor":{"source":"iana"},"application/activemessage":{"source":"iana"},"application/activity+json":{"source":"iana","compressible":true},"application/alto-costmap+json":{"source":"iana","compressible":true},"application/alto-costmapfilter+json":{"source":"iana","compressible":true},"application/alto-directory+json":{"source":"iana","compressible":true},"application/alto-endpointcost+json":{"source":"iana","compressible":true},"application/alto-endpointcostparams+json":{"source":"iana","compressible":true},"application/alto-endpointprop+json":{"source":"iana","compressible":true},"application/alto-endpointpropparams+json":{"source":"iana","compressible":true},"application/alto-error+json":{"source":"iana","compressible":true},"application/alto-networkmap+json":{"source":"iana","compressible":true},"application/alto-networkmapfilter+json":{"source":"iana","compressible":true},"application/alto-updatestreamcontrol+json":{"source":"iana","compressible":true},"application/alto-updatestreamparams+json":{"source":"iana","compressible":true},"application/aml":{"source":"iana"},"application/andrew-inset":{"source":"iana","extensions":["ez"]},"application/applefile":{"source":"iana"},"application/applixware":{"source":"apache","extensions":["aw"]},"application/at+jwt":{"source":"iana"},"application/atf":{"source":"iana"},"application/atfx":{"source":"iana"},"application/atom+xml":{"source":"iana","compressible":true,"extensions":["atom"]},"application/atomcat+xml":{"source":"iana","compressible":true,"extensions":["atomcat"]},"application/atomdeleted+xml":{"source":"iana","compressible":true,"extensions":["atomdeleted"]},"application/atomicmail":{"source":"iana"},"application/atomsvc+xml":{"source":"iana","compressible":true,"extensions":["atomsvc"]},"application/atsc-dwd+xml":{"source":"iana","compressible":true,"extensions":["dwd"]},"application/atsc-dynamic-event-message":{"source":"iana"},"application/atsc-held+xml":{"source":"iana","compressible":true,"extensions":["held"]},"application/atsc-rdt+json":{"source":"iana","compressible":true},"application/atsc-rsat+xml":{"source":"iana","compressible":true,"extensions":["rsat"]},"application/atxml":{"source":"iana"},"application/auth-policy+xml":{"source":"iana","compressible":true},"application/bacnet-xdd+zip":{"source":"iana","compressible":false},"application/batch-smtp":{"source":"iana"},"application/bdoc":{"compressible":false,"extensions":["bdoc"]},"application/beep+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/calendar+json":{"source":"iana","compressible":true},"application/calendar+xml":{"source":"iana","compressible":true,"extensions":["xcs"]},"application/call-completion":{"source":"iana"},"application/cals-1840":{"source":"iana"},"application/captive+json":{"source":"iana","compressible":true},"application/cbor":{"source":"iana"},"application/cbor-seq":{"source":"iana"},"application/cccex":{"source":"iana"},"application/ccmp+xml":{"source":"iana","compressible":true},"application/ccxml+xml":{"source":"iana","compressible":true,"extensions":["ccxml"]},"application/cdfx+xml":{"source":"iana","compressible":true,"extensions":["cdfx"]},"application/cdmi-capability":{"source":"iana","extensions":["cdmia"]},"application/cdmi-container":{"source":"iana","extensions":["cdmic"]},"application/cdmi-domain":{"source":"iana","extensions":["cdmid"]},"application/cdmi-object":{"source":"iana","extensions":["cdmio"]},"application/cdmi-queue":{"source":"iana","extensions":["cdmiq"]},"application/cdni":{"source":"iana"},"application/cea":{"source":"iana"},"application/cea-2018+xml":{"source":"iana","compressible":true},"application/cellml+xml":{"source":"iana","compressible":true},"application/cfw":{"source":"iana"},"application/city+json":{"source":"iana","compressible":true},"application/clr":{"source":"iana"},"application/clue+xml":{"source":"iana","compressible":true},"application/clue_info+xml":{"source":"iana","compressible":true},"application/cms":{"source":"iana"},"application/cnrp+xml":{"source":"iana","compressible":true},"application/coap-group+json":{"source":"iana","compressible":true},"application/coap-payload":{"source":"iana"},"application/commonground":{"source":"iana"},"application/conference-info+xml":{"source":"iana","compressible":true},"application/cose":{"source":"iana"},"application/cose-key":{"source":"iana"},"application/cose-key-set":{"source":"iana"},"application/cpl+xml":{"source":"iana","compressible":true,"extensions":["cpl"]},"application/csrattrs":{"source":"iana"},"application/csta+xml":{"source":"iana","compressible":true},"application/cstadata+xml":{"source":"iana","compressible":true},"application/csvm+json":{"source":"iana","compressible":true},"application/cu-seeme":{"source":"apache","extensions":["cu"]},"application/cwt":{"source":"iana"},"application/cybercash":{"source":"iana"},"application/dart":{"compressible":true},"application/dash+xml":{"source":"iana","compressible":true,"extensions":["mpd"]},"application/dash-patch+xml":{"source":"iana","compressible":true,"extensions":["mpp"]},"application/dashdelta":{"source":"iana"},"application/davmount+xml":{"source":"iana","compressible":true,"extensions":["davmount"]},"application/dca-rft":{"source":"iana"},"application/dcd":{"source":"iana"},"application/dec-dx":{"source":"iana"},"application/dialog-info+xml":{"source":"iana","compressible":true},"application/dicom":{"source":"iana"},"application/dicom+json":{"source":"iana","compressible":true},"application/dicom+xml":{"source":"iana","compressible":true},"application/dii":{"source":"iana"},"application/dit":{"source":"iana"},"application/dns":{"source":"iana"},"application/dns+json":{"source":"iana","compressible":true},"application/dns-message":{"source":"iana"},"application/docbook+xml":{"source":"apache","compressible":true,"extensions":["dbk"]},"application/dots+cbor":{"source":"iana"},"application/dskpp+xml":{"source":"iana","compressible":true},"application/dssc+der":{"source":"iana","extensions":["dssc"]},"application/dssc+xml":{"source":"iana","compressible":true,"extensions":["xdssc"]},"application/dvcs":{"source":"iana"},"application/ecmascript":{"source":"iana","compressible":true,"extensions":["es","ecma"]},"application/edi-consent":{"source":"iana"},"application/edi-x12":{"source":"iana","compressible":false},"application/edifact":{"source":"iana","compressible":false},"application/efi":{"source":"iana"},"application/elm+json":{"source":"iana","charset":"UTF-8","compressible":true},"application/elm+xml":{"source":"iana","compressible":true},"application/emergencycalldata.cap+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/emergencycalldata.comment+xml":{"source":"iana","compressible":true},"application/emergencycalldata.control+xml":{"source":"iana","compressible":true},"application/emergencycalldata.deviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.ecall.msd":{"source":"iana"},"application/emergencycalldata.providerinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.serviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.subscriberinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.veds+xml":{"source":"iana","compressible":true},"application/emma+xml":{"source":"iana","compressible":true,"extensions":["emma"]},"application/emotionml+xml":{"source":"iana","compressible":true,"extensions":["emotionml"]},"application/encaprtp":{"source":"iana"},"application/epp+xml":{"source":"iana","compressible":true},"application/epub+zip":{"source":"iana","compressible":false,"extensions":["epub"]},"application/eshop":{"source":"iana"},"application/exi":{"source":"iana","extensions":["exi"]},"application/expect-ct-report+json":{"source":"iana","compressible":true},"application/express":{"source":"iana","extensions":["exp"]},"application/fastinfoset":{"source":"iana"},"application/fastsoap":{"source":"iana"},"application/fdt+xml":{"source":"iana","compressible":true,"extensions":["fdt"]},"application/fhir+json":{"source":"iana","charset":"UTF-8","compressible":true},"application/fhir+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/fido.trusted-apps+json":{"compressible":true},"application/fits":{"source":"iana"},"application/flexfec":{"source":"iana"},"application/font-sfnt":{"source":"iana"},"application/font-tdpfr":{"source":"iana","extensions":["pfr"]},"application/font-woff":{"source":"iana","compressible":false},"application/framework-attributes+xml":{"source":"iana","compressible":true},"application/geo+json":{"source":"iana","compressible":true,"extensions":["geojson"]},"application/geo+json-seq":{"source":"iana"},"application/geopackage+sqlite3":{"source":"iana"},"application/geoxacml+xml":{"source":"iana","compressible":true},"application/gltf-buffer":{"source":"iana"},"application/gml+xml":{"source":"iana","compressible":true,"extensions":["gml"]},"application/gpx+xml":{"source":"apache","compressible":true,"extensions":["gpx"]},"application/gxf":{"source":"apache","extensions":["gxf"]},"application/gzip":{"source":"iana","compressible":false,"extensions":["gz"]},"application/h224":{"source":"iana"},"application/held+xml":{"source":"iana","compressible":true},"application/hjson":{"extensions":["hjson"]},"application/http":{"source":"iana"},"application/hyperstudio":{"source":"iana","extensions":["stk"]},"application/ibe-key-request+xml":{"source":"iana","compressible":true},"application/ibe-pkg-reply+xml":{"source":"iana","compressible":true},"application/ibe-pp-data":{"source":"iana"},"application/iges":{"source":"iana"},"application/im-iscomposing+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/index":{"source":"iana"},"application/index.cmd":{"source":"iana"},"application/index.obj":{"source":"iana"},"application/index.response":{"source":"iana"},"application/index.vnd":{"source":"iana"},"application/inkml+xml":{"source":"iana","compressible":true,"extensions":["ink","inkml"]},"application/iotp":{"source":"iana"},"application/ipfix":{"source":"iana","extensions":["ipfix"]},"application/ipp":{"source":"iana"},"application/isup":{"source":"iana"},"application/its+xml":{"source":"iana","compressible":true,"extensions":["its"]},"application/java-archive":{"source":"apache","compressible":false,"extensions":["jar","war","ear"]},"application/java-serialized-object":{"source":"apache","compressible":false,"extensions":["ser"]},"application/java-vm":{"source":"apache","compressible":false,"extensions":["class"]},"application/javascript":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["js","mjs"]},"application/jf2feed+json":{"source":"iana","compressible":true},"application/jose":{"source":"iana"},"application/jose+json":{"source":"iana","compressible":true},"application/jrd+json":{"source":"iana","compressible":true},"application/jscalendar+json":{"source":"iana","compressible":true},"application/json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["json","map"]},"application/json-patch+json":{"source":"iana","compressible":true},"application/json-seq":{"source":"iana"},"application/json5":{"extensions":["json5"]},"application/jsonml+json":{"source":"apache","compressible":true,"extensions":["jsonml"]},"application/jwk+json":{"source":"iana","compressible":true},"application/jwk-set+json":{"source":"iana","compressible":true},"application/jwt":{"source":"iana"},"application/kpml-request+xml":{"source":"iana","compressible":true},"application/kpml-response+xml":{"source":"iana","compressible":true},"application/ld+json":{"source":"iana","compressible":true,"extensions":["jsonld"]},"application/lgr+xml":{"source":"iana","compressible":true,"extensions":["lgr"]},"application/link-format":{"source":"iana"},"application/load-control+xml":{"source":"iana","compressible":true},"application/lost+xml":{"source":"iana","compressible":true,"extensions":["lostxml"]},"application/lostsync+xml":{"source":"iana","compressible":true},"application/lpf+zip":{"source":"iana","compressible":false},"application/lxf":{"source":"iana"},"application/mac-binhex40":{"source":"iana","extensions":["hqx"]},"application/mac-compactpro":{"source":"apache","extensions":["cpt"]},"application/macwriteii":{"source":"iana"},"application/mads+xml":{"source":"iana","compressible":true,"extensions":["mads"]},"application/manifest+json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["webmanifest"]},"application/marc":{"source":"iana","extensions":["mrc"]},"application/marcxml+xml":{"source":"iana","compressible":true,"extensions":["mrcx"]},"application/mathematica":{"source":"iana","extensions":["ma","nb","mb"]},"application/mathml+xml":{"source":"iana","compressible":true,"extensions":["mathml"]},"application/mathml-content+xml":{"source":"iana","compressible":true},"application/mathml-presentation+xml":{"source":"iana","compressible":true},"application/mbms-associated-procedure-description+xml":{"source":"iana","compressible":true},"application/mbms-deregister+xml":{"source":"iana","compressible":true},"application/mbms-envelope+xml":{"source":"iana","compressible":true},"application/mbms-msk+xml":{"source":"iana","compressible":true},"application/mbms-msk-response+xml":{"source":"iana","compressible":true},"application/mbms-protection-description+xml":{"source":"iana","compressible":true},"application/mbms-reception-report+xml":{"source":"iana","compressible":true},"application/mbms-register+xml":{"source":"iana","compressible":true},"application/mbms-register-response+xml":{"source":"iana","compressible":true},"application/mbms-schedule+xml":{"source":"iana","compressible":true},"application/mbms-user-service-description+xml":{"source":"iana","compressible":true},"application/mbox":{"source":"iana","extensions":["mbox"]},"application/media-policy-dataset+xml":{"source":"iana","compressible":true,"extensions":["mpf"]},"application/media_control+xml":{"source":"iana","compressible":true},"application/mediaservercontrol+xml":{"source":"iana","compressible":true,"extensions":["mscml"]},"application/merge-patch+json":{"source":"iana","compressible":true},"application/metalink+xml":{"source":"apache","compressible":true,"extensions":["metalink"]},"application/metalink4+xml":{"source":"iana","compressible":true,"extensions":["meta4"]},"application/mets+xml":{"source":"iana","compressible":true,"extensions":["mets"]},"application/mf4":{"source":"iana"},"application/mikey":{"source":"iana"},"application/mipc":{"source":"iana"},"application/missing-blocks+cbor-seq":{"source":"iana"},"application/mmt-aei+xml":{"source":"iana","compressible":true,"extensions":["maei"]},"application/mmt-usd+xml":{"source":"iana","compressible":true,"extensions":["musd"]},"application/mods+xml":{"source":"iana","compressible":true,"extensions":["mods"]},"application/moss-keys":{"source":"iana"},"application/moss-signature":{"source":"iana"},"application/mosskey-data":{"source":"iana"},"application/mosskey-request":{"source":"iana"},"application/mp21":{"source":"iana","extensions":["m21","mp21"]},"application/mp4":{"source":"iana","extensions":["mp4s","m4p"]},"application/mpeg4-generic":{"source":"iana"},"application/mpeg4-iod":{"source":"iana"},"application/mpeg4-iod-xmt":{"source":"iana"},"application/mrb-consumer+xml":{"source":"iana","compressible":true},"application/mrb-publish+xml":{"source":"iana","compressible":true},"application/msc-ivr+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/msc-mixer+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/msword":{"source":"iana","compressible":false,"extensions":["doc","dot"]},"application/mud+json":{"source":"iana","compressible":true},"application/multipart-core":{"source":"iana"},"application/mxf":{"source":"iana","extensions":["mxf"]},"application/n-quads":{"source":"iana","extensions":["nq"]},"application/n-triples":{"source":"iana","extensions":["nt"]},"application/nasdata":{"source":"iana"},"application/news-checkgroups":{"source":"iana","charset":"US-ASCII"},"application/news-groupinfo":{"source":"iana","charset":"US-ASCII"},"application/news-transmission":{"source":"iana"},"application/nlsml+xml":{"source":"iana","compressible":true},"application/node":{"source":"iana","extensions":["cjs"]},"application/nss":{"source":"iana"},"application/oauth-authz-req+jwt":{"source":"iana"},"application/oblivious-dns-message":{"source":"iana"},"application/ocsp-request":{"source":"iana"},"application/ocsp-response":{"source":"iana"},"application/octet-stream":{"source":"iana","compressible":false,"extensions":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{"source":"iana","extensions":["oda"]},"application/odm+xml":{"source":"iana","compressible":true},"application/odx":{"source":"iana"},"application/oebps-package+xml":{"source":"iana","compressible":true,"extensions":["opf"]},"application/ogg":{"source":"iana","compressible":false,"extensions":["ogx"]},"application/omdoc+xml":{"source":"apache","compressible":true,"extensions":["omdoc"]},"application/onenote":{"source":"apache","extensions":["onetoc","onetoc2","onetmp","onepkg"]},"application/opc-nodeset+xml":{"source":"iana","compressible":true},"application/oscore":{"source":"iana"},"application/oxps":{"source":"iana","extensions":["oxps"]},"application/p21":{"source":"iana"},"application/p21+zip":{"source":"iana","compressible":false},"application/p2p-overlay+xml":{"source":"iana","compressible":true,"extensions":["relo"]},"application/parityfec":{"source":"iana"},"application/passport":{"source":"iana"},"application/patch-ops-error+xml":{"source":"iana","compressible":true,"extensions":["xer"]},"application/pdf":{"source":"iana","compressible":false,"extensions":["pdf"]},"application/pdx":{"source":"iana"},"application/pem-certificate-chain":{"source":"iana"},"application/pgp-encrypted":{"source":"iana","compressible":false,"extensions":["pgp"]},"application/pgp-keys":{"source":"iana","extensions":["asc"]},"application/pgp-signature":{"source":"iana","extensions":["asc","sig"]},"application/pics-rules":{"source":"apache","extensions":["prf"]},"application/pidf+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/pidf-diff+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/pkcs10":{"source":"iana","extensions":["p10"]},"application/pkcs12":{"source":"iana"},"application/pkcs7-mime":{"source":"iana","extensions":["p7m","p7c"]},"application/pkcs7-signature":{"source":"iana","extensions":["p7s"]},"application/pkcs8":{"source":"iana","extensions":["p8"]},"application/pkcs8-encrypted":{"source":"iana"},"application/pkix-attr-cert":{"source":"iana","extensions":["ac"]},"application/pkix-cert":{"source":"iana","extensions":["cer"]},"application/pkix-crl":{"source":"iana","extensions":["crl"]},"application/pkix-pkipath":{"source":"iana","extensions":["pkipath"]},"application/pkixcmp":{"source":"iana","extensions":["pki"]},"application/pls+xml":{"source":"iana","compressible":true,"extensions":["pls"]},"application/poc-settings+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/postscript":{"source":"iana","compressible":true,"extensions":["ai","eps","ps"]},"application/ppsp-tracker+json":{"source":"iana","compressible":true},"application/problem+json":{"source":"iana","compressible":true},"application/problem+xml":{"source":"iana","compressible":true},"application/provenance+xml":{"source":"iana","compressible":true,"extensions":["provx"]},"application/prs.alvestrand.titrax-sheet":{"source":"iana"},"application/prs.cww":{"source":"iana","extensions":["cww"]},"application/prs.cyn":{"source":"iana","charset":"7-BIT"},"application/prs.hpub+zip":{"source":"iana","compressible":false},"application/prs.nprend":{"source":"iana"},"application/prs.plucker":{"source":"iana"},"application/prs.rdf-xml-crypt":{"source":"iana"},"application/prs.xsf+xml":{"source":"iana","compressible":true},"application/pskc+xml":{"source":"iana","compressible":true,"extensions":["pskcxml"]},"application/pvd+json":{"source":"iana","compressible":true},"application/qsig":{"source":"iana"},"application/raml+yaml":{"compressible":true,"extensions":["raml"]},"application/raptorfec":{"source":"iana"},"application/rdap+json":{"source":"iana","compressible":true},"application/rdf+xml":{"source":"iana","compressible":true,"extensions":["rdf","owl"]},"application/reginfo+xml":{"source":"iana","compressible":true,"extensions":["rif"]},"application/relax-ng-compact-syntax":{"source":"iana","extensions":["rnc"]},"application/remote-printing":{"source":"iana"},"application/reputon+json":{"source":"iana","compressible":true},"application/resource-lists+xml":{"source":"iana","compressible":true,"extensions":["rl"]},"application/resource-lists-diff+xml":{"source":"iana","compressible":true,"extensions":["rld"]},"application/rfc+xml":{"source":"iana","compressible":true},"application/riscos":{"source":"iana"},"application/rlmi+xml":{"source":"iana","compressible":true},"application/rls-services+xml":{"source":"iana","compressible":true,"extensions":["rs"]},"application/route-apd+xml":{"source":"iana","compressible":true,"extensions":["rapd"]},"application/route-s-tsid+xml":{"source":"iana","compressible":true,"extensions":["sls"]},"application/route-usd+xml":{"source":"iana","compressible":true,"extensions":["rusd"]},"application/rpki-ghostbusters":{"source":"iana","extensions":["gbr"]},"application/rpki-manifest":{"source":"iana","extensions":["mft"]},"application/rpki-publication":{"source":"iana"},"application/rpki-roa":{"source":"iana","extensions":["roa"]},"application/rpki-updown":{"source":"iana"},"application/rsd+xml":{"source":"apache","compressible":true,"extensions":["rsd"]},"application/rss+xml":{"source":"apache","compressible":true,"extensions":["rss"]},"application/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"application/rtploopback":{"source":"iana"},"application/rtx":{"source":"iana"},"application/samlassertion+xml":{"source":"iana","compressible":true},"application/samlmetadata+xml":{"source":"iana","compressible":true},"application/sarif+json":{"source":"iana","compressible":true},"application/sarif-external-properties+json":{"source":"iana","compressible":true},"application/sbe":{"source":"iana"},"application/sbml+xml":{"source":"iana","compressible":true,"extensions":["sbml"]},"application/scaip+xml":{"source":"iana","compressible":true},"application/scim+json":{"source":"iana","compressible":true},"application/scvp-cv-request":{"source":"iana","extensions":["scq"]},"application/scvp-cv-response":{"source":"iana","extensions":["scs"]},"application/scvp-vp-request":{"source":"iana","extensions":["spq"]},"application/scvp-vp-response":{"source":"iana","extensions":["spp"]},"application/sdp":{"source":"iana","extensions":["sdp"]},"application/secevent+jwt":{"source":"iana"},"application/senml+cbor":{"source":"iana"},"application/senml+json":{"source":"iana","compressible":true},"application/senml+xml":{"source":"iana","compressible":true,"extensions":["senmlx"]},"application/senml-etch+cbor":{"source":"iana"},"application/senml-etch+json":{"source":"iana","compressible":true},"application/senml-exi":{"source":"iana"},"application/sensml+cbor":{"source":"iana"},"application/sensml+json":{"source":"iana","compressible":true},"application/sensml+xml":{"source":"iana","compressible":true,"extensions":["sensmlx"]},"application/sensml-exi":{"source":"iana"},"application/sep+xml":{"source":"iana","compressible":true},"application/sep-exi":{"source":"iana"},"application/session-info":{"source":"iana"},"application/set-payment":{"source":"iana"},"application/set-payment-initiation":{"source":"iana","extensions":["setpay"]},"application/set-registration":{"source":"iana"},"application/set-registration-initiation":{"source":"iana","extensions":["setreg"]},"application/sgml":{"source":"iana"},"application/sgml-open-catalog":{"source":"iana"},"application/shf+xml":{"source":"iana","compressible":true,"extensions":["shf"]},"application/sieve":{"source":"iana","extensions":["siv","sieve"]},"application/simple-filter+xml":{"source":"iana","compressible":true},"application/simple-message-summary":{"source":"iana"},"application/simplesymbolcontainer":{"source":"iana"},"application/sipc":{"source":"iana"},"application/slate":{"source":"iana"},"application/smil":{"source":"iana"},"application/smil+xml":{"source":"iana","compressible":true,"extensions":["smi","smil"]},"application/smpte336m":{"source":"iana"},"application/soap+fastinfoset":{"source":"iana"},"application/soap+xml":{"source":"iana","compressible":true},"application/sparql-query":{"source":"iana","extensions":["rq"]},"application/sparql-results+xml":{"source":"iana","compressible":true,"extensions":["srx"]},"application/spdx+json":{"source":"iana","compressible":true},"application/spirits-event+xml":{"source":"iana","compressible":true},"application/sql":{"source":"iana"},"application/srgs":{"source":"iana","extensions":["gram"]},"application/srgs+xml":{"source":"iana","compressible":true,"extensions":["grxml"]},"application/sru+xml":{"source":"iana","compressible":true,"extensions":["sru"]},"application/ssdl+xml":{"source":"apache","compressible":true,"extensions":["ssdl"]},"application/ssml+xml":{"source":"iana","compressible":true,"extensions":["ssml"]},"application/stix+json":{"source":"iana","compressible":true},"application/swid+xml":{"source":"iana","compressible":true,"extensions":["swidtag"]},"application/tamp-apex-update":{"source":"iana"},"application/tamp-apex-update-confirm":{"source":"iana"},"application/tamp-community-update":{"source":"iana"},"application/tamp-community-update-confirm":{"source":"iana"},"application/tamp-error":{"source":"iana"},"application/tamp-sequence-adjust":{"source":"iana"},"application/tamp-sequence-adjust-confirm":{"source":"iana"},"application/tamp-status-query":{"source":"iana"},"application/tamp-status-response":{"source":"iana"},"application/tamp-update":{"source":"iana"},"application/tamp-update-confirm":{"source":"iana"},"application/tar":{"compressible":true},"application/taxii+json":{"source":"iana","compressible":true},"application/td+json":{"source":"iana","compressible":true},"application/tei+xml":{"source":"iana","compressible":true,"extensions":["tei","teicorpus"]},"application/tetra_isi":{"source":"iana"},"application/thraud+xml":{"source":"iana","compressible":true,"extensions":["tfi"]},"application/timestamp-query":{"source":"iana"},"application/timestamp-reply":{"source":"iana"},"application/timestamped-data":{"source":"iana","extensions":["tsd"]},"application/tlsrpt+gzip":{"source":"iana"},"application/tlsrpt+json":{"source":"iana","compressible":true},"application/tnauthlist":{"source":"iana"},"application/token-introspection+jwt":{"source":"iana"},"application/toml":{"compressible":true,"extensions":["toml"]},"application/trickle-ice-sdpfrag":{"source":"iana"},"application/trig":{"source":"iana","extensions":["trig"]},"application/ttml+xml":{"source":"iana","compressible":true,"extensions":["ttml"]},"application/tve-trigger":{"source":"iana"},"application/tzif":{"source":"iana"},"application/tzif-leap":{"source":"iana"},"application/ubjson":{"compressible":false,"extensions":["ubj"]},"application/ulpfec":{"source":"iana"},"application/urc-grpsheet+xml":{"source":"iana","compressible":true},"application/urc-ressheet+xml":{"source":"iana","compressible":true,"extensions":["rsheet"]},"application/urc-targetdesc+xml":{"source":"iana","compressible":true,"extensions":["td"]},"application/urc-uisocketdesc+xml":{"source":"iana","compressible":true},"application/vcard+json":{"source":"iana","compressible":true},"application/vcard+xml":{"source":"iana","compressible":true},"application/vemmi":{"source":"iana"},"application/vividence.scriptfile":{"source":"apache"},"application/vnd.1000minds.decision-model+xml":{"source":"iana","compressible":true,"extensions":["1km"]},"application/vnd.3gpp-prose+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-prose-pc3ch+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-v2x-local-service-information":{"source":"iana"},"application/vnd.3gpp.5gnas":{"source":"iana"},"application/vnd.3gpp.access-transfer-events+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.bsf+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gmop+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gtpc":{"source":"iana"},"application/vnd.3gpp.interworking-data":{"source":"iana"},"application/vnd.3gpp.lpp":{"source":"iana"},"application/vnd.3gpp.mc-signalling-ear":{"source":"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-payload":{"source":"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-signalling":{"source":"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-floor-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-signed+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-init-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-transmission-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mid-call+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ngap":{"source":"iana"},"application/vnd.3gpp.pfcp":{"source":"iana"},"application/vnd.3gpp.pic-bw-large":{"source":"iana","extensions":["plb"]},"application/vnd.3gpp.pic-bw-small":{"source":"iana","extensions":["psb"]},"application/vnd.3gpp.pic-bw-var":{"source":"iana","extensions":["pvb"]},"application/vnd.3gpp.s1ap":{"source":"iana"},"application/vnd.3gpp.sms":{"source":"iana"},"application/vnd.3gpp.sms+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-ext+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.state-and-event-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ussd+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.bcmcsinfo+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.sms":{"source":"iana"},"application/vnd.3gpp2.tcap":{"source":"iana","extensions":["tcap"]},"application/vnd.3lightssoftware.imagescal":{"source":"iana"},"application/vnd.3m.post-it-notes":{"source":"iana","extensions":["pwn"]},"application/vnd.accpac.simply.aso":{"source":"iana","extensions":["aso"]},"application/vnd.accpac.simply.imp":{"source":"iana","extensions":["imp"]},"application/vnd.acucobol":{"source":"iana","extensions":["acu"]},"application/vnd.acucorp":{"source":"iana","extensions":["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{"source":"apache","compressible":false,"extensions":["air"]},"application/vnd.adobe.flash.movie":{"source":"iana"},"application/vnd.adobe.formscentral.fcdt":{"source":"iana","extensions":["fcdt"]},"application/vnd.adobe.fxp":{"source":"iana","extensions":["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{"source":"iana"},"application/vnd.adobe.xdp+xml":{"source":"iana","compressible":true,"extensions":["xdp"]},"application/vnd.adobe.xfdf":{"source":"iana","extensions":["xfdf"]},"application/vnd.aether.imp":{"source":"iana"},"application/vnd.afpc.afplinedata":{"source":"iana"},"application/vnd.afpc.afplinedata-pagedef":{"source":"iana"},"application/vnd.afpc.cmoca-cmresource":{"source":"iana"},"application/vnd.afpc.foca-charset":{"source":"iana"},"application/vnd.afpc.foca-codedfont":{"source":"iana"},"application/vnd.afpc.foca-codepage":{"source":"iana"},"application/vnd.afpc.modca":{"source":"iana"},"application/vnd.afpc.modca-cmtable":{"source":"iana"},"application/vnd.afpc.modca-formdef":{"source":"iana"},"application/vnd.afpc.modca-mediummap":{"source":"iana"},"application/vnd.afpc.modca-objectcontainer":{"source":"iana"},"application/vnd.afpc.modca-overlay":{"source":"iana"},"application/vnd.afpc.modca-pagesegment":{"source":"iana"},"application/vnd.age":{"source":"iana","extensions":["age"]},"application/vnd.ah-barcode":{"source":"iana"},"application/vnd.ahead.space":{"source":"iana","extensions":["ahead"]},"application/vnd.airzip.filesecure.azf":{"source":"iana","extensions":["azf"]},"application/vnd.airzip.filesecure.azs":{"source":"iana","extensions":["azs"]},"application/vnd.amadeus+json":{"source":"iana","compressible":true},"application/vnd.amazon.ebook":{"source":"apache","extensions":["azw"]},"application/vnd.amazon.mobi8-ebook":{"source":"iana"},"application/vnd.americandynamics.acc":{"source":"iana","extensions":["acc"]},"application/vnd.amiga.ami":{"source":"iana","extensions":["ami"]},"application/vnd.amundsen.maze+xml":{"source":"iana","compressible":true},"application/vnd.android.ota":{"source":"iana"},"application/vnd.android.package-archive":{"source":"apache","compressible":false,"extensions":["apk"]},"application/vnd.anki":{"source":"iana"},"application/vnd.anser-web-certificate-issue-initiation":{"source":"iana","extensions":["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{"source":"apache","extensions":["fti"]},"application/vnd.antix.game-component":{"source":"iana","extensions":["atx"]},"application/vnd.apache.arrow.file":{"source":"iana"},"application/vnd.apache.arrow.stream":{"source":"iana"},"application/vnd.apache.thrift.binary":{"source":"iana"},"application/vnd.apache.thrift.compact":{"source":"iana"},"application/vnd.apache.thrift.json":{"source":"iana"},"application/vnd.api+json":{"source":"iana","compressible":true},"application/vnd.aplextor.warrp+json":{"source":"iana","compressible":true},"application/vnd.apothekende.reservation+json":{"source":"iana","compressible":true},"application/vnd.apple.installer+xml":{"source":"iana","compressible":true,"extensions":["mpkg"]},"application/vnd.apple.keynote":{"source":"iana","extensions":["key"]},"application/vnd.apple.mpegurl":{"source":"iana","extensions":["m3u8"]},"application/vnd.apple.numbers":{"source":"iana","extensions":["numbers"]},"application/vnd.apple.pages":{"source":"iana","extensions":["pages"]},"application/vnd.apple.pkpass":{"compressible":false,"extensions":["pkpass"]},"application/vnd.arastra.swi":{"source":"iana"},"application/vnd.aristanetworks.swi":{"source":"iana","extensions":["swi"]},"application/vnd.artisan+json":{"source":"iana","compressible":true},"application/vnd.artsquare":{"source":"iana"},"application/vnd.astraea-software.iota":{"source":"iana","extensions":["iota"]},"application/vnd.audiograph":{"source":"iana","extensions":["aep"]},"application/vnd.autopackage":{"source":"iana"},"application/vnd.avalon+json":{"source":"iana","compressible":true},"application/vnd.avistar+xml":{"source":"iana","compressible":true},"application/vnd.balsamiq.bmml+xml":{"source":"iana","compressible":true,"extensions":["bmml"]},"application/vnd.balsamiq.bmpr":{"source":"iana"},"application/vnd.banana-accounting":{"source":"iana"},"application/vnd.bbf.usp.error":{"source":"iana"},"application/vnd.bbf.usp.msg":{"source":"iana"},"application/vnd.bbf.usp.msg+json":{"source":"iana","compressible":true},"application/vnd.bekitzur-stech+json":{"source":"iana","compressible":true},"application/vnd.bint.med-content":{"source":"iana"},"application/vnd.biopax.rdf+xml":{"source":"iana","compressible":true},"application/vnd.blink-idb-value-wrapper":{"source":"iana"},"application/vnd.blueice.multipass":{"source":"iana","extensions":["mpm"]},"application/vnd.bluetooth.ep.oob":{"source":"iana"},"application/vnd.bluetooth.le.oob":{"source":"iana"},"application/vnd.bmi":{"source":"iana","extensions":["bmi"]},"application/vnd.bpf":{"source":"iana"},"application/vnd.bpf3":{"source":"iana"},"application/vnd.businessobjects":{"source":"iana","extensions":["rep"]},"application/vnd.byu.uapi+json":{"source":"iana","compressible":true},"application/vnd.cab-jscript":{"source":"iana"},"application/vnd.canon-cpdl":{"source":"iana"},"application/vnd.canon-lips":{"source":"iana"},"application/vnd.capasystems-pg+json":{"source":"iana","compressible":true},"application/vnd.cendio.thinlinc.clientconf":{"source":"iana"},"application/vnd.century-systems.tcp_stream":{"source":"iana"},"application/vnd.chemdraw+xml":{"source":"iana","compressible":true,"extensions":["cdxml"]},"application/vnd.chess-pgn":{"source":"iana"},"application/vnd.chipnuts.karaoke-mmd":{"source":"iana","extensions":["mmd"]},"application/vnd.ciedi":{"source":"iana"},"application/vnd.cinderella":{"source":"iana","extensions":["cdy"]},"application/vnd.cirpack.isdn-ext":{"source":"iana"},"application/vnd.citationstyles.style+xml":{"source":"iana","compressible":true,"extensions":["csl"]},"application/vnd.claymore":{"source":"iana","extensions":["cla"]},"application/vnd.cloanto.rp9":{"source":"iana","extensions":["rp9"]},"application/vnd.clonk.c4group":{"source":"iana","extensions":["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{"source":"iana","extensions":["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{"source":"iana","extensions":["c11amz"]},"application/vnd.coffeescript":{"source":"iana"},"application/vnd.collabio.xodocuments.document":{"source":"iana"},"application/vnd.collabio.xodocuments.document-template":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation-template":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{"source":"iana"},"application/vnd.collection+json":{"source":"iana","compressible":true},"application/vnd.collection.doc+json":{"source":"iana","compressible":true},"application/vnd.collection.next+json":{"source":"iana","compressible":true},"application/vnd.comicbook+zip":{"source":"iana","compressible":false},"application/vnd.comicbook-rar":{"source":"iana"},"application/vnd.commerce-battelle":{"source":"iana"},"application/vnd.commonspace":{"source":"iana","extensions":["csp"]},"application/vnd.contact.cmsg":{"source":"iana","extensions":["cdbcmsg"]},"application/vnd.coreos.ignition+json":{"source":"iana","compressible":true},"application/vnd.cosmocaller":{"source":"iana","extensions":["cmc"]},"application/vnd.crick.clicker":{"source":"iana","extensions":["clkx"]},"application/vnd.crick.clicker.keyboard":{"source":"iana","extensions":["clkk"]},"application/vnd.crick.clicker.palette":{"source":"iana","extensions":["clkp"]},"application/vnd.crick.clicker.template":{"source":"iana","extensions":["clkt"]},"application/vnd.crick.clicker.wordbank":{"source":"iana","extensions":["clkw"]},"application/vnd.criticaltools.wbs+xml":{"source":"iana","compressible":true,"extensions":["wbs"]},"application/vnd.cryptii.pipe+json":{"source":"iana","compressible":true},"application/vnd.crypto-shade-file":{"source":"iana"},"application/vnd.cryptomator.encrypted":{"source":"iana"},"application/vnd.cryptomator.vault":{"source":"iana"},"application/vnd.ctc-posml":{"source":"iana","extensions":["pml"]},"application/vnd.ctct.ws+xml":{"source":"iana","compressible":true},"application/vnd.cups-pdf":{"source":"iana"},"application/vnd.cups-postscript":{"source":"iana"},"application/vnd.cups-ppd":{"source":"iana","extensions":["ppd"]},"application/vnd.cups-raster":{"source":"iana"},"application/vnd.cups-raw":{"source":"iana"},"application/vnd.curl":{"source":"iana"},"application/vnd.curl.car":{"source":"apache","extensions":["car"]},"application/vnd.curl.pcurl":{"source":"apache","extensions":["pcurl"]},"application/vnd.cyan.dean.root+xml":{"source":"iana","compressible":true},"application/vnd.cybank":{"source":"iana"},"application/vnd.cyclonedx+json":{"source":"iana","compressible":true},"application/vnd.cyclonedx+xml":{"source":"iana","compressible":true},"application/vnd.d2l.coursepackage1p0+zip":{"source":"iana","compressible":false},"application/vnd.d3m-dataset":{"source":"iana"},"application/vnd.d3m-problem":{"source":"iana"},"application/vnd.dart":{"source":"iana","compressible":true,"extensions":["dart"]},"application/vnd.data-vision.rdz":{"source":"iana","extensions":["rdz"]},"application/vnd.datapackage+json":{"source":"iana","compressible":true},"application/vnd.dataresource+json":{"source":"iana","compressible":true},"application/vnd.dbf":{"source":"iana","extensions":["dbf"]},"application/vnd.debian.binary-package":{"source":"iana"},"application/vnd.dece.data":{"source":"iana","extensions":["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{"source":"iana","compressible":true,"extensions":["uvt","uvvt"]},"application/vnd.dece.unspecified":{"source":"iana","extensions":["uvx","uvvx"]},"application/vnd.dece.zip":{"source":"iana","extensions":["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{"source":"iana","extensions":["fe_launch"]},"application/vnd.desmume.movie":{"source":"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{"source":"iana"},"application/vnd.dm.delegation+xml":{"source":"iana","compressible":true},"application/vnd.dna":{"source":"iana","extensions":["dna"]},"application/vnd.document+json":{"source":"iana","compressible":true},"application/vnd.dolby.mlp":{"source":"apache","extensions":["mlp"]},"application/vnd.dolby.mobile.1":{"source":"iana"},"application/vnd.dolby.mobile.2":{"source":"iana"},"application/vnd.doremir.scorecloud-binary-document":{"source":"iana"},"application/vnd.dpgraph":{"source":"iana","extensions":["dpg"]},"application/vnd.dreamfactory":{"source":"iana","extensions":["dfac"]},"application/vnd.drive+json":{"source":"iana","compressible":true},"application/vnd.ds-keypoint":{"source":"apache","extensions":["kpxx"]},"application/vnd.dtg.local":{"source":"iana"},"application/vnd.dtg.local.flash":{"source":"iana"},"application/vnd.dtg.local.html":{"source":"iana"},"application/vnd.dvb.ait":{"source":"iana","extensions":["ait"]},"application/vnd.dvb.dvbisl+xml":{"source":"iana","compressible":true},"application/vnd.dvb.dvbj":{"source":"iana"},"application/vnd.dvb.esgcontainer":{"source":"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess2":{"source":"iana"},"application/vnd.dvb.ipdcesgpdd":{"source":"iana"},"application/vnd.dvb.ipdcroaming":{"source":"iana"},"application/vnd.dvb.iptv.alfec-base":{"source":"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{"source":"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-container+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-generic+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-msglist+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-request+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-response+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-init+xml":{"source":"iana","compressible":true},"application/vnd.dvb.pfr":{"source":"iana"},"application/vnd.dvb.service":{"source":"iana","extensions":["svc"]},"application/vnd.dxr":{"source":"iana"},"application/vnd.dynageo":{"source":"iana","extensions":["geo"]},"application/vnd.dzr":{"source":"iana"},"application/vnd.easykaraoke.cdgdownload":{"source":"iana"},"application/vnd.ecdis-update":{"source":"iana"},"application/vnd.ecip.rlp":{"source":"iana"},"application/vnd.eclipse.ditto+json":{"source":"iana","compressible":true},"application/vnd.ecowin.chart":{"source":"iana","extensions":["mag"]},"application/vnd.ecowin.filerequest":{"source":"iana"},"application/vnd.ecowin.fileupdate":{"source":"iana"},"application/vnd.ecowin.series":{"source":"iana"},"application/vnd.ecowin.seriesrequest":{"source":"iana"},"application/vnd.ecowin.seriesupdate":{"source":"iana"},"application/vnd.efi.img":{"source":"iana"},"application/vnd.efi.iso":{"source":"iana"},"application/vnd.emclient.accessrequest+xml":{"source":"iana","compressible":true},"application/vnd.enliven":{"source":"iana","extensions":["nml"]},"application/vnd.enphase.envoy":{"source":"iana"},"application/vnd.eprints.data+xml":{"source":"iana","compressible":true},"application/vnd.epson.esf":{"source":"iana","extensions":["esf"]},"application/vnd.epson.msf":{"source":"iana","extensions":["msf"]},"application/vnd.epson.quickanime":{"source":"iana","extensions":["qam"]},"application/vnd.epson.salt":{"source":"iana","extensions":["slt"]},"application/vnd.epson.ssf":{"source":"iana","extensions":["ssf"]},"application/vnd.ericsson.quickcall":{"source":"iana"},"application/vnd.espass-espass+zip":{"source":"iana","compressible":false},"application/vnd.eszigno3+xml":{"source":"iana","compressible":true,"extensions":["es3","et3"]},"application/vnd.etsi.aoc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.asic-e+zip":{"source":"iana","compressible":false},"application/vnd.etsi.asic-s+zip":{"source":"iana","compressible":false},"application/vnd.etsi.cug+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvcommand+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-bc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-cod+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-npvr+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvservice+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsync+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvueprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mcid+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mheg5":{"source":"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{"source":"iana","compressible":true},"application/vnd.etsi.pstn+xml":{"source":"iana","compressible":true},"application/vnd.etsi.sci+xml":{"source":"iana","compressible":true},"application/vnd.etsi.simservs+xml":{"source":"iana","compressible":true},"application/vnd.etsi.timestamp-token":{"source":"iana"},"application/vnd.etsi.tsl+xml":{"source":"iana","compressible":true},"application/vnd.etsi.tsl.der":{"source":"iana"},"application/vnd.eu.kasparian.car+json":{"source":"iana","compressible":true},"application/vnd.eudora.data":{"source":"iana"},"application/vnd.evolv.ecig.profile":{"source":"iana"},"application/vnd.evolv.ecig.settings":{"source":"iana"},"application/vnd.evolv.ecig.theme":{"source":"iana"},"application/vnd.exstream-empower+zip":{"source":"iana","compressible":false},"application/vnd.exstream-package":{"source":"iana"},"application/vnd.ezpix-album":{"source":"iana","extensions":["ez2"]},"application/vnd.ezpix-package":{"source":"iana","extensions":["ez3"]},"application/vnd.f-secure.mobile":{"source":"iana"},"application/vnd.familysearch.gedcom+zip":{"source":"iana","compressible":false},"application/vnd.fastcopy-disk-image":{"source":"iana"},"application/vnd.fdf":{"source":"iana","extensions":["fdf"]},"application/vnd.fdsn.mseed":{"source":"iana","extensions":["mseed"]},"application/vnd.fdsn.seed":{"source":"iana","extensions":["seed","dataless"]},"application/vnd.ffsns":{"source":"iana"},"application/vnd.ficlab.flb+zip":{"source":"iana","compressible":false},"application/vnd.filmit.zfc":{"source":"iana"},"application/vnd.fints":{"source":"iana"},"application/vnd.firemonkeys.cloudcell":{"source":"iana"},"application/vnd.flographit":{"source":"iana","extensions":["gph"]},"application/vnd.fluxtime.clip":{"source":"iana","extensions":["ftc"]},"application/vnd.font-fontforge-sfd":{"source":"iana"},"application/vnd.framemaker":{"source":"iana","extensions":["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{"source":"iana","extensions":["fnc"]},"application/vnd.frogans.ltf":{"source":"iana","extensions":["ltf"]},"application/vnd.fsc.weblaunch":{"source":"iana","extensions":["fsc"]},"application/vnd.fujifilm.fb.docuworks":{"source":"iana"},"application/vnd.fujifilm.fb.docuworks.binder":{"source":"iana"},"application/vnd.fujifilm.fb.docuworks.container":{"source":"iana"},"application/vnd.fujifilm.fb.jfi+xml":{"source":"iana","compressible":true},"application/vnd.fujitsu.oasys":{"source":"iana","extensions":["oas"]},"application/vnd.fujitsu.oasys2":{"source":"iana","extensions":["oa2"]},"application/vnd.fujitsu.oasys3":{"source":"iana","extensions":["oa3"]},"application/vnd.fujitsu.oasysgp":{"source":"iana","extensions":["fg5"]},"application/vnd.fujitsu.oasysprs":{"source":"iana","extensions":["bh2"]},"application/vnd.fujixerox.art-ex":{"source":"iana"},"application/vnd.fujixerox.art4":{"source":"iana"},"application/vnd.fujixerox.ddd":{"source":"iana","extensions":["ddd"]},"application/vnd.fujixerox.docuworks":{"source":"iana","extensions":["xdw"]},"application/vnd.fujixerox.docuworks.binder":{"source":"iana","extensions":["xbd"]},"application/vnd.fujixerox.docuworks.container":{"source":"iana"},"application/vnd.fujixerox.hbpl":{"source":"iana"},"application/vnd.fut-misnet":{"source":"iana"},"application/vnd.futoin+cbor":{"source":"iana"},"application/vnd.futoin+json":{"source":"iana","compressible":true},"application/vnd.fuzzysheet":{"source":"iana","extensions":["fzs"]},"application/vnd.genomatix.tuxedo":{"source":"iana","extensions":["txd"]},"application/vnd.gentics.grd+json":{"source":"iana","compressible":true},"application/vnd.geo+json":{"source":"iana","compressible":true},"application/vnd.geocube+xml":{"source":"iana","compressible":true},"application/vnd.geogebra.file":{"source":"iana","extensions":["ggb"]},"application/vnd.geogebra.slides":{"source":"iana"},"application/vnd.geogebra.tool":{"source":"iana","extensions":["ggt"]},"application/vnd.geometry-explorer":{"source":"iana","extensions":["gex","gre"]},"application/vnd.geonext":{"source":"iana","extensions":["gxt"]},"application/vnd.geoplan":{"source":"iana","extensions":["g2w"]},"application/vnd.geospace":{"source":"iana","extensions":["g3w"]},"application/vnd.gerber":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt-response":{"source":"iana"},"application/vnd.gmx":{"source":"iana","extensions":["gmx"]},"application/vnd.google-apps.document":{"compressible":false,"extensions":["gdoc"]},"application/vnd.google-apps.presentation":{"compressible":false,"extensions":["gslides"]},"application/vnd.google-apps.spreadsheet":{"compressible":false,"extensions":["gsheet"]},"application/vnd.google-earth.kml+xml":{"source":"iana","compressible":true,"extensions":["kml"]},"application/vnd.google-earth.kmz":{"source":"iana","compressible":false,"extensions":["kmz"]},"application/vnd.gov.sk.e-form+xml":{"source":"iana","compressible":true},"application/vnd.gov.sk.e-form+zip":{"source":"iana","compressible":false},"application/vnd.gov.sk.xmldatacontainer+xml":{"source":"iana","compressible":true},"application/vnd.grafeq":{"source":"iana","extensions":["gqf","gqs"]},"application/vnd.gridmp":{"source":"iana"},"application/vnd.groove-account":{"source":"iana","extensions":["gac"]},"application/vnd.groove-help":{"source":"iana","extensions":["ghf"]},"application/vnd.groove-identity-message":{"source":"iana","extensions":["gim"]},"application/vnd.groove-injector":{"source":"iana","extensions":["grv"]},"application/vnd.groove-tool-message":{"source":"iana","extensions":["gtm"]},"application/vnd.groove-tool-template":{"source":"iana","extensions":["tpl"]},"application/vnd.groove-vcard":{"source":"iana","extensions":["vcg"]},"application/vnd.hal+json":{"source":"iana","compressible":true},"application/vnd.hal+xml":{"source":"iana","compressible":true,"extensions":["hal"]},"application/vnd.handheld-entertainment+xml":{"source":"iana","compressible":true,"extensions":["zmm"]},"application/vnd.hbci":{"source":"iana","extensions":["hbci"]},"application/vnd.hc+json":{"source":"iana","compressible":true},"application/vnd.hcl-bireports":{"source":"iana"},"application/vnd.hdt":{"source":"iana"},"application/vnd.heroku+json":{"source":"iana","compressible":true},"application/vnd.hhe.lesson-player":{"source":"iana","extensions":["les"]},"application/vnd.hl7cda+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.hl7v2+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.hp-hpgl":{"source":"iana","extensions":["hpgl"]},"application/vnd.hp-hpid":{"source":"iana","extensions":["hpid"]},"application/vnd.hp-hps":{"source":"iana","extensions":["hps"]},"application/vnd.hp-jlyt":{"source":"iana","extensions":["jlt"]},"application/vnd.hp-pcl":{"source":"iana","extensions":["pcl"]},"application/vnd.hp-pclxl":{"source":"iana","extensions":["pclxl"]},"application/vnd.httphone":{"source":"iana"},"application/vnd.hydrostatix.sof-data":{"source":"iana","extensions":["sfd-hdstx"]},"application/vnd.hyper+json":{"source":"iana","compressible":true},"application/vnd.hyper-item+json":{"source":"iana","compressible":true},"application/vnd.hyperdrive+json":{"source":"iana","compressible":true},"application/vnd.hzn-3d-crossword":{"source":"iana"},"application/vnd.ibm.afplinedata":{"source":"iana"},"application/vnd.ibm.electronic-media":{"source":"iana"},"application/vnd.ibm.minipay":{"source":"iana","extensions":["mpy"]},"application/vnd.ibm.modcap":{"source":"iana","extensions":["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{"source":"iana","extensions":["irm"]},"application/vnd.ibm.secure-container":{"source":"iana","extensions":["sc"]},"application/vnd.iccprofile":{"source":"iana","extensions":["icc","icm"]},"application/vnd.ieee.1905":{"source":"iana"},"application/vnd.igloader":{"source":"iana","extensions":["igl"]},"application/vnd.imagemeter.folder+zip":{"source":"iana","compressible":false},"application/vnd.imagemeter.image+zip":{"source":"iana","compressible":false},"application/vnd.immervision-ivp":{"source":"iana","extensions":["ivp"]},"application/vnd.immervision-ivu":{"source":"iana","extensions":["ivu"]},"application/vnd.ims.imsccv1p1":{"source":"iana"},"application/vnd.ims.imsccv1p2":{"source":"iana"},"application/vnd.ims.imsccv1p3":{"source":"iana"},"application/vnd.ims.lis.v2.result+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy.id+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings.simple+json":{"source":"iana","compressible":true},"application/vnd.informedcontrol.rms+xml":{"source":"iana","compressible":true},"application/vnd.informix-visionary":{"source":"iana"},"application/vnd.infotech.project":{"source":"iana"},"application/vnd.infotech.project+xml":{"source":"iana","compressible":true},"application/vnd.innopath.wamp.notification":{"source":"iana"},"application/vnd.insors.igm":{"source":"iana","extensions":["igm"]},"application/vnd.intercon.formnet":{"source":"iana","extensions":["xpw","xpx"]},"application/vnd.intergeo":{"source":"iana","extensions":["i2g"]},"application/vnd.intertrust.digibox":{"source":"iana"},"application/vnd.intertrust.nncp":{"source":"iana"},"application/vnd.intu.qbo":{"source":"iana","extensions":["qbo"]},"application/vnd.intu.qfx":{"source":"iana","extensions":["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.conceptitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.knowledgeitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsmessage+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.packageitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.planningitem+xml":{"source":"iana","compressible":true},"application/vnd.ipunplugged.rcprofile":{"source":"iana","extensions":["rcprofile"]},"application/vnd.irepository.package+xml":{"source":"iana","compressible":true,"extensions":["irp"]},"application/vnd.is-xpr":{"source":"iana","extensions":["xpr"]},"application/vnd.isac.fcs":{"source":"iana","extensions":["fcs"]},"application/vnd.iso11783-10+zip":{"source":"iana","compressible":false},"application/vnd.jam":{"source":"iana","extensions":["jam"]},"application/vnd.japannet-directory-service":{"source":"iana"},"application/vnd.japannet-jpnstore-wakeup":{"source":"iana"},"application/vnd.japannet-payment-wakeup":{"source":"iana"},"application/vnd.japannet-registration":{"source":"iana"},"application/vnd.japannet-registration-wakeup":{"source":"iana"},"application/vnd.japannet-setstore-wakeup":{"source":"iana"},"application/vnd.japannet-verification":{"source":"iana"},"application/vnd.japannet-verification-wakeup":{"source":"iana"},"application/vnd.jcp.javame.midlet-rms":{"source":"iana","extensions":["rms"]},"application/vnd.jisp":{"source":"iana","extensions":["jisp"]},"application/vnd.joost.joda-archive":{"source":"iana","extensions":["joda"]},"application/vnd.jsk.isdn-ngn":{"source":"iana"},"application/vnd.kahootz":{"source":"iana","extensions":["ktz","ktr"]},"application/vnd.kde.karbon":{"source":"iana","extensions":["karbon"]},"application/vnd.kde.kchart":{"source":"iana","extensions":["chrt"]},"application/vnd.kde.kformula":{"source":"iana","extensions":["kfo"]},"application/vnd.kde.kivio":{"source":"iana","extensions":["flw"]},"application/vnd.kde.kontour":{"source":"iana","extensions":["kon"]},"application/vnd.kde.kpresenter":{"source":"iana","extensions":["kpr","kpt"]},"application/vnd.kde.kspread":{"source":"iana","extensions":["ksp"]},"application/vnd.kde.kword":{"source":"iana","extensions":["kwd","kwt"]},"application/vnd.kenameaapp":{"source":"iana","extensions":["htke"]},"application/vnd.kidspiration":{"source":"iana","extensions":["kia"]},"application/vnd.kinar":{"source":"iana","extensions":["kne","knp"]},"application/vnd.koan":{"source":"iana","extensions":["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{"source":"iana","extensions":["sse"]},"application/vnd.las":{"source":"iana"},"application/vnd.las.las+json":{"source":"iana","compressible":true},"application/vnd.las.las+xml":{"source":"iana","compressible":true,"extensions":["lasxml"]},"application/vnd.laszip":{"source":"iana"},"application/vnd.leap+json":{"source":"iana","compressible":true},"application/vnd.liberty-request+xml":{"source":"iana","compressible":true},"application/vnd.llamagraphics.life-balance.desktop":{"source":"iana","extensions":["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{"source":"iana","compressible":true,"extensions":["lbe"]},"application/vnd.logipipe.circuit+zip":{"source":"iana","compressible":false},"application/vnd.loom":{"source":"iana"},"application/vnd.lotus-1-2-3":{"source":"iana","extensions":["123"]},"application/vnd.lotus-approach":{"source":"iana","extensions":["apr"]},"application/vnd.lotus-freelance":{"source":"iana","extensions":["pre"]},"application/vnd.lotus-notes":{"source":"iana","extensions":["nsf"]},"application/vnd.lotus-organizer":{"source":"iana","extensions":["org"]},"application/vnd.lotus-screencam":{"source":"iana","extensions":["scm"]},"application/vnd.lotus-wordpro":{"source":"iana","extensions":["lwp"]},"application/vnd.macports.portpkg":{"source":"iana","extensions":["portpkg"]},"application/vnd.mapbox-vector-tile":{"source":"iana","extensions":["mvt"]},"application/vnd.marlin.drm.actiontoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.conftoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.license+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.mdcf":{"source":"iana"},"application/vnd.mason+json":{"source":"iana","compressible":true},"application/vnd.maxar.archive.3tz+zip":{"source":"iana","compressible":false},"application/vnd.maxmind.maxmind-db":{"source":"iana"},"application/vnd.mcd":{"source":"iana","extensions":["mcd"]},"application/vnd.medcalcdata":{"source":"iana","extensions":["mc1"]},"application/vnd.mediastation.cdkey":{"source":"iana","extensions":["cdkey"]},"application/vnd.meridian-slingshot":{"source":"iana"},"application/vnd.mfer":{"source":"iana","extensions":["mwf"]},"application/vnd.mfmp":{"source":"iana","extensions":["mfm"]},"application/vnd.micro+json":{"source":"iana","compressible":true},"application/vnd.micrografx.flo":{"source":"iana","extensions":["flo"]},"application/vnd.micrografx.igx":{"source":"iana","extensions":["igx"]},"application/vnd.microsoft.portable-executable":{"source":"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{"source":"iana"},"application/vnd.miele+json":{"source":"iana","compressible":true},"application/vnd.mif":{"source":"iana","extensions":["mif"]},"application/vnd.minisoft-hp3000-save":{"source":"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{"source":"iana"},"application/vnd.mobius.daf":{"source":"iana","extensions":["daf"]},"application/vnd.mobius.dis":{"source":"iana","extensions":["dis"]},"application/vnd.mobius.mbk":{"source":"iana","extensions":["mbk"]},"application/vnd.mobius.mqy":{"source":"iana","extensions":["mqy"]},"application/vnd.mobius.msl":{"source":"iana","extensions":["msl"]},"application/vnd.mobius.plc":{"source":"iana","extensions":["plc"]},"application/vnd.mobius.txf":{"source":"iana","extensions":["txf"]},"application/vnd.mophun.application":{"source":"iana","extensions":["mpn"]},"application/vnd.mophun.certificate":{"source":"iana","extensions":["mpc"]},"application/vnd.motorola.flexsuite":{"source":"iana"},"application/vnd.motorola.flexsuite.adsi":{"source":"iana"},"application/vnd.motorola.flexsuite.fis":{"source":"iana"},"application/vnd.motorola.flexsuite.gotap":{"source":"iana"},"application/vnd.motorola.flexsuite.kmr":{"source":"iana"},"application/vnd.motorola.flexsuite.ttc":{"source":"iana"},"application/vnd.motorola.flexsuite.wem":{"source":"iana"},"application/vnd.motorola.iprm":{"source":"iana"},"application/vnd.mozilla.xul+xml":{"source":"iana","compressible":true,"extensions":["xul"]},"application/vnd.ms-3mfdocument":{"source":"iana"},"application/vnd.ms-artgalry":{"source":"iana","extensions":["cil"]},"application/vnd.ms-asf":{"source":"iana"},"application/vnd.ms-cab-compressed":{"source":"iana","extensions":["cab"]},"application/vnd.ms-color.iccprofile":{"source":"apache"},"application/vnd.ms-excel":{"source":"iana","compressible":false,"extensions":["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{"source":"iana","extensions":["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{"source":"iana","extensions":["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{"source":"iana","extensions":["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{"source":"iana","extensions":["xltm"]},"application/vnd.ms-fontobject":{"source":"iana","compressible":true,"extensions":["eot"]},"application/vnd.ms-htmlhelp":{"source":"iana","extensions":["chm"]},"application/vnd.ms-ims":{"source":"iana","extensions":["ims"]},"application/vnd.ms-lrm":{"source":"iana","extensions":["lrm"]},"application/vnd.ms-office.activex+xml":{"source":"iana","compressible":true},"application/vnd.ms-officetheme":{"source":"iana","extensions":["thmx"]},"application/vnd.ms-opentype":{"source":"apache","compressible":true},"application/vnd.ms-outlook":{"compressible":false,"extensions":["msg"]},"application/vnd.ms-package.obfuscated-opentype":{"source":"apache"},"application/vnd.ms-pki.seccat":{"source":"apache","extensions":["cat"]},"application/vnd.ms-pki.stl":{"source":"apache","extensions":["stl"]},"application/vnd.ms-playready.initiator+xml":{"source":"iana","compressible":true},"application/vnd.ms-powerpoint":{"source":"iana","compressible":false,"extensions":["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{"source":"iana","extensions":["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{"source":"iana","extensions":["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{"source":"iana","extensions":["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{"source":"iana","extensions":["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{"source":"iana","extensions":["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{"source":"iana","compressible":true},"application/vnd.ms-printing.printticket+xml":{"source":"apache","compressible":true},"application/vnd.ms-printschematicket+xml":{"source":"iana","compressible":true},"application/vnd.ms-project":{"source":"iana","extensions":["mpp","mpt"]},"application/vnd.ms-tnef":{"source":"iana"},"application/vnd.ms-windows.devicepairing":{"source":"iana"},"application/vnd.ms-windows.nwprinting.oob":{"source":"iana"},"application/vnd.ms-windows.printerpairing":{"source":"iana"},"application/vnd.ms-windows.wsd.oob":{"source":"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.lic-resp":{"source":"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.meter-resp":{"source":"iana"},"application/vnd.ms-word.document.macroenabled.12":{"source":"iana","extensions":["docm"]},"application/vnd.ms-word.template.macroenabled.12":{"source":"iana","extensions":["dotm"]},"application/vnd.ms-works":{"source":"iana","extensions":["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{"source":"iana","extensions":["wpl"]},"application/vnd.ms-xpsdocument":{"source":"iana","compressible":false,"extensions":["xps"]},"application/vnd.msa-disk-image":{"source":"iana"},"application/vnd.mseq":{"source":"iana","extensions":["mseq"]},"application/vnd.msign":{"source":"iana"},"application/vnd.multiad.creator":{"source":"iana"},"application/vnd.multiad.creator.cif":{"source":"iana"},"application/vnd.music-niff":{"source":"iana"},"application/vnd.musician":{"source":"iana","extensions":["mus"]},"application/vnd.muvee.style":{"source":"iana","extensions":["msty"]},"application/vnd.mynfc":{"source":"iana","extensions":["taglet"]},"application/vnd.nacamar.ybrid+json":{"source":"iana","compressible":true},"application/vnd.ncd.control":{"source":"iana"},"application/vnd.ncd.reference":{"source":"iana"},"application/vnd.nearst.inv+json":{"source":"iana","compressible":true},"application/vnd.nebumind.line":{"source":"iana"},"application/vnd.nervana":{"source":"iana"},"application/vnd.netfpx":{"source":"iana"},"application/vnd.neurolanguage.nlu":{"source":"iana","extensions":["nlu"]},"application/vnd.nimn":{"source":"iana"},"application/vnd.nintendo.nitro.rom":{"source":"iana"},"application/vnd.nintendo.snes.rom":{"source":"iana"},"application/vnd.nitf":{"source":"iana","extensions":["ntf","nitf"]},"application/vnd.noblenet-directory":{"source":"iana","extensions":["nnd"]},"application/vnd.noblenet-sealer":{"source":"iana","extensions":["nns"]},"application/vnd.noblenet-web":{"source":"iana","extensions":["nnw"]},"application/vnd.nokia.catalogs":{"source":"iana"},"application/vnd.nokia.conml+wbxml":{"source":"iana"},"application/vnd.nokia.conml+xml":{"source":"iana","compressible":true},"application/vnd.nokia.iptv.config+xml":{"source":"iana","compressible":true},"application/vnd.nokia.isds-radio-presets":{"source":"iana"},"application/vnd.nokia.landmark+wbxml":{"source":"iana"},"application/vnd.nokia.landmark+xml":{"source":"iana","compressible":true},"application/vnd.nokia.landmarkcollection+xml":{"source":"iana","compressible":true},"application/vnd.nokia.n-gage.ac+xml":{"source":"iana","compressible":true,"extensions":["ac"]},"application/vnd.nokia.n-gage.data":{"source":"iana","extensions":["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{"source":"iana","extensions":["n-gage"]},"application/vnd.nokia.ncd":{"source":"iana"},"application/vnd.nokia.pcd+wbxml":{"source":"iana"},"application/vnd.nokia.pcd+xml":{"source":"iana","compressible":true},"application/vnd.nokia.radio-preset":{"source":"iana","extensions":["rpst"]},"application/vnd.nokia.radio-presets":{"source":"iana","extensions":["rpss"]},"application/vnd.novadigm.edm":{"source":"iana","extensions":["edm"]},"application/vnd.novadigm.edx":{"source":"iana","extensions":["edx"]},"application/vnd.novadigm.ext":{"source":"iana","extensions":["ext"]},"application/vnd.ntt-local.content-share":{"source":"iana"},"application/vnd.ntt-local.file-transfer":{"source":"iana"},"application/vnd.ntt-local.ogw_remote-access":{"source":"iana"},"application/vnd.ntt-local.sip-ta_remote":{"source":"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{"source":"iana"},"application/vnd.oasis.opendocument.chart":{"source":"iana","extensions":["odc"]},"application/vnd.oasis.opendocument.chart-template":{"source":"iana","extensions":["otc"]},"application/vnd.oasis.opendocument.database":{"source":"iana","extensions":["odb"]},"application/vnd.oasis.opendocument.formula":{"source":"iana","extensions":["odf"]},"application/vnd.oasis.opendocument.formula-template":{"source":"iana","extensions":["odft"]},"application/vnd.oasis.opendocument.graphics":{"source":"iana","compressible":false,"extensions":["odg"]},"application/vnd.oasis.opendocument.graphics-template":{"source":"iana","extensions":["otg"]},"application/vnd.oasis.opendocument.image":{"source":"iana","extensions":["odi"]},"application/vnd.oasis.opendocument.image-template":{"source":"iana","extensions":["oti"]},"application/vnd.oasis.opendocument.presentation":{"source":"iana","compressible":false,"extensions":["odp"]},"application/vnd.oasis.opendocument.presentation-template":{"source":"iana","extensions":["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{"source":"iana","compressible":false,"extensions":["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{"source":"iana","extensions":["ots"]},"application/vnd.oasis.opendocument.text":{"source":"iana","compressible":false,"extensions":["odt"]},"application/vnd.oasis.opendocument.text-master":{"source":"iana","extensions":["odm"]},"application/vnd.oasis.opendocument.text-template":{"source":"iana","extensions":["ott"]},"application/vnd.oasis.opendocument.text-web":{"source":"iana","extensions":["oth"]},"application/vnd.obn":{"source":"iana"},"application/vnd.ocf+cbor":{"source":"iana"},"application/vnd.oci.image.manifest.v1+json":{"source":"iana","compressible":true},"application/vnd.oftn.l10n+json":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessdownload+xml":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessstreaming+xml":{"source":"iana","compressible":true},"application/vnd.oipf.cspg-hexbinary":{"source":"iana"},"application/vnd.oipf.dae.svg+xml":{"source":"iana","compressible":true},"application/vnd.oipf.dae.xhtml+xml":{"source":"iana","compressible":true},"application/vnd.oipf.mippvcontrolmessage+xml":{"source":"iana","compressible":true},"application/vnd.oipf.pae.gem":{"source":"iana"},"application/vnd.oipf.spdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.oipf.spdlist+xml":{"source":"iana","compressible":true},"application/vnd.oipf.ueprofile+xml":{"source":"iana","compressible":true},"application/vnd.oipf.userprofile+xml":{"source":"iana","compressible":true},"application/vnd.olpc-sugar":{"source":"iana","extensions":["xo"]},"application/vnd.oma-scws-config":{"source":"iana"},"application/vnd.oma-scws-http-request":{"source":"iana"},"application/vnd.oma-scws-http-response":{"source":"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.drm-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.imd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.ltkm":{"source":"iana"},"application/vnd.oma.bcast.notification+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.provisioningtrigger":{"source":"iana"},"application/vnd.oma.bcast.sgboot":{"source":"iana"},"application/vnd.oma.bcast.sgdd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sgdu":{"source":"iana"},"application/vnd.oma.bcast.simple-symbol-container":{"source":"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sprov+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.stkm":{"source":"iana"},"application/vnd.oma.cab-address-book+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-feature-handler+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-pcc+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-subs-invite+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-user-prefs+xml":{"source":"iana","compressible":true},"application/vnd.oma.dcd":{"source":"iana"},"application/vnd.oma.dcdc":{"source":"iana"},"application/vnd.oma.dd2+xml":{"source":"iana","compressible":true,"extensions":["dd2"]},"application/vnd.oma.drm.risd+xml":{"source":"iana","compressible":true},"application/vnd.oma.group-usage-list+xml":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+cbor":{"source":"iana"},"application/vnd.oma.lwm2m+json":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+tlv":{"source":"iana"},"application/vnd.oma.pal+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.detailed-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.final-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.groups+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.invocation-descriptor+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.optimized-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.push":{"source":"iana"},"application/vnd.oma.scidm.messages+xml":{"source":"iana","compressible":true},"application/vnd.oma.xcap-directory+xml":{"source":"iana","compressible":true},"application/vnd.omads-email+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omads-file+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omads-folder+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omaloc-supl-init":{"source":"iana"},"application/vnd.onepager":{"source":"iana"},"application/vnd.onepagertamp":{"source":"iana"},"application/vnd.onepagertamx":{"source":"iana"},"application/vnd.onepagertat":{"source":"iana"},"application/vnd.onepagertatp":{"source":"iana"},"application/vnd.onepagertatx":{"source":"iana"},"application/vnd.openblox.game+xml":{"source":"iana","compressible":true,"extensions":["obgx"]},"application/vnd.openblox.game-binary":{"source":"iana"},"application/vnd.openeye.oeb":{"source":"iana"},"application/vnd.openofficeorg.extension":{"source":"apache","extensions":["oxt"]},"application/vnd.openstreetmap.data+xml":{"source":"iana","compressible":true,"extensions":["osm"]},"application/vnd.opentimestamps.ots":{"source":"iana"},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawing+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{"source":"iana","compressible":false,"extensions":["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slide":{"source":"iana","extensions":["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{"source":"iana","extensions":["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.template":{"source":"iana","extensions":["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{"source":"iana","compressible":false,"extensions":["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{"source":"iana","extensions":["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.theme+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.vmldrawing":{"source":"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{"source":"iana","compressible":false,"extensions":["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{"source":"iana","extensions":["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.core-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.relationships+xml":{"source":"iana","compressible":true},"application/vnd.oracle.resource+json":{"source":"iana","compressible":true},"application/vnd.orange.indata":{"source":"iana"},"application/vnd.osa.netdeploy":{"source":"iana"},"application/vnd.osgeo.mapguide.package":{"source":"iana","extensions":["mgp"]},"application/vnd.osgi.bundle":{"source":"iana"},"application/vnd.osgi.dp":{"source":"iana","extensions":["dp"]},"application/vnd.osgi.subsystem":{"source":"iana","extensions":["esa"]},"application/vnd.otps.ct-kip+xml":{"source":"iana","compressible":true},"application/vnd.oxli.countgraph":{"source":"iana"},"application/vnd.pagerduty+json":{"source":"iana","compressible":true},"application/vnd.palm":{"source":"iana","extensions":["pdb","pqa","oprc"]},"application/vnd.panoply":{"source":"iana"},"application/vnd.paos.xml":{"source":"iana"},"application/vnd.patentdive":{"source":"iana"},"application/vnd.patientecommsdoc":{"source":"iana"},"application/vnd.pawaafile":{"source":"iana","extensions":["paw"]},"application/vnd.pcos":{"source":"iana"},"application/vnd.pg.format":{"source":"iana","extensions":["str"]},"application/vnd.pg.osasli":{"source":"iana","extensions":["ei6"]},"application/vnd.piaccess.application-licence":{"source":"iana"},"application/vnd.picsel":{"source":"iana","extensions":["efif"]},"application/vnd.pmi.widget":{"source":"iana","extensions":["wg"]},"application/vnd.poc.group-advertisement+xml":{"source":"iana","compressible":true},"application/vnd.pocketlearn":{"source":"iana","extensions":["plf"]},"application/vnd.powerbuilder6":{"source":"iana","extensions":["pbd"]},"application/vnd.powerbuilder6-s":{"source":"iana"},"application/vnd.powerbuilder7":{"source":"iana"},"application/vnd.powerbuilder7-s":{"source":"iana"},"application/vnd.powerbuilder75":{"source":"iana"},"application/vnd.powerbuilder75-s":{"source":"iana"},"application/vnd.preminet":{"source":"iana"},"application/vnd.previewsystems.box":{"source":"iana","extensions":["box"]},"application/vnd.proteus.magazine":{"source":"iana","extensions":["mgz"]},"application/vnd.psfs":{"source":"iana"},"application/vnd.publishare-delta-tree":{"source":"iana","extensions":["qps"]},"application/vnd.pvi.ptid1":{"source":"iana","extensions":["ptid"]},"application/vnd.pwg-multiplexed":{"source":"iana"},"application/vnd.pwg-xhtml-print+xml":{"source":"iana","compressible":true},"application/vnd.qualcomm.brew-app-res":{"source":"iana"},"application/vnd.quarantainenet":{"source":"iana"},"application/vnd.quark.quarkxpress":{"source":"iana","extensions":["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{"source":"iana"},"application/vnd.radisys.moml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conn+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-stream+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-base+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-detect+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-group+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-speech+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-transform+xml":{"source":"iana","compressible":true},"application/vnd.rainstor.data":{"source":"iana"},"application/vnd.rapid":{"source":"iana"},"application/vnd.rar":{"source":"iana","extensions":["rar"]},"application/vnd.realvnc.bed":{"source":"iana","extensions":["bed"]},"application/vnd.recordare.musicxml":{"source":"iana","extensions":["mxl"]},"application/vnd.recordare.musicxml+xml":{"source":"iana","compressible":true,"extensions":["musicxml"]},"application/vnd.renlearn.rlprint":{"source":"iana"},"application/vnd.resilient.logic":{"source":"iana"},"application/vnd.restful+json":{"source":"iana","compressible":true},"application/vnd.rig.cryptonote":{"source":"iana","extensions":["cryptonote"]},"application/vnd.rim.cod":{"source":"apache","extensions":["cod"]},"application/vnd.rn-realmedia":{"source":"apache","extensions":["rm"]},"application/vnd.rn-realmedia-vbr":{"source":"apache","extensions":["rmvb"]},"application/vnd.route66.link66+xml":{"source":"iana","compressible":true,"extensions":["link66"]},"application/vnd.rs-274x":{"source":"iana"},"application/vnd.ruckus.download":{"source":"iana"},"application/vnd.s3sms":{"source":"iana"},"application/vnd.sailingtracker.track":{"source":"iana","extensions":["st"]},"application/vnd.sar":{"source":"iana"},"application/vnd.sbm.cid":{"source":"iana"},"application/vnd.sbm.mid2":{"source":"iana"},"application/vnd.scribus":{"source":"iana"},"application/vnd.sealed.3df":{"source":"iana"},"application/vnd.sealed.csf":{"source":"iana"},"application/vnd.sealed.doc":{"source":"iana"},"application/vnd.sealed.eml":{"source":"iana"},"application/vnd.sealed.mht":{"source":"iana"},"application/vnd.sealed.net":{"source":"iana"},"application/vnd.sealed.ppt":{"source":"iana"},"application/vnd.sealed.tiff":{"source":"iana"},"application/vnd.sealed.xls":{"source":"iana"},"application/vnd.sealedmedia.softseal.html":{"source":"iana"},"application/vnd.sealedmedia.softseal.pdf":{"source":"iana"},"application/vnd.seemail":{"source":"iana","extensions":["see"]},"application/vnd.seis+json":{"source":"iana","compressible":true},"application/vnd.sema":{"source":"iana","extensions":["sema"]},"application/vnd.semd":{"source":"iana","extensions":["semd"]},"application/vnd.semf":{"source":"iana","extensions":["semf"]},"application/vnd.shade-save-file":{"source":"iana"},"application/vnd.shana.informed.formdata":{"source":"iana","extensions":["ifm"]},"application/vnd.shana.informed.formtemplate":{"source":"iana","extensions":["itp"]},"application/vnd.shana.informed.interchange":{"source":"iana","extensions":["iif"]},"application/vnd.shana.informed.package":{"source":"iana","extensions":["ipk"]},"application/vnd.shootproof+json":{"source":"iana","compressible":true},"application/vnd.shopkick+json":{"source":"iana","compressible":true},"application/vnd.shp":{"source":"iana"},"application/vnd.shx":{"source":"iana"},"application/vnd.sigrok.session":{"source":"iana"},"application/vnd.simtech-mindmapper":{"source":"iana","extensions":["twd","twds"]},"application/vnd.siren+json":{"source":"iana","compressible":true},"application/vnd.smaf":{"source":"iana","extensions":["mmf"]},"application/vnd.smart.notebook":{"source":"iana"},"application/vnd.smart.teacher":{"source":"iana","extensions":["teacher"]},"application/vnd.snesdev-page-table":{"source":"iana"},"application/vnd.software602.filler.form+xml":{"source":"iana","compressible":true,"extensions":["fo"]},"application/vnd.software602.filler.form-xml-zip":{"source":"iana"},"application/vnd.solent.sdkm+xml":{"source":"iana","compressible":true,"extensions":["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{"source":"iana","extensions":["dxp"]},"application/vnd.spotfire.sfs":{"source":"iana","extensions":["sfs"]},"application/vnd.sqlite3":{"source":"iana"},"application/vnd.sss-cod":{"source":"iana"},"application/vnd.sss-dtf":{"source":"iana"},"application/vnd.sss-ntf":{"source":"iana"},"application/vnd.stardivision.calc":{"source":"apache","extensions":["sdc"]},"application/vnd.stardivision.draw":{"source":"apache","extensions":["sda"]},"application/vnd.stardivision.impress":{"source":"apache","extensions":["sdd"]},"application/vnd.stardivision.math":{"source":"apache","extensions":["smf"]},"application/vnd.stardivision.writer":{"source":"apache","extensions":["sdw","vor"]},"application/vnd.stardivision.writer-global":{"source":"apache","extensions":["sgl"]},"application/vnd.stepmania.package":{"source":"iana","extensions":["smzip"]},"application/vnd.stepmania.stepchart":{"source":"iana","extensions":["sm"]},"application/vnd.street-stream":{"source":"iana"},"application/vnd.sun.wadl+xml":{"source":"iana","compressible":true,"extensions":["wadl"]},"application/vnd.sun.xml.calc":{"source":"apache","extensions":["sxc"]},"application/vnd.sun.xml.calc.template":{"source":"apache","extensions":["stc"]},"application/vnd.sun.xml.draw":{"source":"apache","extensions":["sxd"]},"application/vnd.sun.xml.draw.template":{"source":"apache","extensions":["std"]},"application/vnd.sun.xml.impress":{"source":"apache","extensions":["sxi"]},"application/vnd.sun.xml.impress.template":{"source":"apache","extensions":["sti"]},"application/vnd.sun.xml.math":{"source":"apache","extensions":["sxm"]},"application/vnd.sun.xml.writer":{"source":"apache","extensions":["sxw"]},"application/vnd.sun.xml.writer.global":{"source":"apache","extensions":["sxg"]},"application/vnd.sun.xml.writer.template":{"source":"apache","extensions":["stw"]},"application/vnd.sus-calendar":{"source":"iana","extensions":["sus","susp"]},"application/vnd.svd":{"source":"iana","extensions":["svd"]},"application/vnd.swiftview-ics":{"source":"iana"},"application/vnd.sycle+xml":{"source":"iana","compressible":true},"application/vnd.syft+json":{"source":"iana","compressible":true},"application/vnd.symbian.install":{"source":"apache","extensions":["sis","sisx"]},"application/vnd.syncml+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["xsm"]},"application/vnd.syncml.dm+wbxml":{"source":"iana","charset":"UTF-8","extensions":["bdm"]},"application/vnd.syncml.dm+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["xdm"]},"application/vnd.syncml.dm.notification":{"source":"iana"},"application/vnd.syncml.dmddf+wbxml":{"source":"iana"},"application/vnd.syncml.dmddf+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{"source":"iana"},"application/vnd.syncml.dmtnds+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.syncml.ds.notification":{"source":"iana"},"application/vnd.tableschema+json":{"source":"iana","compressible":true},"application/vnd.tao.intent-module-archive":{"source":"iana","extensions":["tao"]},"application/vnd.tcpdump.pcap":{"source":"iana","extensions":["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{"source":"iana","compressible":true},"application/vnd.tmd.mediaflex.api+xml":{"source":"iana","compressible":true},"application/vnd.tml":{"source":"iana"},"application/vnd.tmobile-livetv":{"source":"iana","extensions":["tmo"]},"application/vnd.tri.onesource":{"source":"iana"},"application/vnd.trid.tpt":{"source":"iana","extensions":["tpt"]},"application/vnd.triscape.mxs":{"source":"iana","extensions":["mxs"]},"application/vnd.trueapp":{"source":"iana","extensions":["tra"]},"application/vnd.truedoc":{"source":"iana"},"application/vnd.ubisoft.webplayer":{"source":"iana"},"application/vnd.ufdl":{"source":"iana","extensions":["ufd","ufdl"]},"application/vnd.uiq.theme":{"source":"iana","extensions":["utz"]},"application/vnd.umajin":{"source":"iana","extensions":["umj"]},"application/vnd.unity":{"source":"iana","extensions":["unityweb"]},"application/vnd.uoml+xml":{"source":"iana","compressible":true,"extensions":["uoml"]},"application/vnd.uplanet.alert":{"source":"iana"},"application/vnd.uplanet.alert-wbxml":{"source":"iana"},"application/vnd.uplanet.bearer-choice":{"source":"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{"source":"iana"},"application/vnd.uplanet.cacheop":{"source":"iana"},"application/vnd.uplanet.cacheop-wbxml":{"source":"iana"},"application/vnd.uplanet.channel":{"source":"iana"},"application/vnd.uplanet.channel-wbxml":{"source":"iana"},"application/vnd.uplanet.list":{"source":"iana"},"application/vnd.uplanet.list-wbxml":{"source":"iana"},"application/vnd.uplanet.listcmd":{"source":"iana"},"application/vnd.uplanet.listcmd-wbxml":{"source":"iana"},"application/vnd.uplanet.signal":{"source":"iana"},"application/vnd.uri-map":{"source":"iana"},"application/vnd.valve.source.material":{"source":"iana"},"application/vnd.vcx":{"source":"iana","extensions":["vcx"]},"application/vnd.vd-study":{"source":"iana"},"application/vnd.vectorworks":{"source":"iana"},"application/vnd.vel+json":{"source":"iana","compressible":true},"application/vnd.verimatrix.vcas":{"source":"iana"},"application/vnd.veritone.aion+json":{"source":"iana","compressible":true},"application/vnd.veryant.thin":{"source":"iana"},"application/vnd.ves.encrypted":{"source":"iana"},"application/vnd.vidsoft.vidconference":{"source":"iana"},"application/vnd.visio":{"source":"iana","extensions":["vsd","vst","vss","vsw"]},"application/vnd.visionary":{"source":"iana","extensions":["vis"]},"application/vnd.vividence.scriptfile":{"source":"iana"},"application/vnd.vsf":{"source":"iana","extensions":["vsf"]},"application/vnd.wap.sic":{"source":"iana"},"application/vnd.wap.slc":{"source":"iana"},"application/vnd.wap.wbxml":{"source":"iana","charset":"UTF-8","extensions":["wbxml"]},"application/vnd.wap.wmlc":{"source":"iana","extensions":["wmlc"]},"application/vnd.wap.wmlscriptc":{"source":"iana","extensions":["wmlsc"]},"application/vnd.webturbo":{"source":"iana","extensions":["wtb"]},"application/vnd.wfa.dpp":{"source":"iana"},"application/vnd.wfa.p2p":{"source":"iana"},"application/vnd.wfa.wsc":{"source":"iana"},"application/vnd.windows.devicepairing":{"source":"iana"},"application/vnd.wmc":{"source":"iana"},"application/vnd.wmf.bootstrap":{"source":"iana"},"application/vnd.wolfram.mathematica":{"source":"iana"},"application/vnd.wolfram.mathematica.package":{"source":"iana"},"application/vnd.wolfram.player":{"source":"iana","extensions":["nbp"]},"application/vnd.wordperfect":{"source":"iana","extensions":["wpd"]},"application/vnd.wqd":{"source":"iana","extensions":["wqd"]},"application/vnd.wrq-hp3000-labelled":{"source":"iana"},"application/vnd.wt.stf":{"source":"iana","extensions":["stf"]},"application/vnd.wv.csp+wbxml":{"source":"iana"},"application/vnd.wv.csp+xml":{"source":"iana","compressible":true},"application/vnd.wv.ssp+xml":{"source":"iana","compressible":true},"application/vnd.xacml+json":{"source":"iana","compressible":true},"application/vnd.xara":{"source":"iana","extensions":["xar"]},"application/vnd.xfdl":{"source":"iana","extensions":["xfdl"]},"application/vnd.xfdl.webform":{"source":"iana"},"application/vnd.xmi+xml":{"source":"iana","compressible":true},"application/vnd.xmpie.cpkg":{"source":"iana"},"application/vnd.xmpie.dpkg":{"source":"iana"},"application/vnd.xmpie.plan":{"source":"iana"},"application/vnd.xmpie.ppkg":{"source":"iana"},"application/vnd.xmpie.xlim":{"source":"iana"},"application/vnd.yamaha.hv-dic":{"source":"iana","extensions":["hvd"]},"application/vnd.yamaha.hv-script":{"source":"iana","extensions":["hvs"]},"application/vnd.yamaha.hv-voice":{"source":"iana","extensions":["hvp"]},"application/vnd.yamaha.openscoreformat":{"source":"iana","extensions":["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{"source":"iana","compressible":true,"extensions":["osfpvg"]},"application/vnd.yamaha.remote-setup":{"source":"iana"},"application/vnd.yamaha.smaf-audio":{"source":"iana","extensions":["saf"]},"application/vnd.yamaha.smaf-phrase":{"source":"iana","extensions":["spf"]},"application/vnd.yamaha.through-ngn":{"source":"iana"},"application/vnd.yamaha.tunnel-udpencap":{"source":"iana"},"application/vnd.yaoweme":{"source":"iana"},"application/vnd.yellowriver-custom-menu":{"source":"iana","extensions":["cmp"]},"application/vnd.youtube.yt":{"source":"iana"},"application/vnd.zul":{"source":"iana","extensions":["zir","zirz"]},"application/vnd.zzazz.deck+xml":{"source":"iana","compressible":true,"extensions":["zaz"]},"application/voicexml+xml":{"source":"iana","compressible":true,"extensions":["vxml"]},"application/voucher-cms+json":{"source":"iana","compressible":true},"application/vq-rtcpxr":{"source":"iana"},"application/wasm":{"source":"iana","compressible":true,"extensions":["wasm"]},"application/watcherinfo+xml":{"source":"iana","compressible":true,"extensions":["wif"]},"application/webpush-options+json":{"source":"iana","compressible":true},"application/whoispp-query":{"source":"iana"},"application/whoispp-response":{"source":"iana"},"application/widget":{"source":"iana","extensions":["wgt"]},"application/winhlp":{"source":"apache","extensions":["hlp"]},"application/wita":{"source":"iana"},"application/wordperfect5.1":{"source":"iana"},"application/wsdl+xml":{"source":"iana","compressible":true,"extensions":["wsdl"]},"application/wspolicy+xml":{"source":"iana","compressible":true,"extensions":["wspolicy"]},"application/x-7z-compressed":{"source":"apache","compressible":false,"extensions":["7z"]},"application/x-abiword":{"source":"apache","extensions":["abw"]},"application/x-ace-compressed":{"source":"apache","extensions":["ace"]},"application/x-amf":{"source":"apache"},"application/x-apple-diskimage":{"source":"apache","extensions":["dmg"]},"application/x-arj":{"compressible":false,"extensions":["arj"]},"application/x-authorware-bin":{"source":"apache","extensions":["aab","x32","u32","vox"]},"application/x-authorware-map":{"source":"apache","extensions":["aam"]},"application/x-authorware-seg":{"source":"apache","extensions":["aas"]},"application/x-bcpio":{"source":"apache","extensions":["bcpio"]},"application/x-bdoc":{"compressible":false,"extensions":["bdoc"]},"application/x-bittorrent":{"source":"apache","extensions":["torrent"]},"application/x-blorb":{"source":"apache","extensions":["blb","blorb"]},"application/x-bzip":{"source":"apache","compressible":false,"extensions":["bz"]},"application/x-bzip2":{"source":"apache","compressible":false,"extensions":["bz2","boz"]},"application/x-cbr":{"source":"apache","extensions":["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{"source":"apache","extensions":["vcd"]},"application/x-cfs-compressed":{"source":"apache","extensions":["cfs"]},"application/x-chat":{"source":"apache","extensions":["chat"]},"application/x-chess-pgn":{"source":"apache","extensions":["pgn"]},"application/x-chrome-extension":{"extensions":["crx"]},"application/x-cocoa":{"source":"nginx","extensions":["cco"]},"application/x-compress":{"source":"apache"},"application/x-conference":{"source":"apache","extensions":["nsc"]},"application/x-cpio":{"source":"apache","extensions":["cpio"]},"application/x-csh":{"source":"apache","extensions":["csh"]},"application/x-deb":{"compressible":false},"application/x-debian-package":{"source":"apache","extensions":["deb","udeb"]},"application/x-dgc-compressed":{"source":"apache","extensions":["dgc"]},"application/x-director":{"source":"apache","extensions":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{"source":"apache","extensions":["wad"]},"application/x-dtbncx+xml":{"source":"apache","compressible":true,"extensions":["ncx"]},"application/x-dtbook+xml":{"source":"apache","compressible":true,"extensions":["dtb"]},"application/x-dtbresource+xml":{"source":"apache","compressible":true,"extensions":["res"]},"application/x-dvi":{"source":"apache","compressible":false,"extensions":["dvi"]},"application/x-envoy":{"source":"apache","extensions":["evy"]},"application/x-eva":{"source":"apache","extensions":["eva"]},"application/x-font-bdf":{"source":"apache","extensions":["bdf"]},"application/x-font-dos":{"source":"apache"},"application/x-font-framemaker":{"source":"apache"},"application/x-font-ghostscript":{"source":"apache","extensions":["gsf"]},"application/x-font-libgrx":{"source":"apache"},"application/x-font-linux-psf":{"source":"apache","extensions":["psf"]},"application/x-font-pcf":{"source":"apache","extensions":["pcf"]},"application/x-font-snf":{"source":"apache","extensions":["snf"]},"application/x-font-speedo":{"source":"apache"},"application/x-font-sunos-news":{"source":"apache"},"application/x-font-type1":{"source":"apache","extensions":["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{"source":"apache"},"application/x-freearc":{"source":"apache","extensions":["arc"]},"application/x-futuresplash":{"source":"apache","extensions":["spl"]},"application/x-gca-compressed":{"source":"apache","extensions":["gca"]},"application/x-glulx":{"source":"apache","extensions":["ulx"]},"application/x-gnumeric":{"source":"apache","extensions":["gnumeric"]},"application/x-gramps-xml":{"source":"apache","extensions":["gramps"]},"application/x-gtar":{"source":"apache","extensions":["gtar"]},"application/x-gzip":{"source":"apache"},"application/x-hdf":{"source":"apache","extensions":["hdf"]},"application/x-httpd-php":{"compressible":true,"extensions":["php"]},"application/x-install-instructions":{"source":"apache","extensions":["install"]},"application/x-iso9660-image":{"source":"apache","extensions":["iso"]},"application/x-iwork-keynote-sffkey":{"extensions":["key"]},"application/x-iwork-numbers-sffnumbers":{"extensions":["numbers"]},"application/x-iwork-pages-sffpages":{"extensions":["pages"]},"application/x-java-archive-diff":{"source":"nginx","extensions":["jardiff"]},"application/x-java-jnlp-file":{"source":"apache","compressible":false,"extensions":["jnlp"]},"application/x-javascript":{"compressible":true},"application/x-keepass2":{"extensions":["kdbx"]},"application/x-latex":{"source":"apache","compressible":false,"extensions":["latex"]},"application/x-lua-bytecode":{"extensions":["luac"]},"application/x-lzh-compressed":{"source":"apache","extensions":["lzh","lha"]},"application/x-makeself":{"source":"nginx","extensions":["run"]},"application/x-mie":{"source":"apache","extensions":["mie"]},"application/x-mobipocket-ebook":{"source":"apache","extensions":["prc","mobi"]},"application/x-mpegurl":{"compressible":false},"application/x-ms-application":{"source":"apache","extensions":["application"]},"application/x-ms-shortcut":{"source":"apache","extensions":["lnk"]},"application/x-ms-wmd":{"source":"apache","extensions":["wmd"]},"application/x-ms-wmz":{"source":"apache","extensions":["wmz"]},"application/x-ms-xbap":{"source":"apache","extensions":["xbap"]},"application/x-msaccess":{"source":"apache","extensions":["mdb"]},"application/x-msbinder":{"source":"apache","extensions":["obd"]},"application/x-mscardfile":{"source":"apache","extensions":["crd"]},"application/x-msclip":{"source":"apache","extensions":["clp"]},"application/x-msdos-program":{"extensions":["exe"]},"application/x-msdownload":{"source":"apache","extensions":["exe","dll","com","bat","msi"]},"application/x-msmediaview":{"source":"apache","extensions":["mvb","m13","m14"]},"application/x-msmetafile":{"source":"apache","extensions":["wmf","wmz","emf","emz"]},"application/x-msmoney":{"source":"apache","extensions":["mny"]},"application/x-mspublisher":{"source":"apache","extensions":["pub"]},"application/x-msschedule":{"source":"apache","extensions":["scd"]},"application/x-msterminal":{"source":"apache","extensions":["trm"]},"application/x-mswrite":{"source":"apache","extensions":["wri"]},"application/x-netcdf":{"source":"apache","extensions":["nc","cdf"]},"application/x-ns-proxy-autoconfig":{"compressible":true,"extensions":["pac"]},"application/x-nzb":{"source":"apache","extensions":["nzb"]},"application/x-perl":{"source":"nginx","extensions":["pl","pm"]},"application/x-pilot":{"source":"nginx","extensions":["prc","pdb"]},"application/x-pkcs12":{"source":"apache","compressible":false,"extensions":["p12","pfx"]},"application/x-pkcs7-certificates":{"source":"apache","extensions":["p7b","spc"]},"application/x-pkcs7-certreqresp":{"source":"apache","extensions":["p7r"]},"application/x-pki-message":{"source":"iana"},"application/x-rar-compressed":{"source":"apache","compressible":false,"extensions":["rar"]},"application/x-redhat-package-manager":{"source":"nginx","extensions":["rpm"]},"application/x-research-info-systems":{"source":"apache","extensions":["ris"]},"application/x-sea":{"source":"nginx","extensions":["sea"]},"application/x-sh":{"source":"apache","compressible":true,"extensions":["sh"]},"application/x-shar":{"source":"apache","extensions":["shar"]},"application/x-shockwave-flash":{"source":"apache","compressible":false,"extensions":["swf"]},"application/x-silverlight-app":{"source":"apache","extensions":["xap"]},"application/x-sql":{"source":"apache","extensions":["sql"]},"application/x-stuffit":{"source":"apache","compressible":false,"extensions":["sit"]},"application/x-stuffitx":{"source":"apache","extensions":["sitx"]},"application/x-subrip":{"source":"apache","extensions":["srt"]},"application/x-sv4cpio":{"source":"apache","extensions":["sv4cpio"]},"application/x-sv4crc":{"source":"apache","extensions":["sv4crc"]},"application/x-t3vm-image":{"source":"apache","extensions":["t3"]},"application/x-tads":{"source":"apache","extensions":["gam"]},"application/x-tar":{"source":"apache","compressible":true,"extensions":["tar"]},"application/x-tcl":{"source":"apache","extensions":["tcl","tk"]},"application/x-tex":{"source":"apache","extensions":["tex"]},"application/x-tex-tfm":{"source":"apache","extensions":["tfm"]},"application/x-texinfo":{"source":"apache","extensions":["texinfo","texi"]},"application/x-tgif":{"source":"apache","extensions":["obj"]},"application/x-ustar":{"source":"apache","extensions":["ustar"]},"application/x-virtualbox-hdd":{"compressible":true,"extensions":["hdd"]},"application/x-virtualbox-ova":{"compressible":true,"extensions":["ova"]},"application/x-virtualbox-ovf":{"compressible":true,"extensions":["ovf"]},"application/x-virtualbox-vbox":{"compressible":true,"extensions":["vbox"]},"application/x-virtualbox-vbox-extpack":{"compressible":false,"extensions":["vbox-extpack"]},"application/x-virtualbox-vdi":{"compressible":true,"extensions":["vdi"]},"application/x-virtualbox-vhd":{"compressible":true,"extensions":["vhd"]},"application/x-virtualbox-vmdk":{"compressible":true,"extensions":["vmdk"]},"application/x-wais-source":{"source":"apache","extensions":["src"]},"application/x-web-app-manifest+json":{"compressible":true,"extensions":["webapp"]},"application/x-www-form-urlencoded":{"source":"iana","compressible":true},"application/x-x509-ca-cert":{"source":"iana","extensions":["der","crt","pem"]},"application/x-x509-ca-ra-cert":{"source":"iana"},"application/x-x509-next-ca-cert":{"source":"iana"},"application/x-xfig":{"source":"apache","extensions":["fig"]},"application/x-xliff+xml":{"source":"apache","compressible":true,"extensions":["xlf"]},"application/x-xpinstall":{"source":"apache","compressible":false,"extensions":["xpi"]},"application/x-xz":{"source":"apache","extensions":["xz"]},"application/x-zmachine":{"source":"apache","extensions":["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{"source":"iana"},"application/xacml+xml":{"source":"iana","compressible":true},"application/xaml+xml":{"source":"apache","compressible":true,"extensions":["xaml"]},"application/xcap-att+xml":{"source":"iana","compressible":true,"extensions":["xav"]},"application/xcap-caps+xml":{"source":"iana","compressible":true,"extensions":["xca"]},"application/xcap-diff+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/xcap-el+xml":{"source":"iana","compressible":true,"extensions":["xel"]},"application/xcap-error+xml":{"source":"iana","compressible":true},"application/xcap-ns+xml":{"source":"iana","compressible":true,"extensions":["xns"]},"application/xcon-conference-info+xml":{"source":"iana","compressible":true},"application/xcon-conference-info-diff+xml":{"source":"iana","compressible":true},"application/xenc+xml":{"source":"iana","compressible":true,"extensions":["xenc"]},"application/xhtml+xml":{"source":"iana","compressible":true,"extensions":["xhtml","xht"]},"application/xhtml-voice+xml":{"source":"apache","compressible":true},"application/xliff+xml":{"source":"iana","compressible":true,"extensions":["xlf"]},"application/xml":{"source":"iana","compressible":true,"extensions":["xml","xsl","xsd","rng"]},"application/xml-dtd":{"source":"iana","compressible":true,"extensions":["dtd"]},"application/xml-external-parsed-entity":{"source":"iana"},"application/xml-patch+xml":{"source":"iana","compressible":true},"application/xmpp+xml":{"source":"iana","compressible":true},"application/xop+xml":{"source":"iana","compressible":true,"extensions":["xop"]},"application/xproc+xml":{"source":"apache","compressible":true,"extensions":["xpl"]},"application/xslt+xml":{"source":"iana","compressible":true,"extensions":["xsl","xslt"]},"application/xspf+xml":{"source":"apache","compressible":true,"extensions":["xspf"]},"application/xv+xml":{"source":"iana","compressible":true,"extensions":["mxml","xhvml","xvml","xvm"]},"application/yang":{"source":"iana","extensions":["yang"]},"application/yang-data+json":{"source":"iana","compressible":true},"application/yang-data+xml":{"source":"iana","compressible":true},"application/yang-patch+json":{"source":"iana","compressible":true},"application/yang-patch+xml":{"source":"iana","compressible":true},"application/yin+xml":{"source":"iana","compressible":true,"extensions":["yin"]},"application/zip":{"source":"iana","compressible":false,"extensions":["zip"]},"application/zlib":{"source":"iana"},"application/zstd":{"source":"iana"},"audio/1d-interleaved-parityfec":{"source":"iana"},"audio/32kadpcm":{"source":"iana"},"audio/3gpp":{"source":"iana","compressible":false,"extensions":["3gpp"]},"audio/3gpp2":{"source":"iana"},"audio/aac":{"source":"iana"},"audio/ac3":{"source":"iana"},"audio/adpcm":{"source":"apache","extensions":["adp"]},"audio/amr":{"source":"iana","extensions":["amr"]},"audio/amr-wb":{"source":"iana"},"audio/amr-wb+":{"source":"iana"},"audio/aptx":{"source":"iana"},"audio/asc":{"source":"iana"},"audio/atrac-advanced-lossless":{"source":"iana"},"audio/atrac-x":{"source":"iana"},"audio/atrac3":{"source":"iana"},"audio/basic":{"source":"iana","compressible":false,"extensions":["au","snd"]},"audio/bv16":{"source":"iana"},"audio/bv32":{"source":"iana"},"audio/clearmode":{"source":"iana"},"audio/cn":{"source":"iana"},"audio/dat12":{"source":"iana"},"audio/dls":{"source":"iana"},"audio/dsr-es201108":{"source":"iana"},"audio/dsr-es202050":{"source":"iana"},"audio/dsr-es202211":{"source":"iana"},"audio/dsr-es202212":{"source":"iana"},"audio/dv":{"source":"iana"},"audio/dvi4":{"source":"iana"},"audio/eac3":{"source":"iana"},"audio/encaprtp":{"source":"iana"},"audio/evrc":{"source":"iana"},"audio/evrc-qcp":{"source":"iana"},"audio/evrc0":{"source":"iana"},"audio/evrc1":{"source":"iana"},"audio/evrcb":{"source":"iana"},"audio/evrcb0":{"source":"iana"},"audio/evrcb1":{"source":"iana"},"audio/evrcnw":{"source":"iana"},"audio/evrcnw0":{"source":"iana"},"audio/evrcnw1":{"source":"iana"},"audio/evrcwb":{"source":"iana"},"audio/evrcwb0":{"source":"iana"},"audio/evrcwb1":{"source":"iana"},"audio/evs":{"source":"iana"},"audio/flexfec":{"source":"iana"},"audio/fwdred":{"source":"iana"},"audio/g711-0":{"source":"iana"},"audio/g719":{"source":"iana"},"audio/g722":{"source":"iana"},"audio/g7221":{"source":"iana"},"audio/g723":{"source":"iana"},"audio/g726-16":{"source":"iana"},"audio/g726-24":{"source":"iana"},"audio/g726-32":{"source":"iana"},"audio/g726-40":{"source":"iana"},"audio/g728":{"source":"iana"},"audio/g729":{"source":"iana"},"audio/g7291":{"source":"iana"},"audio/g729d":{"source":"iana"},"audio/g729e":{"source":"iana"},"audio/gsm":{"source":"iana"},"audio/gsm-efr":{"source":"iana"},"audio/gsm-hr-08":{"source":"iana"},"audio/ilbc":{"source":"iana"},"audio/ip-mr_v2.5":{"source":"iana"},"audio/isac":{"source":"apache"},"audio/l16":{"source":"iana"},"audio/l20":{"source":"iana"},"audio/l24":{"source":"iana","compressible":false},"audio/l8":{"source":"iana"},"audio/lpc":{"source":"iana"},"audio/melp":{"source":"iana"},"audio/melp1200":{"source":"iana"},"audio/melp2400":{"source":"iana"},"audio/melp600":{"source":"iana"},"audio/mhas":{"source":"iana"},"audio/midi":{"source":"apache","extensions":["mid","midi","kar","rmi"]},"audio/mobile-xmf":{"source":"iana","extensions":["mxmf"]},"audio/mp3":{"compressible":false,"extensions":["mp3"]},"audio/mp4":{"source":"iana","compressible":false,"extensions":["m4a","mp4a"]},"audio/mp4a-latm":{"source":"iana"},"audio/mpa":{"source":"iana"},"audio/mpa-robust":{"source":"iana"},"audio/mpeg":{"source":"iana","compressible":false,"extensions":["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{"source":"iana"},"audio/musepack":{"source":"apache"},"audio/ogg":{"source":"iana","compressible":false,"extensions":["oga","ogg","spx","opus"]},"audio/opus":{"source":"iana"},"audio/parityfec":{"source":"iana"},"audio/pcma":{"source":"iana"},"audio/pcma-wb":{"source":"iana"},"audio/pcmu":{"source":"iana"},"audio/pcmu-wb":{"source":"iana"},"audio/prs.sid":{"source":"iana"},"audio/qcelp":{"source":"iana"},"audio/raptorfec":{"source":"iana"},"audio/red":{"source":"iana"},"audio/rtp-enc-aescm128":{"source":"iana"},"audio/rtp-midi":{"source":"iana"},"audio/rtploopback":{"source":"iana"},"audio/rtx":{"source":"iana"},"audio/s3m":{"source":"apache","extensions":["s3m"]},"audio/scip":{"source":"iana"},"audio/silk":{"source":"apache","extensions":["sil"]},"audio/smv":{"source":"iana"},"audio/smv-qcp":{"source":"iana"},"audio/smv0":{"source":"iana"},"audio/sofa":{"source":"iana"},"audio/sp-midi":{"source":"iana"},"audio/speex":{"source":"iana"},"audio/t140c":{"source":"iana"},"audio/t38":{"source":"iana"},"audio/telephone-event":{"source":"iana"},"audio/tetra_acelp":{"source":"iana"},"audio/tetra_acelp_bb":{"source":"iana"},"audio/tone":{"source":"iana"},"audio/tsvcis":{"source":"iana"},"audio/uemclip":{"source":"iana"},"audio/ulpfec":{"source":"iana"},"audio/usac":{"source":"iana"},"audio/vdvi":{"source":"iana"},"audio/vmr-wb":{"source":"iana"},"audio/vnd.3gpp.iufp":{"source":"iana"},"audio/vnd.4sb":{"source":"iana"},"audio/vnd.audiokoz":{"source":"iana"},"audio/vnd.celp":{"source":"iana"},"audio/vnd.cisco.nse":{"source":"iana"},"audio/vnd.cmles.radio-events":{"source":"iana"},"audio/vnd.cns.anp1":{"source":"iana"},"audio/vnd.cns.inf1":{"source":"iana"},"audio/vnd.dece.audio":{"source":"iana","extensions":["uva","uvva"]},"audio/vnd.digital-winds":{"source":"iana","extensions":["eol"]},"audio/vnd.dlna.adts":{"source":"iana"},"audio/vnd.dolby.heaac.1":{"source":"iana"},"audio/vnd.dolby.heaac.2":{"source":"iana"},"audio/vnd.dolby.mlp":{"source":"iana"},"audio/vnd.dolby.mps":{"source":"iana"},"audio/vnd.dolby.pl2":{"source":"iana"},"audio/vnd.dolby.pl2x":{"source":"iana"},"audio/vnd.dolby.pl2z":{"source":"iana"},"audio/vnd.dolby.pulse.1":{"source":"iana"},"audio/vnd.dra":{"source":"iana","extensions":["dra"]},"audio/vnd.dts":{"source":"iana","extensions":["dts"]},"audio/vnd.dts.hd":{"source":"iana","extensions":["dtshd"]},"audio/vnd.dts.uhd":{"source":"iana"},"audio/vnd.dvb.file":{"source":"iana"},"audio/vnd.everad.plj":{"source":"iana"},"audio/vnd.hns.audio":{"source":"iana"},"audio/vnd.lucent.voice":{"source":"iana","extensions":["lvp"]},"audio/vnd.ms-playready.media.pya":{"source":"iana","extensions":["pya"]},"audio/vnd.nokia.mobile-xmf":{"source":"iana"},"audio/vnd.nortel.vbk":{"source":"iana"},"audio/vnd.nuera.ecelp4800":{"source":"iana","extensions":["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{"source":"iana","extensions":["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{"source":"iana","extensions":["ecelp9600"]},"audio/vnd.octel.sbc":{"source":"iana"},"audio/vnd.presonus.multitrack":{"source":"iana"},"audio/vnd.qcelp":{"source":"iana"},"audio/vnd.rhetorex.32kadpcm":{"source":"iana"},"audio/vnd.rip":{"source":"iana","extensions":["rip"]},"audio/vnd.rn-realaudio":{"compressible":false},"audio/vnd.sealedmedia.softseal.mpeg":{"source":"iana"},"audio/vnd.vmx.cvsd":{"source":"iana"},"audio/vnd.wave":{"compressible":false},"audio/vorbis":{"source":"iana","compressible":false},"audio/vorbis-config":{"source":"iana"},"audio/wav":{"compressible":false,"extensions":["wav"]},"audio/wave":{"compressible":false,"extensions":["wav"]},"audio/webm":{"source":"apache","compressible":false,"extensions":["weba"]},"audio/x-aac":{"source":"apache","compressible":false,"extensions":["aac"]},"audio/x-aiff":{"source":"apache","extensions":["aif","aiff","aifc"]},"audio/x-caf":{"source":"apache","compressible":false,"extensions":["caf"]},"audio/x-flac":{"source":"apache","extensions":["flac"]},"audio/x-m4a":{"source":"nginx","extensions":["m4a"]},"audio/x-matroska":{"source":"apache","extensions":["mka"]},"audio/x-mpegurl":{"source":"apache","extensions":["m3u"]},"audio/x-ms-wax":{"source":"apache","extensions":["wax"]},"audio/x-ms-wma":{"source":"apache","extensions":["wma"]},"audio/x-pn-realaudio":{"source":"apache","extensions":["ram","ra"]},"audio/x-pn-realaudio-plugin":{"source":"apache","extensions":["rmp"]},"audio/x-realaudio":{"source":"nginx","extensions":["ra"]},"audio/x-tta":{"source":"apache"},"audio/x-wav":{"source":"apache","extensions":["wav"]},"audio/xm":{"source":"apache","extensions":["xm"]},"chemical/x-cdx":{"source":"apache","extensions":["cdx"]},"chemical/x-cif":{"source":"apache","extensions":["cif"]},"chemical/x-cmdf":{"source":"apache","extensions":["cmdf"]},"chemical/x-cml":{"source":"apache","extensions":["cml"]},"chemical/x-csml":{"source":"apache","extensions":["csml"]},"chemical/x-pdb":{"source":"apache"},"chemical/x-xyz":{"source":"apache","extensions":["xyz"]},"font/collection":{"source":"iana","extensions":["ttc"]},"font/otf":{"source":"iana","compressible":true,"extensions":["otf"]},"font/sfnt":{"source":"iana"},"font/ttf":{"source":"iana","compressible":true,"extensions":["ttf"]},"font/woff":{"source":"iana","extensions":["woff"]},"font/woff2":{"source":"iana","extensions":["woff2"]},"image/aces":{"source":"iana","extensions":["exr"]},"image/apng":{"compressible":false,"extensions":["apng"]},"image/avci":{"source":"iana","extensions":["avci"]},"image/avcs":{"source":"iana","extensions":["avcs"]},"image/avif":{"source":"iana","compressible":false,"extensions":["avif"]},"image/bmp":{"source":"iana","compressible":true,"extensions":["bmp"]},"image/cgm":{"source":"iana","extensions":["cgm"]},"image/dicom-rle":{"source":"iana","extensions":["drle"]},"image/emf":{"source":"iana","extensions":["emf"]},"image/fits":{"source":"iana","extensions":["fits"]},"image/g3fax":{"source":"iana","extensions":["g3"]},"image/gif":{"source":"iana","compressible":false,"extensions":["gif"]},"image/heic":{"source":"iana","extensions":["heic"]},"image/heic-sequence":{"source":"iana","extensions":["heics"]},"image/heif":{"source":"iana","extensions":["heif"]},"image/heif-sequence":{"source":"iana","extensions":["heifs"]},"image/hej2k":{"source":"iana","extensions":["hej2"]},"image/hsj2":{"source":"iana","extensions":["hsj2"]},"image/ief":{"source":"iana","extensions":["ief"]},"image/jls":{"source":"iana","extensions":["jls"]},"image/jp2":{"source":"iana","compressible":false,"extensions":["jp2","jpg2"]},"image/jpeg":{"source":"iana","compressible":false,"extensions":["jpeg","jpg","jpe"]},"image/jph":{"source":"iana","extensions":["jph"]},"image/jphc":{"source":"iana","extensions":["jhc"]},"image/jpm":{"source":"iana","compressible":false,"extensions":["jpm"]},"image/jpx":{"source":"iana","compressible":false,"extensions":["jpx","jpf"]},"image/jxr":{"source":"iana","extensions":["jxr"]},"image/jxra":{"source":"iana","extensions":["jxra"]},"image/jxrs":{"source":"iana","extensions":["jxrs"]},"image/jxs":{"source":"iana","extensions":["jxs"]},"image/jxsc":{"source":"iana","extensions":["jxsc"]},"image/jxsi":{"source":"iana","extensions":["jxsi"]},"image/jxss":{"source":"iana","extensions":["jxss"]},"image/ktx":{"source":"iana","extensions":["ktx"]},"image/ktx2":{"source":"iana","extensions":["ktx2"]},"image/naplps":{"source":"iana"},"image/pjpeg":{"compressible":false},"image/png":{"source":"iana","compressible":false,"extensions":["png"]},"image/prs.btif":{"source":"iana","extensions":["btif"]},"image/prs.pti":{"source":"iana","extensions":["pti"]},"image/pwg-raster":{"source":"iana"},"image/sgi":{"source":"apache","extensions":["sgi"]},"image/svg+xml":{"source":"iana","compressible":true,"extensions":["svg","svgz"]},"image/t38":{"source":"iana","extensions":["t38"]},"image/tiff":{"source":"iana","compressible":false,"extensions":["tif","tiff"]},"image/tiff-fx":{"source":"iana","extensions":["tfx"]},"image/vnd.adobe.photoshop":{"source":"iana","compressible":true,"extensions":["psd"]},"image/vnd.airzip.accelerator.azv":{"source":"iana","extensions":["azv"]},"image/vnd.cns.inf2":{"source":"iana"},"image/vnd.dece.graphic":{"source":"iana","extensions":["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{"source":"iana","extensions":["djvu","djv"]},"image/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"image/vnd.dwg":{"source":"iana","extensions":["dwg"]},"image/vnd.dxf":{"source":"iana","extensions":["dxf"]},"image/vnd.fastbidsheet":{"source":"iana","extensions":["fbs"]},"image/vnd.fpx":{"source":"iana","extensions":["fpx"]},"image/vnd.fst":{"source":"iana","extensions":["fst"]},"image/vnd.fujixerox.edmics-mmr":{"source":"iana","extensions":["mmr"]},"image/vnd.fujixerox.edmics-rlc":{"source":"iana","extensions":["rlc"]},"image/vnd.globalgraphics.pgb":{"source":"iana"},"image/vnd.microsoft.icon":{"source":"iana","compressible":true,"extensions":["ico"]},"image/vnd.mix":{"source":"iana"},"image/vnd.mozilla.apng":{"source":"iana"},"image/vnd.ms-dds":{"compressible":true,"extensions":["dds"]},"image/vnd.ms-modi":{"source":"iana","extensions":["mdi"]},"image/vnd.ms-photo":{"source":"apache","extensions":["wdp"]},"image/vnd.net-fpx":{"source":"iana","extensions":["npx"]},"image/vnd.pco.b16":{"source":"iana","extensions":["b16"]},"image/vnd.radiance":{"source":"iana"},"image/vnd.sealed.png":{"source":"iana"},"image/vnd.sealedmedia.softseal.gif":{"source":"iana"},"image/vnd.sealedmedia.softseal.jpg":{"source":"iana"},"image/vnd.svf":{"source":"iana"},"image/vnd.tencent.tap":{"source":"iana","extensions":["tap"]},"image/vnd.valve.source.texture":{"source":"iana","extensions":["vtf"]},"image/vnd.wap.wbmp":{"source":"iana","extensions":["wbmp"]},"image/vnd.xiff":{"source":"iana","extensions":["xif"]},"image/vnd.zbrush.pcx":{"source":"iana","extensions":["pcx"]},"image/webp":{"source":"apache","extensions":["webp"]},"image/wmf":{"source":"iana","extensions":["wmf"]},"image/x-3ds":{"source":"apache","extensions":["3ds"]},"image/x-cmu-raster":{"source":"apache","extensions":["ras"]},"image/x-cmx":{"source":"apache","extensions":["cmx"]},"image/x-freehand":{"source":"apache","extensions":["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{"source":"apache","compressible":true,"extensions":["ico"]},"image/x-jng":{"source":"nginx","extensions":["jng"]},"image/x-mrsid-image":{"source":"apache","extensions":["sid"]},"image/x-ms-bmp":{"source":"nginx","compressible":true,"extensions":["bmp"]},"image/x-pcx":{"source":"apache","extensions":["pcx"]},"image/x-pict":{"source":"apache","extensions":["pic","pct"]},"image/x-portable-anymap":{"source":"apache","extensions":["pnm"]},"image/x-portable-bitmap":{"source":"apache","extensions":["pbm"]},"image/x-portable-graymap":{"source":"apache","extensions":["pgm"]},"image/x-portable-pixmap":{"source":"apache","extensions":["ppm"]},"image/x-rgb":{"source":"apache","extensions":["rgb"]},"image/x-tga":{"source":"apache","extensions":["tga"]},"image/x-xbitmap":{"source":"apache","extensions":["xbm"]},"image/x-xcf":{"compressible":false},"image/x-xpixmap":{"source":"apache","extensions":["xpm"]},"image/x-xwindowdump":{"source":"apache","extensions":["xwd"]},"message/cpim":{"source":"iana"},"message/delivery-status":{"source":"iana"},"message/disposition-notification":{"source":"iana","extensions":["disposition-notification"]},"message/external-body":{"source":"iana"},"message/feedback-report":{"source":"iana"},"message/global":{"source":"iana","extensions":["u8msg"]},"message/global-delivery-status":{"source":"iana","extensions":["u8dsn"]},"message/global-disposition-notification":{"source":"iana","extensions":["u8mdn"]},"message/global-headers":{"source":"iana","extensions":["u8hdr"]},"message/http":{"source":"iana","compressible":false},"message/imdn+xml":{"source":"iana","compressible":true},"message/news":{"source":"iana"},"message/partial":{"source":"iana","compressible":false},"message/rfc822":{"source":"iana","compressible":true,"extensions":["eml","mime"]},"message/s-http":{"source":"iana"},"message/sip":{"source":"iana"},"message/sipfrag":{"source":"iana"},"message/tracking-status":{"source":"iana"},"message/vnd.si.simp":{"source":"iana"},"message/vnd.wfa.wsc":{"source":"iana","extensions":["wsc"]},"model/3mf":{"source":"iana","extensions":["3mf"]},"model/e57":{"source":"iana"},"model/gltf+json":{"source":"iana","compressible":true,"extensions":["gltf"]},"model/gltf-binary":{"source":"iana","compressible":true,"extensions":["glb"]},"model/iges":{"source":"iana","compressible":false,"extensions":["igs","iges"]},"model/mesh":{"source":"iana","compressible":false,"extensions":["msh","mesh","silo"]},"model/mtl":{"source":"iana","extensions":["mtl"]},"model/obj":{"source":"iana","extensions":["obj"]},"model/step":{"source":"iana"},"model/step+xml":{"source":"iana","compressible":true,"extensions":["stpx"]},"model/step+zip":{"source":"iana","compressible":false,"extensions":["stpz"]},"model/step-xml+zip":{"source":"iana","compressible":false,"extensions":["stpxz"]},"model/stl":{"source":"iana","extensions":["stl"]},"model/vnd.collada+xml":{"source":"iana","compressible":true,"extensions":["dae"]},"model/vnd.dwf":{"source":"iana","extensions":["dwf"]},"model/vnd.flatland.3dml":{"source":"iana"},"model/vnd.gdl":{"source":"iana","extensions":["gdl"]},"model/vnd.gs-gdl":{"source":"apache"},"model/vnd.gs.gdl":{"source":"iana"},"model/vnd.gtw":{"source":"iana","extensions":["gtw"]},"model/vnd.moml+xml":{"source":"iana","compressible":true},"model/vnd.mts":{"source":"iana","extensions":["mts"]},"model/vnd.opengex":{"source":"iana","extensions":["ogex"]},"model/vnd.parasolid.transmit.binary":{"source":"iana","extensions":["x_b"]},"model/vnd.parasolid.transmit.text":{"source":"iana","extensions":["x_t"]},"model/vnd.pytha.pyox":{"source":"iana"},"model/vnd.rosette.annotated-data-model":{"source":"iana"},"model/vnd.sap.vds":{"source":"iana","extensions":["vds"]},"model/vnd.usdz+zip":{"source":"iana","compressible":false,"extensions":["usdz"]},"model/vnd.valve.source.compiled-map":{"source":"iana","extensions":["bsp"]},"model/vnd.vtu":{"source":"iana","extensions":["vtu"]},"model/vrml":{"source":"iana","compressible":false,"extensions":["wrl","vrml"]},"model/x3d+binary":{"source":"apache","compressible":false,"extensions":["x3db","x3dbz"]},"model/x3d+fastinfoset":{"source":"iana","extensions":["x3db"]},"model/x3d+vrml":{"source":"apache","compressible":false,"extensions":["x3dv","x3dvz"]},"model/x3d+xml":{"source":"iana","compressible":true,"extensions":["x3d","x3dz"]},"model/x3d-vrml":{"source":"iana","extensions":["x3dv"]},"multipart/alternative":{"source":"iana","compressible":false},"multipart/appledouble":{"source":"iana"},"multipart/byteranges":{"source":"iana"},"multipart/digest":{"source":"iana"},"multipart/encrypted":{"source":"iana","compressible":false},"multipart/form-data":{"source":"iana","compressible":false},"multipart/header-set":{"source":"iana"},"multipart/mixed":{"source":"iana"},"multipart/multilingual":{"source":"iana"},"multipart/parallel":{"source":"iana"},"multipart/related":{"source":"iana","compressible":false},"multipart/report":{"source":"iana"},"multipart/signed":{"source":"iana","compressible":false},"multipart/vnd.bint.med-plus":{"source":"iana"},"multipart/voice-message":{"source":"iana"},"multipart/x-mixed-replace":{"source":"iana"},"text/1d-interleaved-parityfec":{"source":"iana"},"text/cache-manifest":{"source":"iana","compressible":true,"extensions":["appcache","manifest"]},"text/calendar":{"source":"iana","extensions":["ics","ifb"]},"text/calender":{"compressible":true},"text/cmd":{"compressible":true},"text/coffeescript":{"extensions":["coffee","litcoffee"]},"text/cql":{"source":"iana"},"text/cql-expression":{"source":"iana"},"text/cql-identifier":{"source":"iana"},"text/css":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["css"]},"text/csv":{"source":"iana","compressible":true,"extensions":["csv"]},"text/csv-schema":{"source":"iana"},"text/directory":{"source":"iana"},"text/dns":{"source":"iana"},"text/ecmascript":{"source":"iana"},"text/encaprtp":{"source":"iana"},"text/enriched":{"source":"iana"},"text/fhirpath":{"source":"iana"},"text/flexfec":{"source":"iana"},"text/fwdred":{"source":"iana"},"text/gff3":{"source":"iana"},"text/grammar-ref-list":{"source":"iana"},"text/html":{"source":"iana","compressible":true,"extensions":["html","htm","shtml"]},"text/jade":{"extensions":["jade"]},"text/javascript":{"source":"iana","compressible":true},"text/jcr-cnd":{"source":"iana"},"text/jsx":{"compressible":true,"extensions":["jsx"]},"text/less":{"compressible":true,"extensions":["less"]},"text/markdown":{"source":"iana","compressible":true,"extensions":["markdown","md"]},"text/mathml":{"source":"nginx","extensions":["mml"]},"text/mdx":{"compressible":true,"extensions":["mdx"]},"text/mizar":{"source":"iana"},"text/n3":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["n3"]},"text/parameters":{"source":"iana","charset":"UTF-8"},"text/parityfec":{"source":"iana"},"text/plain":{"source":"iana","compressible":true,"extensions":["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{"source":"iana","charset":"UTF-8"},"text/prs.fallenstein.rst":{"source":"iana"},"text/prs.lines.tag":{"source":"iana","extensions":["dsc"]},"text/prs.prop.logic":{"source":"iana"},"text/raptorfec":{"source":"iana"},"text/red":{"source":"iana"},"text/rfc822-headers":{"source":"iana"},"text/richtext":{"source":"iana","compressible":true,"extensions":["rtx"]},"text/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"text/rtp-enc-aescm128":{"source":"iana"},"text/rtploopback":{"source":"iana"},"text/rtx":{"source":"iana"},"text/sgml":{"source":"iana","extensions":["sgml","sgm"]},"text/shaclc":{"source":"iana"},"text/shex":{"source":"iana","extensions":["shex"]},"text/slim":{"extensions":["slim","slm"]},"text/spdx":{"source":"iana","extensions":["spdx"]},"text/strings":{"source":"iana"},"text/stylus":{"extensions":["stylus","styl"]},"text/t140":{"source":"iana"},"text/tab-separated-values":{"source":"iana","compressible":true,"extensions":["tsv"]},"text/troff":{"source":"iana","extensions":["t","tr","roff","man","me","ms"]},"text/turtle":{"source":"iana","charset":"UTF-8","extensions":["ttl"]},"text/ulpfec":{"source":"iana"},"text/uri-list":{"source":"iana","compressible":true,"extensions":["uri","uris","urls"]},"text/vcard":{"source":"iana","compressible":true,"extensions":["vcard"]},"text/vnd.a":{"source":"iana"},"text/vnd.abc":{"source":"iana"},"text/vnd.ascii-art":{"source":"iana"},"text/vnd.curl":{"source":"iana","extensions":["curl"]},"text/vnd.curl.dcurl":{"source":"apache","extensions":["dcurl"]},"text/vnd.curl.mcurl":{"source":"apache","extensions":["mcurl"]},"text/vnd.curl.scurl":{"source":"apache","extensions":["scurl"]},"text/vnd.debian.copyright":{"source":"iana","charset":"UTF-8"},"text/vnd.dmclientscript":{"source":"iana"},"text/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"text/vnd.esmertec.theme-descriptor":{"source":"iana","charset":"UTF-8"},"text/vnd.familysearch.gedcom":{"source":"iana","extensions":["ged"]},"text/vnd.ficlab.flt":{"source":"iana"},"text/vnd.fly":{"source":"iana","extensions":["fly"]},"text/vnd.fmi.flexstor":{"source":"iana","extensions":["flx"]},"text/vnd.gml":{"source":"iana"},"text/vnd.graphviz":{"source":"iana","extensions":["gv"]},"text/vnd.hans":{"source":"iana"},"text/vnd.hgl":{"source":"iana"},"text/vnd.in3d.3dml":{"source":"iana","extensions":["3dml"]},"text/vnd.in3d.spot":{"source":"iana","extensions":["spot"]},"text/vnd.iptc.newsml":{"source":"iana"},"text/vnd.iptc.nitf":{"source":"iana"},"text/vnd.latex-z":{"source":"iana"},"text/vnd.motorola.reflex":{"source":"iana"},"text/vnd.ms-mediapackage":{"source":"iana"},"text/vnd.net2phone.commcenter.command":{"source":"iana"},"text/vnd.radisys.msml-basic-layout":{"source":"iana"},"text/vnd.senx.warpscript":{"source":"iana"},"text/vnd.si.uricatalogue":{"source":"iana"},"text/vnd.sosi":{"source":"iana"},"text/vnd.sun.j2me.app-descriptor":{"source":"iana","charset":"UTF-8","extensions":["jad"]},"text/vnd.trolltech.linguist":{"source":"iana","charset":"UTF-8"},"text/vnd.wap.si":{"source":"iana"},"text/vnd.wap.sl":{"source":"iana"},"text/vnd.wap.wml":{"source":"iana","extensions":["wml"]},"text/vnd.wap.wmlscript":{"source":"iana","extensions":["wmls"]},"text/vtt":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["vtt"]},"text/x-asm":{"source":"apache","extensions":["s","asm"]},"text/x-c":{"source":"apache","extensions":["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{"source":"nginx","extensions":["htc"]},"text/x-fortran":{"source":"apache","extensions":["f","for","f77","f90"]},"text/x-gwt-rpc":{"compressible":true},"text/x-handlebars-template":{"extensions":["hbs"]},"text/x-java-source":{"source":"apache","extensions":["java"]},"text/x-jquery-tmpl":{"compressible":true},"text/x-lua":{"extensions":["lua"]},"text/x-markdown":{"compressible":true,"extensions":["mkd"]},"text/x-nfo":{"source":"apache","extensions":["nfo"]},"text/x-opml":{"source":"apache","extensions":["opml"]},"text/x-org":{"compressible":true,"extensions":["org"]},"text/x-pascal":{"source":"apache","extensions":["p","pas"]},"text/x-processing":{"compressible":true,"extensions":["pde"]},"text/x-sass":{"extensions":["sass"]},"text/x-scss":{"extensions":["scss"]},"text/x-setext":{"source":"apache","extensions":["etx"]},"text/x-sfv":{"source":"apache","extensions":["sfv"]},"text/x-suse-ymp":{"compressible":true,"extensions":["ymp"]},"text/x-uuencode":{"source":"apache","extensions":["uu"]},"text/x-vcalendar":{"source":"apache","extensions":["vcs"]},"text/x-vcard":{"source":"apache","extensions":["vcf"]},"text/xml":{"source":"iana","compressible":true,"extensions":["xml"]},"text/xml-external-parsed-entity":{"source":"iana"},"text/yaml":{"compressible":true,"extensions":["yaml","yml"]},"video/1d-interleaved-parityfec":{"source":"iana"},"video/3gpp":{"source":"iana","extensions":["3gp","3gpp"]},"video/3gpp-tt":{"source":"iana"},"video/3gpp2":{"source":"iana","extensions":["3g2"]},"video/av1":{"source":"iana"},"video/bmpeg":{"source":"iana"},"video/bt656":{"source":"iana"},"video/celb":{"source":"iana"},"video/dv":{"source":"iana"},"video/encaprtp":{"source":"iana"},"video/ffv1":{"source":"iana"},"video/flexfec":{"source":"iana"},"video/h261":{"source":"iana","extensions":["h261"]},"video/h263":{"source":"iana","extensions":["h263"]},"video/h263-1998":{"source":"iana"},"video/h263-2000":{"source":"iana"},"video/h264":{"source":"iana","extensions":["h264"]},"video/h264-rcdo":{"source":"iana"},"video/h264-svc":{"source":"iana"},"video/h265":{"source":"iana"},"video/iso.segment":{"source":"iana","extensions":["m4s"]},"video/jpeg":{"source":"iana","extensions":["jpgv"]},"video/jpeg2000":{"source":"iana"},"video/jpm":{"source":"apache","extensions":["jpm","jpgm"]},"video/jxsv":{"source":"iana"},"video/mj2":{"source":"iana","extensions":["mj2","mjp2"]},"video/mp1s":{"source":"iana"},"video/mp2p":{"source":"iana"},"video/mp2t":{"source":"iana","extensions":["ts"]},"video/mp4":{"source":"iana","compressible":false,"extensions":["mp4","mp4v","mpg4"]},"video/mp4v-es":{"source":"iana"},"video/mpeg":{"source":"iana","compressible":false,"extensions":["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{"source":"iana"},"video/mpv":{"source":"iana"},"video/nv":{"source":"iana"},"video/ogg":{"source":"iana","compressible":false,"extensions":["ogv"]},"video/parityfec":{"source":"iana"},"video/pointer":{"source":"iana"},"video/quicktime":{"source":"iana","compressible":false,"extensions":["qt","mov"]},"video/raptorfec":{"source":"iana"},"video/raw":{"source":"iana"},"video/rtp-enc-aescm128":{"source":"iana"},"video/rtploopback":{"source":"iana"},"video/rtx":{"source":"iana"},"video/scip":{"source":"iana"},"video/smpte291":{"source":"iana"},"video/smpte292m":{"source":"iana"},"video/ulpfec":{"source":"iana"},"video/vc1":{"source":"iana"},"video/vc2":{"source":"iana"},"video/vnd.cctv":{"source":"iana"},"video/vnd.dece.hd":{"source":"iana","extensions":["uvh","uvvh"]},"video/vnd.dece.mobile":{"source":"iana","extensions":["uvm","uvvm"]},"video/vnd.dece.mp4":{"source":"iana"},"video/vnd.dece.pd":{"source":"iana","extensions":["uvp","uvvp"]},"video/vnd.dece.sd":{"source":"iana","extensions":["uvs","uvvs"]},"video/vnd.dece.video":{"source":"iana","extensions":["uvv","uvvv"]},"video/vnd.directv.mpeg":{"source":"iana"},"video/vnd.directv.mpeg-tts":{"source":"iana"},"video/vnd.dlna.mpeg-tts":{"source":"iana"},"video/vnd.dvb.file":{"source":"iana","extensions":["dvb"]},"video/vnd.fvt":{"source":"iana","extensions":["fvt"]},"video/vnd.hns.video":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.ttsavc":{"source":"iana"},"video/vnd.iptvforum.ttsmpeg2":{"source":"iana"},"video/vnd.motorola.video":{"source":"iana"},"video/vnd.motorola.videop":{"source":"iana"},"video/vnd.mpegurl":{"source":"iana","extensions":["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{"source":"iana","extensions":["pyv"]},"video/vnd.nokia.interleaved-multimedia":{"source":"iana"},"video/vnd.nokia.mp4vr":{"source":"iana"},"video/vnd.nokia.videovoip":{"source":"iana"},"video/vnd.objectvideo":{"source":"iana"},"video/vnd.radgamettools.bink":{"source":"iana"},"video/vnd.radgamettools.smacker":{"source":"iana"},"video/vnd.sealed.mpeg1":{"source":"iana"},"video/vnd.sealed.mpeg4":{"source":"iana"},"video/vnd.sealed.swf":{"source":"iana"},"video/vnd.sealedmedia.softseal.mov":{"source":"iana"},"video/vnd.uvvu.mp4":{"source":"iana","extensions":["uvu","uvvu"]},"video/vnd.vivo":{"source":"iana","extensions":["viv"]},"video/vnd.youtube.yt":{"source":"iana"},"video/vp8":{"source":"iana"},"video/vp9":{"source":"iana"},"video/webm":{"source":"apache","compressible":false,"extensions":["webm"]},"video/x-f4v":{"source":"apache","extensions":["f4v"]},"video/x-fli":{"source":"apache","extensions":["fli"]},"video/x-flv":{"source":"apache","compressible":false,"extensions":["flv"]},"video/x-m4v":{"source":"apache","extensions":["m4v"]},"video/x-matroska":{"source":"apache","compressible":false,"extensions":["mkv","mk3d","mks"]},"video/x-mng":{"source":"apache","extensions":["mng"]},"video/x-ms-asf":{"source":"apache","extensions":["asf","asx"]},"video/x-ms-vob":{"source":"apache","extensions":["vob"]},"video/x-ms-wm":{"source":"apache","extensions":["wm"]},"video/x-ms-wmv":{"source":"apache","compressible":false,"extensions":["wmv"]},"video/x-ms-wmx":{"source":"apache","extensions":["wmx"]},"video/x-ms-wvx":{"source":"apache","extensions":["wvx"]},"video/x-msvideo":{"source":"apache","extensions":["avi"]},"video/x-sgi-movie":{"source":"apache","extensions":["movie"]},"video/x-smv":{"source":"apache","extensions":["smv"]},"x-conference/x-cooltalk":{"source":"apache","extensions":["ice"]},"x-shader/x-fragment":{"compressible":true},"x-shader/x-vertex":{"compressible":true}}')},72020:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var i=__webpack_module_cache__[e]={exports:{}};var s=true;try{__webpack_modules__[e].call(i.exports,i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete __webpack_module_cache__[e]}return i.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{const e=__nccwpck_require__(42186);const t=__nccwpck_require__(95438);const i=__nccwpck_require__(85004);async function run(){const s=t.context.payload;const r=s.repository.full_name;const o=s.commits;const l=o.length;const c=s.ref.split("/")[s.ref.split("/").length-1];console.log(`Received payload ${JSON.stringify(s,null,2)}`);console.log(`Received ${o.length}/${l} commits...`);const u=e.getInput("id");const m=e.getInput("token");i.send(u,m,r,c,s.compare,o,l).catch((t=>e.setFailed(t.message)))}try{run()}catch(t){e.setFailed(t.message)}})();module.exports=__webpack_exports__})();
